<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='7280' time_ms='1589042363399'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.161-b12
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.161-b12) for windows-amd64 JRE (1.8.0_161-b12), built on Dec 19 2017 17:52:25 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:CompileThreshold=1000 -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=hotspot.log -javaagent:D:\env\ide\idea\IntelliJ IDEA 2019.1.2\lib\idea_rt.jar=56965:D:\env\ide\idea\IntelliJ IDEA 2019.1.2\bin -Dfile.encoding=UTF-8 
</args>
<command>
me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.161-b12
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\env\jdk1.8.0_161\jre\lib\ext;C:\windows\Sun\Java\lib\ext
java.endorsed.dirs=D:\env\jdk1.8.0_161\jre\lib\endorsed
sun.boot.library.path=D:\env\jdk1.8.0_161\jre\bin
java.library.path=D:\env\jdk1.8.0_161\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;E:\install\software\xftp\;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\install\software\xshell\;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\libnvvp;D:\env\python36\Scripts\;D:\env\python36\;D:\env\jdk1.8.0_161\bin;D:\env\jdk1.8.0_161\jre\bin;C:\windows\system32;C:\windows\System32\Wbem;C:\windows;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\install\software\pandoc\;D:\env\mysql\mysql-8.0.11-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;E:\install\env\nvm-windows\nvm;E:\install\env\nvm-windows\nodejs;E:\install\env\ruby\Ruby26-x64\bin;D:\env\cygwin\bin;D:\env\flutter\flutter\bin;D:\env\jdk10\jdk;C:\Users\Administrator\AppData\Roaming\cabal\bin;D:\env\haskell\stack\bin;&quot;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;&quot;;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;C:\install\env\go\\bin;C:\install\software\cuDNN\cudnn-9.0-windows10-x64-v7.3.1.20\cuda\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\extras\CUPTI\libx64;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\.lein\bin;C:\install\ide\Microsoft VS Code\bin;D:\env\git\Git\bin;D:\env\maven\apache-maven-3.5.3-bin\apache-maven-3.5.3\bin;C:\Users\Administrator\AppData\Local\Android\Sdk\tools\bin;E:\install\ide\webstorm\WebStorm 2019.3.3\bin;;E:\install\env\nvm-windows\nvm;E:\install\env\nvm-windows\nodejs;E:\installenvnvm-windowsnvmpkg\node_modules\cnpm\bin;E:\installenvnvm-windowsnvmpkg;.
java.home=D:\env\jdk1.8.0_161\jre
java.class.path=D:\env\jdk1.8.0_161\jre\lib\charsets.jar;D:\env\jdk1.8.0_161\jre\lib\deploy.jar;D:\env\jdk1.8.0_161\jre\lib\ext\access-bridge-64.jar;D:\env\jdk1.8.0_161\jre\lib\ext\cldrdata.jar;D:\env\jdk1.8.0_161\jre\lib\ext\dnsns.jar;D:\env\jdk1.8.0_161\jre\lib\ext\jaccess.jar;D:\env\jdk1.8.0_161\jre\lib\ext\jfxrt.jar;D:\env\jdk1.8.0_161\jre\lib\ext\localedata.jar;D:\env\jdk1.8.0_161\jre\lib\ext\nashorn.jar;D:\env\jdk1.8.0_161\jre\lib\ext\sunec.jar;D:\env\jdk1.8.0_161\jre\lib\ext\sunjce_provider.jar;D:\env\jdk1.8.0_161\jre\lib\ext\sunmscapi.jar;D:\env\jdk1.8.0_161\jre\lib\ext\sunpkcs11.jar;D:\env\jdk1.8.0_161\jre\lib\ext\zipfs.jar;D:\env\jdk1.8.0_161\jre\lib\javaws.jar;D:\env\jdk1.8.0_161\jre\lib\jce.jar;D:\env\jdk1.8.0_161\jre\lib\jfr.jar;D:\env\jdk1.8.0_161\jre\lib\jfxswt.jar;D:\env\jdk1.8.0_161\jre\lib\jsse.jar;D:\env\jdk1.8.0_161\jre\lib\management-agent.jar;D:\env\jdk1.8.0_161\jre\lib\plugin.jar;D:\env\jdk1.8.0_161\jre\lib\resources.jar;D:\env\jdk1.8.0_161\jre\lib\rt.jar;D:\2019\October\git\boom-java\target\classes;C:\Users\Administrator\.m2\repository\org\openjdk\jcstress\jcstress-core\0.5\jcstress-core-0.5.jar;C:\Users\Administrator\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\Administrator\.m2\repository\org\ow2\asm\asm\7.2\asm-7.2.jar;C:\Users\Administrator\.m2\repository\org\openjdk\jol\jol-core\0.9\jol-core-0.9.jar;C:\Users\Administrator\.m2\repository\org\openjdk\jol\jol-cli\0.9\jol-cli-0.9.jar;C:\Users\Administrator\.m2\repository\org\projectlombok\lombok\1.18.10\lombok-1.18.10.jar;C:\Users\Administrator\.m2\repository\org\apache\logging\log4j\log4j-core\2.12.1\log4j-core-2.12.1.jar;C:\Users\Administrator\.m2\repository\org\apache\logging\log4j\log4j-api\2.12.1\log4j-api-2.12.1.jar;C:\Users\Administrator\.m2\repository\com\lmax\disruptor\3.4.2\disruptor-3.4.2.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.29\slf4j-api-1.7.29.jar;C:\Users\Administrator\.m2\repository\org\apache\logging\log4j\log4j-
sun.boot.class.path=D:\env\jdk1.8.0_161\jre\lib\resources.jar;D:\env\jdk1.8.0_161\jre\lib\rt.jar;D:\env\jdk1.8.0_161\jre\lib\sunrsasign.jar;D:\env\jdk1.8.0_161\jre\lib\jsse.jar;D:\env\jdk1.8.0_161\jre\lib\jce.jar;D:\env\jdk1.8.0_161\jre\lib\charsets.jar;D:\env\jdk1.8.0_161\jre\lib\jfr.jar;D:\env\jdk1.8.0_161\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='15116'/>
[Opened D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Object from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.Serializable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Comparable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.CharSequence from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.String from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Type from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Class from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Cloneable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.System from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Throwable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Error from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ThreadDeath from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Exception from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.RuntimeException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.SecurityManager from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.AccessControlContext from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.SecureClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ReflectiveOperationException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassNotFoundException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.LinkageError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.NoClassDefFoundError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassCastException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ArrayStoreException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.VirtualMachineError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.OutOfMemoryError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StackOverflowError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.IllegalMonitorStateException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.SoftReference from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.WeakReference from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.FinalReference from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.PhantomReference from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Cleaner from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Runnable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Thread from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ThreadGroup from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Map from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Dictionary from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Hashtable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Properties from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.AccessibleObject from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Member from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Field from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Parameter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Executable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Method from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Constructor from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessor from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessor from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ConstantPool from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessor from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.annotation.Annotation from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.CallerSensitive from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandle from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.LambdaForm from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodType from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.BootstrapMethodError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.CallSite from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MutableCallSite from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Appendable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.AbstractStringBuilder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StringBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StringBuilder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Unsafe from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.AutoCloseable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.Closeable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.InputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ByteArrayInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.File from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URL from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.CodeSource from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StackTraceElement from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.Buffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Boolean from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Character from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Number from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Float from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Double from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Byte from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Short from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Integer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Long from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.NullPointerException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ArithmeticException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ObjectStreamField from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Comparator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Guard from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Permission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.BasicPermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.RuntimePermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.AccessController from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectPermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.PrivilegedAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.cert.Certificate from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Iterable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.List from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.RandomAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Vector from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Stack from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$Lock from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.InterruptedException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.ArrayList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Set from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractSet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptySet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangRefAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.SharedSecrets from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.Reflection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.HashMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Map$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.HashMap$Node from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.VM from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Math from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.PreHashedMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Class$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Class$ReflectionData from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Class$Atomic from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Class$AnnotationData from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Modifier from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.LangReflectAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Arrays from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Opened D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded sun.nio.cs.AbstractCharsetProvider from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.ExtendedCharsets from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded java.lang.Class$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.SortedMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.NavigableMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.TreeMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.TreeMap$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.GBK from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded java.lang.StringCoding from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ext.DelegatableDecoder from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ArrayDecoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetDecoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Decoder from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded java.nio.charset.CodingErrorAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Hashtable$EntrySet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedSet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Objects from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Enumeration from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Iterator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Enumerator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Runtime from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Version from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.Flushable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.OutputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileOutputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FilterInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.BufferedInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.PrivilegedExceptionAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FilterOutputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.PrintStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.BufferedOutputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.Writer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.OutputStreamWriter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamEncoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.action.GetPropertyAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.Unicode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetEncoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.ByteBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.HeapByteBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.Bits from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.ByteOrder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaNioAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.Bits$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.BufferedWriter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.DefaultFileSystem from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileSystem from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.WinNTFileSystem from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Enum from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.File$PathStatus from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.file.Watchable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.file.Path from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Encoder from D:\env\jdk1.8.0_161\jre\lib\charsets.jar]
[Loaded java.lang.Readable from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.CharBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.HeapCharBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Terminator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.SignalHandler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Terminator$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Signal from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.NativeSignalHandler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Integer$IntegerCache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.OSEnvironment from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.io.Win32ErrorMode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.System$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.IllegalArgumentException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Compiler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Compiler$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandlerFactory from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$Factory from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.Debug from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Collections$SetFromMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$KeySet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaNetAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$7 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.StringTokenizer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.MetaIndex from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.Reader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.BufferedReader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.InputStreamReader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileReader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamDecoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.Array from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Locale from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Locale$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.Lock from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Locale$LocaleKey from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleUtils from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.CharacterData from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.CharacterDataLatin1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.HashMap$TreeNode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FileInputStream$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.ParseUtil from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.BitSet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.Parts from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.Handler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$Key from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Principal from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.HashSet from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.SystemClassLoaderAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.InternalError from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.instrument.Instrumentation from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.instrument.InstrumentationImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager$TransformerInfo from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.util.URLUtil from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$Loader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipConstants from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.FileURLMapper from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.charset.StandardCharsets from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.US_ASCII from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16BE from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16LE from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Queue from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Deque from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.ArrayDeque from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipCoder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Perf from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.ch.DirectBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.MappedByteBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.DirectByteBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.LongBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.nio.DirectLongBufferU from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.JarIndex from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipEntry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JarEntry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractSequentialList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.LinkedList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.LinkedList$Node from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.ExtensionDependency from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.IOUtils from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.Inflater from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZStreamRef from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.InflaterInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.Resource from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes$Name from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.CodeSigner from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.ByteArrayOutputStream from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.Package from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.AlgorithmConstraints from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.AlgorithmDecomposer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Node from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$4 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$LastNode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$GroupHead from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$CharProperty from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BmpCharProperty from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Single from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceNode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Slice from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Begin from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$First from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Start from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$TreeInfo from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.ASCII from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceI from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BranchConn from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Branch from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Security from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Security$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Properties$LineReader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.ListIterator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraints from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BnM from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.MatchResult from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.regex.Matcher from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.Arrays$ArrayList from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.util.AbstractList$Itr from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$DisabledConstraint from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.nio.ByteBuffered from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.PermissionCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.Permissions from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.URLConnection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.URLConnection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.net.www.MessageHeader from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FilePermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FilePermission$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.io.FilePermissionCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.AllPermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.UnresolvedPermission from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.security.BasicPermissionCollection from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$Agent from file:/D:/env/ide/idea/IntelliJ%20IDEA%202019.1.2/lib/idea_rt.jar]
[Loaded sun.instrument.InstrumentationImpl$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2 from file:/D:/env/ide/idea/IntelliJ%20IDEA%202019.1.2/lib/idea_rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$1 from file:/D:/env/ide/idea/IntelliJ%20IDEA%202019.1.2/lib/idea_rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.reflect.InvocationTargetException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodException from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded java.net.Socket from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.SocketAddress from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetSocketAddress from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetAddress from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.security.action.GetBooleanAction from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetAddress$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<task_queued compile_id='1' method='java/lang/String charAt (I)C' bytes='29' count='114176' iicount='114176' stamp='0.188' comment='tiered' hot_count='114176'/>
<writer thread='15116'/>
[Loaded java.lang.invoke.MethodHandleImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
<task_queued compile_id='2' method='java/lang/String lastIndexOf (II)I' bytes='52' count='187' backedge_count='10240' iicount='187' level='3' stamp='0.188' comment='tiered' hot_count='187'/>
<task_queued compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='7937' iicount='7937' stamp='0.188' comment='tiered' hot_count='7936'/>
<task_queued compile_id='4' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='3456' iicount='3456' level='3' stamp='0.188' comment='tiered' hot_count='3456'/>
<writer thread='15116'/>
[Loaded java.lang.invoke.MethodHandleImpl$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<task_queued compile_id='5' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='770' iicount='770' level='3' stamp='0.188' comment='tiered' hot_count='769'/>
<writer thread='24564'/>
<task_queued compile_id='6' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='38264' backedge_count='14177' iicount='38264' stamp='0.188' comment='tiered' hot_count='38264'/>
<writer thread='15116'/>
[Loaded java.util.function.Function from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassValue from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
<task_queued compile_id='7' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='640' iicount='640' level='3' stamp='0.189' comment='tiered' hot_count='640'/>
<writer thread='15116'/>
[Loaded java.lang.ClassValue$Entry from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Identity from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Version from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='18648'/>
<thread_logfile thread='18648' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c18648_pid7280.log'/>
<writer thread='15116'/>
[Loaded java.lang.invoke.MethodHandleStatics from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<task_queued compile_id='8' method='java/lang/String hashCode ()I' bytes='55' count='2248' backedge_count='32768' iicount='2248' stamp='0.189' comment='tiered' hot_count='2248'/>
<writer thread='22908'/>
<thread_logfile thread='22908' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c22908_pid7280.log'/>
<writer thread='24564'/>
[Loaded java.net.InetAddress$InetAddressHolder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetAddress$Cache from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Loaded java.net.InetAddress$Cache$Type from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='14484'/>
<thread_logfile thread='14484' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c14484_pid7280.log'/>
<writer thread='24564'/>
[Loaded java.net.InetAddressImplFactory from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded sun.misc.PostVMInitHook from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='20704'/>
<thread_logfile thread='20704' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c20704_pid7280.log'/>
<writer thread='24564'/>
[Loaded java.net.InetAddressImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.Inet6AddressImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='11168'/>
<thread_logfile thread='11168' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c11168_pid7280.log'/>
<writer thread='15116'/>
[Loaded sun.usagetracker.UsageTrackerClient from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded sun.net.spi.nameservice.NameService from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.InetAddress$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='18044'/>
<thread_logfile thread='18044' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c18044_pid7280.log'/>
<writer thread='15116'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='22060'/>
<thread_logfile thread='22060' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c22060_pid7280.log'/>
<writer thread='11292'/>
<thread_logfile thread='11292' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c11292_pid7280.log'/>
<writer thread='1628'/>
<thread_logfile thread='1628' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c1628_pid7280.log'/>
<writer thread='12568'/>
<thread_logfile thread='12568' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c12568_pid7280.log'/>
<writer thread='25016'/>
<thread_logfile thread='25016' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c25016_pid7280.log'/>
<writer thread='1724'/>
<thread_logfile thread='1724' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c1724_pid7280.log'/>
<writer thread='24564'/>
Loaded disassembler from hsdis-amd64.dll
Decoding compiled method 0x0000000004d8a510:
Code:
Argument 0 is unknown.RIP: 0x4d8a680 Code size: 0x00000220
[Disassembling for mach=&apos;amd64&apos;]
[Entry Point]
  # {method} {0x000000001e2b96c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000004d8a680: mov     r10d,dword ptr [rdx+8h]
  0x0000000004d8a684: shl     r10,3h
  0x0000000004d8a688: cmp     rax,r10
  0x0000000004d8a68b: je      4d8a698h
  0x0000000004d8a691: jmp     4d55f60h          ;   {runtime_call}
  0x0000000004d8a696: nop
[Verified Entry Point]
  0x0000000004d8a698: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004d8a69f: push    rbp
  0x0000000004d8a6a0: mov     rbp,rsp
  0x0000000004d8a6a3: sub     rsp,80h
  0x0000000004d8a6aa: mov     qword ptr [rsp+30h],rsi
  0x0000000004d8a6af: mov     qword ptr [rsp+28h],rdi
  0x0000000004d8a6b4: mov     qword ptr [rsp+48h],r9
  0x0000000004d8a6b9: cmp     r9,0h
  0x0000000004d8a6bd: lea     rax,[rsp+48h]
  0x0000000004d8a6c2: cmove   rax,qword ptr [rsp+48h]
  0x0000000004d8a6c8: mov     qword ptr [rsp+20h],rax
  0x0000000004d8a6cd: mov     r9,r8
  0x0000000004d8a6d0: mov     qword ptr [rsp+38h],rdx
  0x0000000004d8a6d5: cmp     rdx,0h
  0x0000000004d8a6d9: lea     r8,[rsp+38h]
  0x0000000004d8a6de: cmove   r8,qword ptr [rsp+38h]
  0x0000000004d8a6e4: mov     r14,76b000c78h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000004d8a6ee: mov     qword ptr [rsp+68h],r14
  0x0000000004d8a6f3: lea     r14,[rsp+68h]
  0x0000000004d8a6f8: mov     rdx,r14           ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000004d8a6fb: mov     r10,4d8a6fbh      ;   {section_word}
  0x0000000004d8a705: mov     qword ptr [r15+1e0h],r10
  0x0000000004d8a70c: mov     qword ptr [r15+1d8h],rsp
  0x0000000004d8a713: cmp     byte ptr [63be08f2h],0h  ;   {external_word}
  0x0000000004d8a71a: je      4d8a762h
  0x0000000004d8a720: push    rdx
  0x0000000004d8a721: push    r8
  0x0000000004d8a723: push    r9
  0x0000000004d8a725: mov     rdx,1e2b96b8h     ;   {metadata({method} {0x000000001e2b96c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000004d8a72f: mov     rcx,r15
  0x0000000004d8a732: sub     rsp,20h
  0x0000000004d8a736: test    esp,0fh
  0x0000000004d8a73c: je      4d8a754h
  0x0000000004d8a742: sub     rsp,8h
  0x0000000004d8a746: call    635fcd10h         ;   {runtime_call}
  0x0000000004d8a74b: add     rsp,8h
  0x0000000004d8a74f: jmp     4d8a759h
  0x0000000004d8a754: call    635fcd10h         ;   {runtime_call}
  0x0000000004d8a759: add     rsp,20h
  0x0000000004d8a75d: pop     r9
  0x0000000004d8a75f: pop     r8
  0x0000000004d8a761: pop     rdx
  0x0000000004d8a762: lea     rcx,[r15+1f8h]
  0x0000000004d8a769: mov     dword ptr [r15+270h],4h
  0x0000000004d8a774: call    651d0de6h         ;   {runtime_call}
  0x0000000004d8a779: vzeroupper
  0x0000000004d8a77c: mov     dword ptr [r15+270h],5h
  0x0000000004d8a787: mov     ecx,r15d
  0x0000000004d8a78a: shr     ecx,4h
  0x0000000004d8a78d: and     ecx,0ffch
  0x0000000004d8a793: mov     r10,4860000h      ;   {external_word}
  0x0000000004d8a79d: mov     dword ptr [r10+rcx],ecx
  0x0000000004d8a7a1: cmp     dword ptr [63be14d0h],0h
                                                ;   {external_word}
  0x0000000004d8a7ab: jne     4d8a7bfh
  0x0000000004d8a7b1: cmp     dword ptr [r15+30h],0h
  0x0000000004d8a7b9: je      4d8a7d8h
  0x0000000004d8a7bf: mov     rcx,r15
  0x0000000004d8a7c2: mov     r12,rsp
  0x0000000004d8a7c5: sub     rsp,20h
  0x0000000004d8a7c9: and     rsp,0fffffffffffffff0h
  0x0000000004d8a7cd: call    63613ef0h         ;   {runtime_call}
  0x0000000004d8a7d2: mov     rsp,r12
  0x0000000004d8a7d5: xor     r12,r12
  0x0000000004d8a7d8: mov     dword ptr [r15+270h],8h
  0x0000000004d8a7e3: cmp     dword ptr [r15+29ch],1h
  0x0000000004d8a7ee: je      4d8a87eh
  0x0000000004d8a7f4: cmp     byte ptr [63be08f2h],0h  ;   {external_word}
  0x0000000004d8a7fb: je      4d8a839h
  0x0000000004d8a801: mov     rdx,1e2b96b8h     ;   {metadata({method} {0x000000001e2b96c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000004d8a80b: mov     rcx,r15
  0x0000000004d8a80e: sub     rsp,20h
  0x0000000004d8a812: test    esp,0fh
  0x0000000004d8a818: je      4d8a830h
  0x0000000004d8a81e: sub     rsp,8h
  0x0000000004d8a822: call    635fcd10h         ;   {runtime_call}
  0x0000000004d8a827: add     rsp,8h
  0x0000000004d8a82b: jmp     4d8a835h
  0x0000000004d8a830: call    635fcd10h         ;   {runtime_call}
  0x0000000004d8a835: add     rsp,20h
  0x0000000004d8a839: mov     r10,0h
  0x0000000004d8a843: mov     qword ptr [r15+1d8h],r10
  0x0000000004d8a84a: mov     r10,0h
  0x0000000004d8a854: mov     qword ptr [r15+1e0h],r10
  0x0000000004d8a85b: mov     rcx,qword ptr [r15+38h]
  0x0000000004d8a85f: mov     dword ptr [rcx+100h],0h
  0x0000000004d8a869: leave
  0x0000000004d8a86a: cmp     qword ptr [r15+8h],0h
  0x0000000004d8a872: jne     4d8a879h
  0x0000000004d8a878: ret
  0x0000000004d8a879: jmp     4d107e0h          ;   {runtime_call}
  0x0000000004d8a87e: mov     r12,rsp
  0x0000000004d8a881: sub     rsp,20h
  0x0000000004d8a885: and     rsp,0fffffffffffffff0h
  0x0000000004d8a889: call    635fcd30h         ;   {runtime_call}
  0x0000000004d8a88e: mov     rsp,r12
  0x0000000004d8a891: xor     r12,r12
  0x0000000004d8a894: jmp     4d8a7f4h
  0x0000000004d8a899: hlt
  0x0000000004d8a89a: hlt
  0x0000000004d8a89b: hlt
  0x0000000004d8a89c: hlt
  0x0000000004d8a89d: hlt
  0x0000000004d8a89e: hlt
  0x0000000004d8a89f: hlt
<nmethod compile_id='9' compile_kind='c2n' level='0' entry='0x0000000004d8a680' size='912' address='0x0000000004d8a510' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='4224' iicount='4224' stamp='0.204'/>
<task_queued compile_id='10' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='5888' iicount='5888' level='3' stamp='0.204' comment='tiered' hot_count='5888'/>
<task_queued compile_id='11' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='5888' iicount='5888' level='3' stamp='0.204' comment='tiered' hot_count='5888'/>
<writer thread='15116'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded sun.net.util.IPAddressUtil from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded java.net.Inet4Address from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded sun.usagetracker.UsageTrackerClient$2 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded jdk.internal.util.EnvUtils from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
Decoding compiled method 0x0000000004fc3a50:
Code:
Argument 0 is unknown.RIP: 0x4fc3ba0 Code size: 0x00000190
<writer thread='24564'/>
[Loaded java.net.SocksConsts from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e4725d0} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc3ba0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc3ba4: shl     r10,3h
  0x0000000004fc3ba8: cmp     r10,rax
  0x0000000004fc3bab: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc3bb1: nop     dword ptr [rax+rax+0h]
  0x0000000004fc3bb9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fc3bc0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc3bc7: push    rbp
  0x0000000004fc3bc8: sub     rsp,30h
  0x0000000004fc3bcc: mov     rax,1e4738d8h
  0x0000000004fc3bd6: mov     esi,dword ptr [rax+8h]
  0x0000000004fc3bd9: add     esi,8h
  0x0000000004fc3bdc: mov     dword ptr [rax+8h],esi
  0x0000000004fc3bdf: mov     rax,1e4725c8h     ;   {metadata({method} {0x000000001e4725d0} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000004fc3be9: and     esi,3ff8h
  0x0000000004fc3bef: cmp     esi,0h
  0x0000000004fc3bf2: je      4fc3c26h          ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000004fc3bf8: and     r8d,0ffffh
  0x0000000004fc3bff: mov     rax,76b08db18h    ;   {oop([I)}
  0x0000000004fc3c09: movsxd  rsi,r8d
  0x0000000004fc3c0c: cmp     r8d,dword ptr [rax+0ch]  ; implicit exception: dispatches to 0x0000000004fc3c3a
  0x0000000004fc3c10: jnb     4fc3c44h
  0x0000000004fc3c16: mov     eax,dword ptr [rax+rsi*4+10h]
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000004fc3c1a: add     rsp,30h
  0x0000000004fc3c1e: pop     rbp
  0x0000000004fc3c1f: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc3c25: ret
  0x0000000004fc3c26: mov     qword ptr [rsp+8h],rax
  0x0000000004fc3c2b: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc3c33: call    4fc0d20h          ; OopMap{rdx=Oop off=152}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000004fc3c38: jmp     4fc3bf8h
  0x0000000004fc3c3a: call    4d88100h          ; OopMap{rax=Oop off=159}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000004fc3c3f: call    4d88100h          ; OopMap{rax=Oop off=164}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000004fc3c44: mov     qword ptr [rsp],r8
  0x0000000004fc3c48: call    4d888c0h          ; OopMap{rax=Oop off=173}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000004fc3c4d: nop
  0x0000000004fc3c4e: nop
  0x0000000004fc3c4f: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc3c56: mov     r10,0h
  0x0000000004fc3c60: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc3c67: mov     r10,0h
  0x0000000004fc3c71: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc3c78: add     rsp,30h
  0x0000000004fc3c7c: pop     rbp
  0x0000000004fc3c7d: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc3c82: hlt
  0x0000000004fc3c83: hlt
  0x0000000004fc3c84: hlt
  0x0000000004fc3c85: hlt
  0x0000000004fc3c86: hlt
  0x0000000004fc3c87: hlt
  0x0000000004fc3c88: hlt
  0x0000000004fc3c89: hlt
  0x0000000004fc3c8a: hlt
  0x0000000004fc3c8b: hlt
  0x0000000004fc3c8c: hlt
  0x0000000004fc3c8d: hlt
  0x0000000004fc3c8e: hlt
  0x0000000004fc3c8f: hlt
  0x0000000004fc3c90: hlt
  0x0000000004fc3c91: hlt
  0x0000000004fc3c92: hlt
  0x0000000004fc3c93: hlt
  0x0000000004fc3c94: hlt
  0x0000000004fc3c95: hlt
  0x0000000004fc3c96: hlt
  0x0000000004fc3c97: hlt
  0x0000000004fc3c98: hlt
  0x0000000004fc3c99: hlt
  0x0000000004fc3c9a: hlt
  0x0000000004fc3c9b: hlt
  0x0000000004fc3c9c: hlt
  0x0000000004fc3c9d: hlt
  0x0000000004fc3c9e: hlt
  0x0000000004fc3c9f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc3ca0: call    4d89060h          ;   {no_reloc}
  0x0000000004fc3ca5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc3caa: sub     rsp,80h
  0x0000000004fc3cb1: mov     qword ptr [rsp+78h],rax
  0x0000000004fc3cb6: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc3cbb: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc3cc0: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc3cc5: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc3cca: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc3ccf: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc3cd4: mov     qword ptr [rsp+38h],r8
  0x0000000004fc3cd9: mov     qword ptr [rsp+30h],r9
  0x0000000004fc3cde: mov     qword ptr [rsp+28h],r10
  0x0000000004fc3ce3: mov     qword ptr [rsp+20h],r11
  0x0000000004fc3ce8: mov     qword ptr [rsp+18h],r12
  0x0000000004fc3ced: mov     qword ptr [rsp+10h],r13
  0x0000000004fc3cf2: mov     qword ptr [rsp+8h],r14
  0x0000000004fc3cf7: mov     qword ptr [rsp],r15
  0x0000000004fc3cfb: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc3d05: mov     rdx,4fc3ca5h      ;   {internal_word}
  0x0000000004fc3d0f: mov     r8,rsp
  0x0000000004fc3d12: and     rsp,0fffffffffffffff0h
  0x0000000004fc3d16: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc3d1b: hlt
[Deopt Handler Code]
  0x0000000004fc3d1c: mov     r10,4fc3d1ch      ;   {section_word}
  0x0000000004fc3d26: push    r10
  0x0000000004fc3d28: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc3d2d: hlt
  0x0000000004fc3d2e: hlt
  0x0000000004fc3d2f: hlt
<nmethod compile_id='11' compiler='C1' level='2' entry='0x0000000004fc3ba0' size='952' address='0x0000000004fc3a50' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='5927' iicount='5927' stamp='0.216'/>
<writer thread='1724'/>
Decoding compiled method 0x0000000004fc1c90:
Code:
Argument 0 is unknown.RIP: 0x4fc1e20 Code size: 0x000003a8
<writer thread='24564'/>
[Loaded java.net.SocketOptions from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1724'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000004fc1e20: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc1e24: shl     r10,3h
  0x0000000004fc1e28: cmp     r10,rax
  0x0000000004fc1e2b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc1e31: nop     dword ptr [rax+rax+0h]
  0x0000000004fc1e39: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fc1e40: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc1e47: push    rbp
  0x0000000004fc1e48: sub     rsp,40h
  0x0000000004fc1e4c: mov     rax,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1e56: mov     esi,dword ptr [rax+0dch]
  0x0000000004fc1e5c: add     esi,8h
  0x0000000004fc1e5f: mov     dword ptr [rax+0dch],esi
  0x0000000004fc1e65: mov     rax,1e2a5388h     ;   {metadata({method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1e6f: and     esi,1ff8h
  0x0000000004fc1e75: cmp     esi,0h
  0x0000000004fc1e78: je      4fc2088h          ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000004fc1e7e: cmp     r8d,10000h
  0x0000000004fc1e85: mov     rax,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1e8f: mov     rsi,108h
  0x0000000004fc1e99: jnl     4fc1ea9h
  0x0000000004fc1e9f: mov     rsi,118h
  0x0000000004fc1ea9: mov     rdi,qword ptr [rax+rsi]
  0x0000000004fc1ead: lea     rdi,[rdi+1h]
  0x0000000004fc1eb1: mov     qword ptr [rax+rsi],rdi
  0x0000000004fc1eb5: jnl     4fc205dh          ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000004fc1ebb: mov     eax,dword ptr [rdx+0ch]
  0x0000000004fc1ebe: shl     rax,3h            ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000004fc1ec2: mov     edx,dword ptr [rax+0ch]  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x0000000004fc209f
  0x0000000004fc1ec5: dec     edx
  0x0000000004fc1ec7: mov     rsi,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1ed1: add     qword ptr [rsi+128h],1h
  0x0000000004fc1ed9: mov     rsi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc1ee3: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fc1ee9: add     edi,8h
  0x0000000004fc1eec: mov     dword ptr [rsi+0dch],edi
  0x0000000004fc1ef2: mov     rsi,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc1efc: and     edi,7ffff8h
  0x0000000004fc1f02: cmp     edi,0h
  0x0000000004fc1f05: je      4fc20a4h
  0x0000000004fc1f0b: cmp     r9d,edx
  0x0000000004fc1f0e: mov     rsi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc1f18: mov     rdi,108h
  0x0000000004fc1f22: jnle    4fc1f32h
  0x0000000004fc1f28: mov     rdi,118h
  0x0000000004fc1f32: mov     rbx,qword ptr [rsi+rdi]
  0x0000000004fc1f36: lea     rbx,[rbx+1h]
  0x0000000004fc1f3a: mov     qword ptr [rsi+rdi],rbx
  0x0000000004fc1f3e: jnle    4fc1f59h          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000004fc1f44: mov     rdx,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc1f4e: inc     dword ptr [rdx+128h]
  0x0000000004fc1f54: jmp     4fc1ffeh          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000004fc1f59: mov     r9,rdx
  0x0000000004fc1f5c: jmp     4fc1ffeh          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000004fc1f61: nop     dword ptr [rax+0h]
  0x0000000004fc1f68: movsxd  rdx,r9d
  0x0000000004fc1f6b: cmp     r9d,dword ptr [rax+0ch]
  0x0000000004fc1f6f: jnb     4fc20bbh
  0x0000000004fc1f75: movzx   edx,word ptr [rax+rdx*2+10h]
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000004fc1f7a: cmp     edx,r8d
  0x0000000004fc1f7d: mov     rdx,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1f87: mov     rsi,158h
  0x0000000004fc1f91: jne     4fc1fa1h
  0x0000000004fc1f97: mov     rsi,168h
  0x0000000004fc1fa1: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fc1fa5: lea     rdi,[rdi+1h]
  0x0000000004fc1fa9: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fc1fad: je      4fc203dh          ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000004fc1fb3: dec     r9d
  0x0000000004fc1fb6: mov     rdx,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1fc0: mov     esi,dword ptr [rdx+0e0h]
  0x0000000004fc1fc6: add     esi,8h
  0x0000000004fc1fc9: mov     dword ptr [rdx+0e0h],esi
  0x0000000004fc1fcf: mov     rdx,1e2a5388h     ;   {metadata({method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1fd9: and     esi,0fff8h
  0x0000000004fc1fdf: cmp     esi,0h
  0x0000000004fc1fe2: je      4fc20c4h          ; OopMap{rax=Oop off=456}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000004fc1fe8: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fc1fee: mov     rdx,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc1ff8: inc     dword ptr [rdx+178h]  ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000004fc1ffe: cmp     r9d,0h
  0x0000000004fc2002: mov     rdx,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc200c: mov     rsi,138h
  0x0000000004fc2016: jl      4fc2026h
  0x0000000004fc201c: mov     rsi,148h
  0x0000000004fc2026: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fc202a: lea     rdi,[rdi+1h]
  0x0000000004fc202e: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fc2032: jl      4fc204ch
  0x0000000004fc2038: jmp     4fc1f68h          ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000004fc203d: mov     rax,r9
  0x0000000004fc2040: add     rsp,40h
  0x0000000004fc2044: pop     rbp
  0x0000000004fc2045: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc204b: ret                       ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000000004fc204c: mov     eax,0ffffffffh
  0x0000000004fc2051: add     rsp,40h
  0x0000000004fc2055: pop     rbp
  0x0000000004fc2056: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc205c: ret                       ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000000004fc205d: mov     rsi,rdx
  0x0000000004fc2060: mov     rdi,1e55bb80h     ;   {metadata(method data for {method} {0x000000001e2a5390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fc206a: add     qword ptr [rdi+190h],1h
  0x0000000004fc2072: nop
  0x0000000004fc2073: nop
  0x0000000004fc2074: nop
  0x0000000004fc2075: nop
  0x0000000004fc2076: nop
  0x0000000004fc2077: call    4d561a0h          ; OopMap{off=604}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x0000000004fc207c: add     rsp,40h
  0x0000000004fc2080: pop     rbp
  0x0000000004fc2081: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc2087: ret
  0x0000000004fc2088: mov     qword ptr [rsp+8h],rax
  0x0000000004fc208d: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc2095: call    4fc0d20h          ; OopMap{rdx=Oop off=634}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x0000000004fc209a: jmp     4fc1e7eh
  0x0000000004fc209f: call    4d88100h          ; OopMap{rax=Oop off=644}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000000004fc20a4: mov     qword ptr [rsp+8h],rsi
  0x0000000004fc20a9: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc20b1: call    4fc0d20h          ; OopMap{rax=Oop off=662}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x0000000004fc20b6: jmp     4fc1f0bh
  0x0000000004fc20bb: mov     qword ptr [rsp],r9
  0x0000000004fc20bf: call    4d888c0h          ; OopMap{rax=Oop off=676}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x0000000004fc20c4: mov     qword ptr [rsp+8h],rdx
  0x0000000004fc20c9: mov     qword ptr [rsp],28h
  0x0000000004fc20d1: call    4fc0d20h          ; OopMap{rax=Oop off=694}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x0000000004fc20d6: jmp     4fc1fe8h
  0x0000000004fc20db: nop
  0x0000000004fc20dc: nop
  0x0000000004fc20dd: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc20e4: mov     r10,0h
  0x0000000004fc20ee: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc20f5: mov     r10,0h
  0x0000000004fc20ff: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc2106: add     rsp,40h
  0x0000000004fc210a: pop     rbp
  0x0000000004fc210b: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc2110: hlt
  0x0000000004fc2111: hlt
  0x0000000004fc2112: hlt
  0x0000000004fc2113: hlt
  0x0000000004fc2114: hlt
  0x0000000004fc2115: hlt
  0x0000000004fc2116: hlt
  0x0000000004fc2117: hlt
  0x0000000004fc2118: hlt
  0x0000000004fc2119: hlt
  0x0000000004fc211a: hlt
  0x0000000004fc211b: hlt
  0x0000000004fc211c: hlt
  0x0000000004fc211d: hlt
  0x0000000004fc211e: hlt
  0x0000000004fc211f: hlt
[Stub Code]
  0x0000000004fc2120: nop                       ;   {no_reloc}
  0x0000000004fc2121: nop
  0x0000000004fc2122: nop
  0x0000000004fc2123: nop
  0x0000000004fc2124: nop
  0x0000000004fc2125: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc212f: jmp     4fc212fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc2134: call    4d89060h          ;   {runtime_call}
  0x0000000004fc2139: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc213e: sub     rsp,80h
  0x0000000004fc2145: mov     qword ptr [rsp+78h],rax
  0x0000000004fc214a: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc214f: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc2154: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc2159: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc215e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc2163: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc2168: mov     qword ptr [rsp+38h],r8
  0x0000000004fc216d: mov     qword ptr [rsp+30h],r9
  0x0000000004fc2172: mov     qword ptr [rsp+28h],r10
  0x0000000004fc2177: mov     qword ptr [rsp+20h],r11
  0x0000000004fc217c: mov     qword ptr [rsp+18h],r12
  0x0000000004fc2181: mov     qword ptr [rsp+10h],r13
  0x0000000004fc2186: mov     qword ptr [rsp+8h],r14
  0x0000000004fc218b: mov     qword ptr [rsp],r15
  0x0000000004fc218f: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc2199: mov     rdx,4fc2139h      ;   {internal_word}
  0x0000000004fc21a3: mov     r8,rsp
  0x0000000004fc21a6: and     rsp,0fffffffffffffff0h
  0x0000000004fc21aa: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc21af: hlt
[Deopt Handler Code]
  0x0000000004fc21b0: mov     r10,4fc21b0h      ;   {section_word}
  0x0000000004fc21ba: push    r10
  0x0000000004fc21bc: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc21c1: hlt
  0x0000000004fc21c2: hlt
  0x0000000004fc21c3: hlt
  0x0000000004fc21c4: hlt
  0x0000000004fc21c5: hlt
  0x0000000004fc21c6: hlt
  0x0000000004fc21c7: hlt
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000004fc1e20' size='1912' address='0x0000000004fc1c90' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' method='java/lang/String lastIndexOf (II)I' bytes='52' count='189' backedge_count='10272' iicount='189' stamp='0.230'/>
<writer thread='25016'/>
Decoding compiled method 0x0000000004fc2fd0:
Code:
Argument 0 is unknown.RIP: 0x4fc3180 Code size: 0x00000570
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e471f10} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc3180: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc3187: push    rbp
  0x0000000004fc3188: sub     rsp,30h
  0x0000000004fc318c: mov     rax,1e472090h
  0x0000000004fc3196: mov     esi,dword ptr [rax+8h]
  0x0000000004fc3199: add     esi,8h
  0x0000000004fc319c: mov     dword ptr [rax+8h],esi
  0x0000000004fc319f: mov     rax,1e471f08h     ;   {metadata({method} {0x000000001e471f10} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000004fc31a9: and     esi,3ff8h
  0x0000000004fc31af: cmp     esi,0h
  0x0000000004fc31b2: je      4fc3304h          ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000004fc31b8: mov     rax,rdx
  0x0000000004fc31bb: shr     eax,8h
  0x0000000004fc31be: cmp     eax,0h
  0x0000000004fc31c1: je      4fc32eeh          ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000004fc31c7: shr     edx,10h
  0x0000000004fc31ca: cmp     edx,0h
  0x0000000004fc31cd: je      4fc32c6h
  0x0000000004fc31d3: cmp     edx,1h
  0x0000000004fc31d6: je      4fc329eh
  0x0000000004fc31dc: cmp     edx,2h
  0x0000000004fc31df: je      4fc3276h
  0x0000000004fc31e5: cmp     edx,0eh
  0x0000000004fc31e8: je      4fc324eh
  0x0000000004fc31ee: cmp     edx,0fh
  0x0000000004fc31f1: je      4fc3200h
  0x0000000004fc31f7: cmp     edx,10h
  0x0000000004fc31fa: jne     4fc3226h          ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000004fc3200: jmp     4fc3378h          ;   {no_reloc}
  0x0000000004fc3205: add     byte ptr [rax],al
  0x0000000004fc3207: add     byte ptr [rax],al
  0x0000000004fc3209: add     byte ptr [rsi+0fh],ah
  0x0000000004fc320c: Fatal error: Disassembling failed with error code: 15<nmethod compile_id='10' compiler='C1' level='2' entry='0x0000000004fc3180' size='2616' address='0x0000000004fc2fd0' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1832' scopes_pcs_offset='1976' dependencies_offset='2552' nul_chk_table_offset='2560' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='5927' iicount='5927' stamp='0.241'/>
<writer thread='1628'/>
Decoding compiled method 0x0000000004fc16d0:
Code:
Argument 0 is unknown.RIP: 0x4fc1840 Code size: 0x000001b0
<writer thread='24564'/>
[Loaded java.net.SocketImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e428370} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc1840: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc1844: shl     r10,3h
  0x0000000004fc1848: cmp     r10,rax
  0x0000000004fc184b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc1851: nop     dword ptr [rax+rax+0h]
  0x0000000004fc1859: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fc1860: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc1867: push    rbp
  0x0000000004fc1868: sub     rsp,30h
  0x0000000004fc186c: mov     rax,1e4d46b8h     ;   {metadata(method data for {method} {0x000000001e428370} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000004fc1876: mov     esi,dword ptr [rax+0dch]
  0x0000000004fc187c: add     esi,8h
  0x0000000004fc187f: mov     dword ptr [rax+0dch],esi
  0x0000000004fc1885: mov     rax,1e428368h     ;   {metadata({method} {0x000000001e428370} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x0000000004fc188f: and     esi,1ff8h
  0x0000000004fc1895: cmp     esi,0h
  0x0000000004fc1898: je      4fc18eah          ;*aload_0
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@0 (line 656)

  0x0000000004fc189e: mov     eax,dword ptr [rdx+30h]
  0x0000000004fc18a1: shl     rax,3h            ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x0000000004fc18a5: mov     esi,dword ptr [rdx+34h]
  0x0000000004fc18a8: shl     rsi,3h            ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x0000000004fc18ac: mov     rdi,r8
  0x0000000004fc18af: sar     edi,8h
  0x0000000004fc18b2: movsxd  rbx,edi
  0x0000000004fc18b5: cmp     edi,dword ptr [rsi+0ch]  ; implicit exception: dispatches to 0x0000000004fc18fe
  0x0000000004fc18b8: jnb     4fc1908h
  0x0000000004fc18be: movzx   esi,word ptr [rsi+rbx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x0000000004fc18c3: and     r8d,0ffh
  0x0000000004fc18ca: add     esi,r8d
  0x0000000004fc18cd: movsxd  rdi,esi
  0x0000000004fc18d0: cmp     esi,dword ptr [rax+0ch]  ; implicit exception: dispatches to 0x0000000004fc1911
  0x0000000004fc18d3: jnb     4fc191bh
  0x0000000004fc18d9: movzx   eax,word ptr [rax+rdi*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x0000000004fc18de: add     rsp,30h
  0x0000000004fc18e2: pop     rbp
  0x0000000004fc18e3: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc18e9: ret
  0x0000000004fc18ea: mov     qword ptr [rsp+8h],rax
  0x0000000004fc18ef: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc18f7: call    4fc0d20h          ; OopMap{rdx=Oop off=188}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc18fc: jmp     4fc189eh
  0x0000000004fc18fe: call    4d88100h          ; OopMap{rax=Oop rsi=Oop off=195}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc1903: call    4d88100h          ; OopMap{rax=Oop rsi=Oop off=200}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc1908: mov     qword ptr [rsp],rdi
  0x0000000004fc190c: call    4d888c0h          ; OopMap{rax=Oop rsi=Oop off=209}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc1911: call    4d88100h          ; OopMap{rax=Oop off=214}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc1916: call    4d88100h          ; OopMap{rax=Oop off=219}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc191b: mov     qword ptr [rsp],rsi
  0x0000000004fc191f: call    4d888c0h          ; OopMap{rax=Oop off=228}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x0000000004fc1924: nop
  0x0000000004fc1925: nop
  0x0000000004fc1926: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc192d: mov     r10,0h
  0x0000000004fc1937: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc193e: mov     r10,0h
  0x0000000004fc1948: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc194f: add     rsp,30h
  0x0000000004fc1953: pop     rbp
  0x0000000004fc1954: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc1959: hlt
  0x0000000004fc195a: hlt
  0x0000000004fc195b: hlt
  0x0000000004fc195c: hlt
  0x0000000004fc195d: hlt
  0x0000000004fc195e: hlt
  0x0000000004fc195f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc1960: call    4d89060h          ;   {no_reloc}
  0x0000000004fc1965: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc196a: sub     rsp,80h
  0x0000000004fc1971: mov     qword ptr [rsp+78h],rax
  0x0000000004fc1976: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc197b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc1980: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc1985: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc198a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc198f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc1994: mov     qword ptr [rsp+38h],r8
  0x0000000004fc1999: mov     qword ptr [rsp+30h],r9
  0x0000000004fc199e: mov     qword ptr [rsp+28h],r10
  0x0000000004fc19a3: mov     qword ptr [rsp+20h],r11
  0x0000000004fc19a8: mov     qword ptr [rsp+18h],r12
  0x0000000004fc19ad: mov     qword ptr [rsp+10h],r13
  0x0000000004fc19b2: mov     qword ptr [rsp+8h],r14
  0x0000000004fc19b7: mov     qword ptr [rsp],r15
  0x0000000004fc19bb: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc19c5: mov     rdx,4fc1965h      ;   {internal_word}
  0x0000000004fc19cf: mov     r8,rsp
  0x0000000004fc19d2: and     rsp,0fffffffffffffff0h
  0x0000000004fc19d6: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc19db: hlt
[Deopt Handler Code]
  0x0000000004fc19dc: mov     r10,4fc19dch      ;   {section_word}
  0x0000000004fc19e6: push    r10
  0x0000000004fc19e8: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc19ed: hlt
  0x0000000004fc19ee: hlt
  0x0000000004fc19ef: hlt
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000004fc1840' size='1144' address='0x0000000004fc16d0' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='872' dependencies_offset='1096' nul_chk_table_offset='1104' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='3503' iicount='3503' stamp='0.251'/>
<writer thread='15116'/>
<task_queued compile_id='12' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1792' iicount='1792' level='3' stamp='0.251' comment='tiered' hot_count='1792'/>
<writer thread='24564'/>
[Loaded java.net.AbstractPlainSocketImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.PlainSocketImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded java.net.SocksSocketImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
Decoding compiled method 0x0000000004fc1390:
Code:
Argument 0 is unknown.RIP: 0x4fc14e0 Code size: 0x00000150
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e2b9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc14e0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc14e7: push    rbp
  0x0000000004fc14e8: sub     rsp,30h
  0x0000000004fc14ec: mov     rax,1e4d60f0h     ;   {metadata(method data for {method} {0x000000001e2b9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000004fc14f6: mov     esi,dword ptr [rax+0dch]
  0x0000000004fc14fc: add     esi,8h
  0x0000000004fc14ff: mov     dword ptr [rax+0dch],esi
  0x0000000004fc1505: mov     rax,1e2b9500h     ;   {metadata({method} {0x000000001e2b9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000004fc150f: and     esi,1ff8h
  0x0000000004fc1515: cmp     esi,0h
  0x0000000004fc1518: je      4fc153bh
  0x0000000004fc151e: mov     rax,76b000c78h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000004fc1528: mov     eax,dword ptr [rax+74h]
  0x0000000004fc152b: shl     rax,3h            ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x0000000004fc152f: add     rsp,30h
  0x0000000004fc1533: pop     rbp
  0x0000000004fc1534: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc153a: ret
  0x0000000004fc153b: mov     qword ptr [rsp+8h],rax
  0x0000000004fc1540: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc1548: call    4fc0d20h          ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x0000000004fc154d: jmp     4fc151eh
  0x0000000004fc154f: nop
  0x0000000004fc1550: nop
  0x0000000004fc1551: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc1558: mov     r10,0h
  0x0000000004fc1562: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc1569: mov     r10,0h
  0x0000000004fc1573: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc157a: add     rsp,30h
  0x0000000004fc157e: pop     rbp
  0x0000000004fc157f: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc1584: hlt
  0x0000000004fc1585: hlt
  0x0000000004fc1586: hlt
  0x0000000004fc1587: hlt
  0x0000000004fc1588: hlt
  0x0000000004fc1589: hlt
  0x0000000004fc158a: hlt
  0x0000000004fc158b: hlt
  0x0000000004fc158c: hlt
  0x0000000004fc158d: hlt
  0x0000000004fc158e: hlt
  0x0000000004fc158f: hlt
  0x0000000004fc1590: hlt
  0x0000000004fc1591: hlt
  0x0000000004fc1592: hlt
  0x0000000004fc1593: hlt
  0x0000000004fc1594: hlt
  0x0000000004fc1595: hlt
  0x0000000004fc1596: hlt
  0x0000000004fc1597: hlt
  0x0000000004fc1598: hlt
  0x0000000004fc1599: hlt
  0x0000000004fc159a: hlt
  0x0000000004fc159b: hlt
  0x0000000004fc159c: hlt
  0x0000000004fc159d: hlt
  0x0000000004fc159e: hlt
  0x0000000004fc159f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc15a0: call    4d89060h          ;   {no_reloc}
  0x0000000004fc15a5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc15aa: sub     rsp,80h
  0x0000000004fc15b1: mov     qword ptr [rsp+78h],rax
  0x0000000004fc15b6: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc15bb: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc15c0: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc15c5: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc15ca: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc15cf: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc15d4: mov     qword ptr [rsp+38h],r8
  0x0000000004fc15d9: mov     qword ptr [rsp+30h],r9
  0x0000000004fc15de: mov     qword ptr [rsp+28h],r10
  0x0000000004fc15e3: mov     qword ptr [rsp+20h],r11
  0x0000000004fc15e8: mov     qword ptr [rsp+18h],r12
  0x0000000004fc15ed: mov     qword ptr [rsp+10h],r13
  0x0000000004fc15f2: mov     qword ptr [rsp+8h],r14
  0x0000000004fc15f7: mov     qword ptr [rsp],r15
  0x0000000004fc15fb: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc1605: mov     rdx,4fc15a5h      ;   {internal_word}
  0x0000000004fc160f: mov     r8,rsp
  0x0000000004fc1612: and     rsp,0fffffffffffffff0h
  0x0000000004fc1616: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc161b: hlt
[Deopt Handler Code]
  0x0000000004fc161c: mov     r10,4fc161ch      ;   {section_word}
  0x0000000004fc1626: push    r10
  0x0000000004fc1628: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc162d: hlt
  0x0000000004fc162e: hlt
  0x0000000004fc162f: hlt
<nmethod compile_id='7' compiler='C1' level='3' entry='0x0000000004fc14e0' size='768' address='0x0000000004fc1390' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='686' iicount='686' stamp='0.260'/>
<writer thread='15116'/>
<task_queued compile_id='13' method='java/lang/Character toLowerCase (I)I' bytes='9' count='5632' iicount='5632' level='3' stamp='0.260' comment='tiered' hot_count='5632'/>
<writer thread='25016'/>
Decoding compiled method 0x0000000004fc2810:
Code:
Argument 0 is unknown.RIP: 0x4fc2980 Code size: 0x00000188
<writer thread='24564'/>
[Loaded java.net.AbstractPlainSocketImpl$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e317ad0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc2980: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc2984: shl     r10,3h
  0x0000000004fc2988: cmp     r10,rax
  0x0000000004fc298b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc2991: nop     dword ptr [rax+rax+0h]
  0x0000000004fc2999: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fc29a0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc29a7: push    rbp
  0x0000000004fc29a8: sub     rsp,30h
  0x0000000004fc29ac: mov     rsi,1e4d4400h     ;   {metadata(method data for {method} {0x000000001e317ad0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000004fc29b6: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fc29bc: add     edi,8h
  0x0000000004fc29bf: mov     dword ptr [rsi+0dch],edi
  0x0000000004fc29c5: mov     rsi,1e317ac8h     ;   {metadata({method} {0x000000001e317ad0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000004fc29cf: and     edi,1ff8h
  0x0000000004fc29d5: cmp     edi,0h
  0x0000000004fc29d8: je      4fc2a15h          ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000004fc29de: mov     rsi,rdx
  0x0000000004fc29e1: mov     rdi,1e4d4400h     ;   {metadata(method data for {method} {0x000000001e317ad0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000004fc29eb: add     qword ptr [rdi+108h],1h
  0x0000000004fc29f3: mov     rsi,rdx
  0x0000000004fc29f6: mov     rdx,rsi           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000004fc29f9: mov     qword ptr [rsp+20h],rsi
  0x0000000004fc29fe: nop
  0x0000000004fc29ff: call    4d561a0h          ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000004fc2a04: mov     rax,qword ptr [rsp+20h]
  0x0000000004fc2a09: add     rsp,30h
  0x0000000004fc2a0d: pop     rbp
  0x0000000004fc2a0e: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc2a14: ret
  0x0000000004fc2a15: mov     qword ptr [rsp+8h],rsi
  0x0000000004fc2a1a: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc2a22: call    4fc0d20h          ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000004fc2a27: jmp     4fc29deh
  0x0000000004fc2a29: nop
  0x0000000004fc2a2a: nop
  0x0000000004fc2a2b: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc2a32: mov     r10,0h
  0x0000000004fc2a3c: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc2a43: mov     r10,0h
  0x0000000004fc2a4d: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc2a54: add     rsp,30h
  0x0000000004fc2a58: pop     rbp
  0x0000000004fc2a59: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc2a5e: hlt
  0x0000000004fc2a5f: hlt
[Stub Code]
  0x0000000004fc2a60: nop                       ;   {no_reloc}
  0x0000000004fc2a61: nop
  0x0000000004fc2a62: nop
  0x0000000004fc2a63: nop
  0x0000000004fc2a64: nop
  0x0000000004fc2a65: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc2a6f: jmp     4fc2a6fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc2a74: call    4d89060h          ;   {runtime_call}
  0x0000000004fc2a79: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc2a7e: sub     rsp,80h
  0x0000000004fc2a85: mov     qword ptr [rsp+78h],rax
  0x0000000004fc2a8a: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc2a8f: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc2a94: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc2a99: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc2a9e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc2aa3: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc2aa8: mov     qword ptr [rsp+38h],r8
  0x0000000004fc2aad: mov     qword ptr [rsp+30h],r9
  0x0000000004fc2ab2: mov     qword ptr [rsp+28h],r10
  0x0000000004fc2ab7: mov     qword ptr [rsp+20h],r11
  0x0000000004fc2abc: mov     qword ptr [rsp+18h],r12
  0x0000000004fc2ac1: mov     qword ptr [rsp+10h],r13
  0x0000000004fc2ac6: mov     qword ptr [rsp+8h],r14
  0x0000000004fc2acb: mov     qword ptr [rsp],r15
  0x0000000004fc2acf: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc2ad9: mov     rdx,4fc2a79h      ;   {internal_word}
  0x0000000004fc2ae3: mov     r8,rsp
  0x0000000004fc2ae6: and     rsp,0fffffffffffffff0h
  0x0000000004fc2aea: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc2aef: hlt
[Deopt Handler Code]
  0x0000000004fc2af0: mov     r10,4fc2af0h      ;   {section_word}
  0x0000000004fc2afa: push    r10
  0x0000000004fc2afc: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc2b01: hlt
  0x0000000004fc2b02: hlt
  0x0000000004fc2b03: hlt
  0x0000000004fc2b04: hlt
  0x0000000004fc2b05: hlt
  0x0000000004fc2b06: hlt
  0x0000000004fc2b07: hlt
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000004fc2980' size='912' address='0x0000000004fc2810' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='792' iicount='792' stamp='0.272'/>
<writer thread='12568'/>
Decoding compiled method 0x0000000004fc6a90:
Code:
Argument 0 is unknown.RIP: 0x4fc6c00 Code size: 0x00000248
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc6c00: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc6c07: push    rbp
  0x0000000004fc6c08: sub     rsp,30h
  0x0000000004fc6c0c: mov     rsi,1e4c97b0h     ;   {metadata(method data for {method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000004fc6c16: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fc6c1c: add     edi,8h
  0x0000000004fc6c1f: mov     dword ptr [rsi+0dch],edi
  0x0000000004fc6c25: mov     rsi,1e387c80h     ;   {metadata({method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000004fc6c2f: and     edi,1ff8h
  0x0000000004fc6c35: cmp     edi,0h
  0x0000000004fc6c38: je      4fc6d4ch          ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x0000000004fc6c3e: cmp     rdx,0h
  0x0000000004fc6c42: mov     rsi,1e4c97b0h     ;   {metadata(method data for {method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000004fc6c4c: mov     rdi,108h
  0x0000000004fc6c56: jne     4fc6c66h
  0x0000000004fc6c5c: mov     rdi,118h
  0x0000000004fc6c66: mov     rbx,qword ptr [rsi+rdi]
  0x0000000004fc6c6a: lea     rbx,[rbx+1h]
  0x0000000004fc6c6e: mov     qword ptr [rsi+rdi],rbx
  0x0000000004fc6c72: jne     4fc6c92h          ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x0000000004fc6c78: mov     rdx,1e4c97b0h     ;   {metadata(method data for {method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000004fc6c82: inc     dword ptr [rdx+128h]
  0x0000000004fc6c88: mov     esi,0h
  0x0000000004fc6c8d: jmp     4fc6d3dh          ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x0000000004fc6c92: cmp     rax,qword ptr [rdx]  ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x0000000004fc6d63
  0x0000000004fc6c95: mov     rsi,rdx
  0x0000000004fc6c98: mov     rdi,1e4c97b0h     ;   {metadata(method data for {method} {0x000000001e387c88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000004fc6ca2: mov     esi,dword ptr [rsi+8h]
  0x0000000004fc6ca5: shl     rsi,3h
  0x0000000004fc6ca9: cmp     rsi,qword ptr [rdi+148h]
  0x0000000004fc6cb0: jne     4fc6cbfh
  0x0000000004fc6cb2: add     qword ptr [rdi+150h],1h
  0x0000000004fc6cba: jmp     4fc6d25h
  0x0000000004fc6cbf: cmp     rsi,qword ptr [rdi+158h]
  0x0000000004fc6cc6: jne     4fc6cd5h
  0x0000000004fc6cc8: add     qword ptr [rdi+160h],1h
  0x0000000004fc6cd0: jmp     4fc6d25h
  0x0000000004fc6cd5: cmp     qword ptr [rdi+148h],0h
  0x0000000004fc6ce0: jne     4fc6cf9h
  0x0000000004fc6ce2: mov     qword ptr [rdi+148h],rsi
  0x0000000004fc6ce9: mov     qword ptr [rdi+150h],1h
  0x0000000004fc6cf4: jmp     4fc6d25h
  0x0000000004fc6cf9: cmp     qword ptr [rdi+158h],0h
  0x0000000004fc6d04: jne     4fc6d1dh
  0x0000000004fc6d06: mov     qword ptr [rdi+158h],rsi
  0x0000000004fc6d0d: mov     qword ptr [rdi+160h],1h
  0x0000000004fc6d18: jmp     4fc6d25h
  0x0000000004fc6d1d: add     qword ptr [rdi+140h],1h
  0x0000000004fc6d25: mov     rax,0ffffffffffffffffh
  0x0000000004fc6d2f: call    4d563e0h          ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x0000000004fc6d34: mov     rsi,rax
  0x0000000004fc6d37: shr     esi,10h
  0x0000000004fc6d3a: xor     rsi,rax
  0x0000000004fc6d3d: mov     rax,rsi
  0x0000000004fc6d40: add     rsp,30h
  0x0000000004fc6d44: pop     rbp
  0x0000000004fc6d45: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc6d4b: ret
  0x0000000004fc6d4c: mov     qword ptr [rsp+8h],rsi
  0x0000000004fc6d51: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc6d59: call    4fc0d20h          ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x0000000004fc6d5e: jmp     4fc6c3eh
  0x0000000004fc6d63: call    4d88100h          ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x0000000004fc6d68: nop
  0x0000000004fc6d69: nop
  0x0000000004fc6d6a: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc6d71: mov     r10,0h
  0x0000000004fc6d7b: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc6d82: mov     r10,0h
  0x0000000004fc6d8c: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc6d93: add     rsp,30h
  0x0000000004fc6d97: pop     rbp
  0x0000000004fc6d98: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc6d9d: hlt
  0x0000000004fc6d9e: hlt
  0x0000000004fc6d9f: hlt
[Stub Code]
  0x0000000004fc6da0: nop                       ;   {no_reloc}
  0x0000000004fc6da1: nop
  0x0000000004fc6da2: nop
  0x0000000004fc6da3: nop
  0x0000000004fc6da4: nop
  0x0000000004fc6da5: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc6daf: jmp     4fc6dafh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc6db4: call    4d89060h          ;   {runtime_call}
  0x0000000004fc6db9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc6dbe: sub     rsp,80h
  0x0000000004fc6dc5: mov     qword ptr [rsp+78h],rax
  0x0000000004fc6dca: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc6dcf: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc6dd4: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc6dd9: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc6dde: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc6de3: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc6de8: mov     qword ptr [rsp+38h],r8
  0x0000000004fc6ded: mov     qword ptr [rsp+30h],r9
  0x0000000004fc6df2: mov     qword ptr [rsp+28h],r10
  0x0000000004fc6df7: mov     qword ptr [rsp+20h],r11
  0x0000000004fc6dfc: mov     qword ptr [rsp+18h],r12
  0x0000000004fc6e01: mov     qword ptr [rsp+10h],r13
  0x0000000004fc6e06: mov     qword ptr [rsp+8h],r14
  0x0000000004fc6e0b: mov     qword ptr [rsp],r15
  0x0000000004fc6e0f: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc6e19: mov     rdx,4fc6db9h      ;   {internal_word}
  0x0000000004fc6e23: mov     r8,rsp
  0x0000000004fc6e26: and     rsp,0fffffffffffffff0h
  0x0000000004fc6e2a: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc6e2f: hlt
[Deopt Handler Code]
  0x0000000004fc6e30: mov     r10,4fc6e30h      ;   {section_word}
  0x0000000004fc6e3a: push    r10
  0x0000000004fc6e3c: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc6e41: hlt
  0x0000000004fc6e42: hlt
  0x0000000004fc6e43: hlt
  0x0000000004fc6e44: hlt
  0x0000000004fc6e45: hlt
  0x0000000004fc6e46: hlt
  0x0000000004fc6e47: hlt
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000004fc6c00' size='1176' address='0x0000000004fc6a90' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1795' iicount='1795' stamp='0.284'/>
<writer thread='15116'/>
<task_queued compile_id='14' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='5632' iicount='5632' level='3' stamp='0.284' comment='tiered' hot_count='5632'/>
<writer thread='24564'/>
<task_queued compile_id='15' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='128' iicount='128' level='1' stamp='0.284' comment='tiered' hot_count='128'/>
<writer thread='15116'/>
<task_queued compile_id='16' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='12288' iicount='12288' stamp='0.285' comment='tiered' hot_count='12288'/>
<writer thread='1628'/>
Decoding compiled method 0x0000000004fc8310:
Code:
Argument 0 is unknown.RIP: 0x4fc8480 Code size: 0x00000178
<writer thread='24564'/>
[Loaded java.net.PlainSocketImpl$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e33a5a0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc8480: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc8487: push    rbp
  0x0000000004fc8488: sub     rsp,30h
  0x0000000004fc848c: mov     rsi,1e470e80h
  0x0000000004fc8496: mov     edi,dword ptr [rsi+8h]
  0x0000000004fc8499: add     edi,8h
  0x0000000004fc849c: mov     dword ptr [rsi+8h],edi
  0x0000000004fc849f: mov     rsi,1e33a598h     ;   {metadata({method} {0x000000001e33a5a0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fc84a9: and     edi,3ff8h
  0x0000000004fc84af: cmp     edi,0h
  0x0000000004fc84b2: je      4fc84f0h          ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x0000000004fc84b8: mov     rsi,rdx
  0x0000000004fc84bb: mov     rdx,rsi           ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000004fc84be: mov     dword ptr [rsp+20h],esi
  0x0000000004fc84c2: nop
  0x0000000004fc84c3: nop
  0x0000000004fc84c4: nop
  0x0000000004fc84c5: nop
  0x0000000004fc84c6: nop
  0x0000000004fc84c7: call    4d56620h          ; OopMap{off=76}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x0000000004fc84cc: mov     r8d,dword ptr [rsp+20h]
  0x0000000004fc84d1: mov     rdx,rax           ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000004fc84d4: nop
  0x0000000004fc84d5: mov     rax,0ffffffffffffffffh
  0x0000000004fc84df: call    4d563e0h          ; OopMap{off=100}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x0000000004fc84e4: add     rsp,30h
  0x0000000004fc84e8: pop     rbp
  0x0000000004fc84e9: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc84ef: ret
  0x0000000004fc84f0: mov     qword ptr [rsp+8h],rsi
  0x0000000004fc84f5: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc84fd: call    4fc0d20h          ; OopMap{off=130}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x0000000004fc8502: jmp     4fc84b8h
  0x0000000004fc8504: nop
  0x0000000004fc8505: nop
  0x0000000004fc8506: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc850d: mov     r10,0h
  0x0000000004fc8517: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc851e: mov     r10,0h
  0x0000000004fc8528: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc852f: add     rsp,30h
  0x0000000004fc8533: pop     rbp
  0x0000000004fc8534: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc8539: hlt
  0x0000000004fc853a: hlt
  0x0000000004fc853b: hlt
  0x0000000004fc853c: hlt
  0x0000000004fc853d: hlt
  0x0000000004fc853e: hlt
  0x0000000004fc853f: hlt
[Stub Code]
  0x0000000004fc8540: nop                       ;   {no_reloc}
  0x0000000004fc8541: nop
  0x0000000004fc8542: nop
  0x0000000004fc8543: nop
  0x0000000004fc8544: nop
  0x0000000004fc8545: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc854f: jmp     4fc854fh          ;   {runtime_call}
  0x0000000004fc8554: nop
  0x0000000004fc8555: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc855f: jmp     4fc855fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc8564: call    4d89060h          ;   {runtime_call}
  0x0000000004fc8569: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc856e: sub     rsp,80h
  0x0000000004fc8575: mov     qword ptr [rsp+78h],rax
  0x0000000004fc857a: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc857f: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc8584: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc8589: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc858e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc8593: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc8598: mov     qword ptr [rsp+38h],r8
  0x0000000004fc859d: mov     qword ptr [rsp+30h],r9
  0x0000000004fc85a2: mov     qword ptr [rsp+28h],r10
  0x0000000004fc85a7: mov     qword ptr [rsp+20h],r11
  0x0000000004fc85ac: mov     qword ptr [rsp+18h],r12
  0x0000000004fc85b1: mov     qword ptr [rsp+10h],r13
  0x0000000004fc85b6: mov     qword ptr [rsp+8h],r14
  0x0000000004fc85bb: mov     qword ptr [rsp],r15
  0x0000000004fc85bf: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc85c9: mov     rdx,4fc8569h      ;   {internal_word}
  0x0000000004fc85d3: mov     r8,rsp
  0x0000000004fc85d6: and     rsp,0fffffffffffffff0h
  0x0000000004fc85da: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc85df: hlt
[Deopt Handler Code]
  0x0000000004fc85e0: mov     r10,4fc85e0h      ;   {section_word}
  0x0000000004fc85ea: push    r10
  0x0000000004fc85ec: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc85f1: hlt
  0x0000000004fc85f2: hlt
  0x0000000004fc85f3: hlt
  0x0000000004fc85f4: hlt
  0x0000000004fc85f5: hlt
  0x0000000004fc85f6: hlt
  0x0000000004fc85f7: hlt
<nmethod compile_id='13' compiler='C1' level='2' entry='0x0000000004fc8480' size='936' address='0x0000000004fc8310' relocation_offset='288' insts_offset='368' stub_offset='560' scopes_data_offset='752' scopes_pcs_offset='800' dependencies_offset='928' method='java/lang/Character toLowerCase (I)I' bytes='9' count='5640' iicount='5640' stamp='0.295'/>
<writer thread='1724'/>
Decoding compiled method 0x0000000004fc7e90:
Code:
Argument 0 is unknown.RIP: 0x4fc7fe0 Code size: 0x000001b0
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1724'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e472da0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000004fc7fe0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc7fe4: shl     r10,3h
  0x0000000004fc7fe8: cmp     r10,rax
  0x0000000004fc7feb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc7ff1: nop     dword ptr [rax+rax+0h]
  0x0000000004fc7ff9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fc8000: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc8007: push    rbp
  0x0000000004fc8008: sub     rsp,40h
  0x0000000004fc800c: mov     rax,1e4738b8h
  0x0000000004fc8016: mov     esi,dword ptr [rax+8h]
  0x0000000004fc8019: add     esi,8h
  0x0000000004fc801c: mov     dword ptr [rax+8h],esi
  0x0000000004fc801f: mov     rax,1e472d98h     ;   {metadata({method} {0x000000001e472da0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000004fc8029: and     esi,3ff8h
  0x0000000004fc802f: cmp     esi,0h
  0x0000000004fc8032: je      4fc809dh          ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x0000000004fc8038: mov     rax,r8
  0x0000000004fc803b: and     eax,0ffffh
  0x0000000004fc8041: mov     rsi,76b08db18h    ;   {oop([I)}
  0x0000000004fc804b: movsxd  rdi,eax
  0x0000000004fc804e: cmp     eax,dword ptr [rsi+0ch]  ; implicit exception: dispatches to 0x0000000004fc80b1
  0x0000000004fc8051: jnb     4fc80bbh
  0x0000000004fc8057: mov     eax,dword ptr [rsi+rdi*4+10h]
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000004fc805b: mov     rsi,rax
  0x0000000004fc805e: and     esi,20000h
  0x0000000004fc8064: cmp     esi,0h
  0x0000000004fc8067: je      4fc808eh          ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000004fc806d: mov     rsi,rax
  0x0000000004fc8070: and     esi,7fc0000h
  0x0000000004fc8076: cmp     esi,7fc0000h
  0x0000000004fc807c: je      4fc808eh          ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000004fc8082: shl     eax,5h
  0x0000000004fc8085: sar     eax,17h
  0x0000000004fc8088: add     eax,r8d
  0x0000000004fc808b: mov     r8,rax            ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000004fc808e: mov     rax,r8
  0x0000000004fc8091: add     rsp,40h
  0x0000000004fc8095: pop     rbp
  0x0000000004fc8096: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc809c: ret
  0x0000000004fc809d: mov     qword ptr [rsp+8h],rax
  0x0000000004fc80a2: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc80aa: call    4fc0d20h          ; OopMap{rdx=Oop off=207}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000004fc80af: jmp     4fc8038h
  0x0000000004fc80b1: call    4d88100h          ; OopMap{rsi=Oop off=214}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000004fc80b6: call    4d88100h          ; OopMap{rsi=Oop off=219}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000004fc80bb: mov     qword ptr [rsp],rax
  0x0000000004fc80bf: call    4d888c0h          ; OopMap{rsi=Oop off=228}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000004fc80c4: nop
  0x0000000004fc80c5: nop
  0x0000000004fc80c6: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc80cd: mov     r10,0h
  0x0000000004fc80d7: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc80de: mov     r10,0h
  0x0000000004fc80e8: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc80ef: add     rsp,40h
  0x0000000004fc80f3: pop     rbp
  0x0000000004fc80f4: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc80f9: hlt
  0x0000000004fc80fa: hlt
  0x0000000004fc80fb: hlt
  0x0000000004fc80fc: hlt
  0x0000000004fc80fd: hlt
  0x0000000004fc80fe: hlt
  0x0000000004fc80ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc8100: call    4d89060h          ;   {no_reloc}
  0x0000000004fc8105: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc810a: sub     rsp,80h
  0x0000000004fc8111: mov     qword ptr [rsp+78h],rax
  0x0000000004fc8116: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc811b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc8120: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc8125: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc812a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc812f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc8134: mov     qword ptr [rsp+38h],r8
  0x0000000004fc8139: mov     qword ptr [rsp+30h],r9
  0x0000000004fc813e: mov     qword ptr [rsp+28h],r10
  0x0000000004fc8143: mov     qword ptr [rsp+20h],r11
  0x0000000004fc8148: mov     qword ptr [rsp+18h],r12
  0x0000000004fc814d: mov     qword ptr [rsp+10h],r13
  0x0000000004fc8152: mov     qword ptr [rsp+8h],r14
  0x0000000004fc8157: mov     qword ptr [rsp],r15
  0x0000000004fc815b: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc8165: mov     rdx,4fc8105h      ;   {internal_word}
  0x0000000004fc816f: mov     r8,rsp
  0x0000000004fc8172: and     rsp,0fffffffffffffff0h
  0x0000000004fc8176: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc817b: hlt
[Deopt Handler Code]
  0x0000000004fc817c: mov     r10,4fc817ch      ;   {section_word}
  0x0000000004fc8186: push    r10
  0x0000000004fc8188: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc818d: hlt
  0x0000000004fc818e: hlt
  0x0000000004fc818f: hlt
<nmethod compile_id='14' compiler='C1' level='2' entry='0x0000000004fc7fe0' size='1096' address='0x0000000004fc7e90' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='792' scopes_pcs_offset='888' dependencies_offset='1064' nul_chk_table_offset='1072' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='5640' iicount='5640' stamp='0.306'/>
<writer thread='15116'/>
<task_queued compile_id='17' method='java/lang/String length ()I' bytes='6' count='29056' iicount='29056' stamp='0.306' comment='tiered' hot_count='29056'/>
<writer thread='25016'/>
Decoding compiled method 0x0000000004fc7b90:
Code:
Argument 0 is unknown.RIP: 0x4fc7ce0 Code size: 0x000000f0
<writer thread='15116'/>
[Loaded java.io.FileOutputStream$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e3a3428} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc7ce0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc7ce7: push    rbp
  0x0000000004fc7ce8: sub     rsp,30h           ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x0000000004fc7cec: mov     eax,dword ptr [rdx+0ch]  ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x0000000004fc7cfb
  0x0000000004fc7cef: add     rsp,30h
  0x0000000004fc7cf3: pop     rbp
  0x0000000004fc7cf4: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc7cfa: ret
  0x0000000004fc7cfb: call    4d88100h          ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x0000000004fc7d00: nop
  0x0000000004fc7d01: nop
  0x0000000004fc7d02: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc7d09: mov     r10,0h
  0x0000000004fc7d13: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc7d1a: mov     r10,0h
  0x0000000004fc7d24: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc7d2b: add     rsp,30h
  0x0000000004fc7d2f: pop     rbp
  0x0000000004fc7d30: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc7d35: hlt
  0x0000000004fc7d36: hlt
  0x0000000004fc7d37: hlt
  0x0000000004fc7d38: hlt
  0x0000000004fc7d39: hlt
  0x0000000004fc7d3a: hlt
  0x0000000004fc7d3b: hlt
  0x0000000004fc7d3c: hlt
  0x0000000004fc7d3d: hlt
  0x0000000004fc7d3e: hlt
  0x0000000004fc7d3f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc7d40: call    4d89060h          ;   {no_reloc}
  0x0000000004fc7d45: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc7d4a: sub     rsp,80h
  0x0000000004fc7d51: mov     qword ptr [rsp+78h],rax
  0x0000000004fc7d56: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc7d5b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc7d60: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc7d65: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc7d6a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc7d6f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc7d74: mov     qword ptr [rsp+38h],r8
  0x0000000004fc7d79: mov     qword ptr [rsp+30h],r9
  0x0000000004fc7d7e: mov     qword ptr [rsp+28h],r10
  0x0000000004fc7d83: mov     qword ptr [rsp+20h],r11
  0x0000000004fc7d88: mov     qword ptr [rsp+18h],r12
  0x0000000004fc7d8d: mov     qword ptr [rsp+10h],r13
  0x0000000004fc7d92: mov     qword ptr [rsp+8h],r14
  0x0000000004fc7d97: mov     qword ptr [rsp],r15
  0x0000000004fc7d9b: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc7da5: mov     rdx,4fc7d45h      ;   {internal_word}
  0x0000000004fc7daf: mov     r8,rsp
  0x0000000004fc7db2: and     rsp,0fffffffffffffff0h
  0x0000000004fc7db6: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc7dbb: hlt
[Deopt Handler Code]
  0x0000000004fc7dbc: mov     r10,4fc7dbch      ;   {section_word}
  0x0000000004fc7dc6: push    r10
  0x0000000004fc7dc8: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc7dcd: hlt
  0x0000000004fc7dce: hlt
  0x0000000004fc7dcf: hlt
<nmethod compile_id='15' compiler='C1' level='1' entry='0x0000000004fc7ce0' size='712' address='0x0000000004fc7b90' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='132' iicount='132' stamp='0.320'/>
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIConverter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded sun.launcher.LauncherHelper from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='11168'/>
Decoding compiled method 0x0000000004fc7510:
Code:
Argument 0 is unknown.RIP: 0x4fc7640 Code size: 0x00000098
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='11168'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a0488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000004fc7640: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc7644: shl     r10,3h
  0x0000000004fc7648: cmp     rax,r10
  0x0000000004fc764b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc7651: nop
  0x0000000004fc7654: nop     word ptr [rax+rax+0h]
  0x0000000004fc765a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc7660: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc7667: push    rbp
  0x0000000004fc7668: sub     rsp,10h           ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x0000000004fc766c: mov     r11d,dword ptr [rdx+8h]
  0x0000000004fc7670: mov     r10,0h
  0x0000000004fc767a: lea     r10,[r10+r11*8]
  0x0000000004fc767e: mov     r8d,40000000h
  0x0000000004fc7684: test    dword ptr [r10+9ch],r8d
  0x0000000004fc768b: je      4fc7698h          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000004fc768d: mov     rbp,rdx
  0x0000000004fc7690: nop
  0x0000000004fc7693: call    4fc8820h          ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000004fc7698: add     rsp,10h
  0x0000000004fc769c: pop     rbp
  0x0000000004fc769d: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc76a3: ret                       ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000004fc76a4: mov     rdx,rax
  0x0000000004fc76a7: add     rsp,10h
  0x0000000004fc76ab: pop     rbp
  0x0000000004fc76ac: jmp     4fc40a0h          ;   {runtime_call}
  0x0000000004fc76b1: hlt
  0x0000000004fc76b2: hlt
  0x0000000004fc76b3: hlt
  0x0000000004fc76b4: hlt
  0x0000000004fc76b5: hlt
  0x0000000004fc76b6: hlt
  0x0000000004fc76b7: hlt
  0x0000000004fc76b8: hlt
  0x0000000004fc76b9: hlt
  0x0000000004fc76ba: hlt
  0x0000000004fc76bb: hlt
  0x0000000004fc76bc: hlt
  0x0000000004fc76bd: hlt
  0x0000000004fc76be: hlt
  0x0000000004fc76bf: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc76c0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc76c5: call    4fc76cah
  0x0000000004fc76ca: sub     qword ptr [rsp],5h
  0x0000000004fc76cf: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc76d4: hlt
  0x0000000004fc76d5: hlt
  0x0000000004fc76d6: hlt
  0x0000000004fc76d7: hlt
<nmethod compile_id='3' compiler='C2' level='4' entry='0x0000000004fc7640' size='616' address='0x0000000004fc7510' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='8082' iicount='8082' stamp='0.333'/>
<writer thread='14484'/>
Decoding compiled method 0x0000000004fc7150:
Code:
Argument 0 is unknown.RIP: 0x4fc72a0 Code size: 0x000000d8
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryConverter from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='14484'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a3d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000004fc72a0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc72a4: shl     r10,3h
  0x0000000004fc72a8: cmp     rax,r10
  0x0000000004fc72ab: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc72b1: nop
  0x0000000004fc72b4: nop     word ptr [rax+rax+0h]
  0x0000000004fc72ba: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc72c0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc72c7: push    rbp
  0x0000000004fc72c8: sub     rsp,20h           ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000004fc72cc: test    r8d,r8d
  0x0000000004fc72cf: jl      4fc730dh          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000004fc72d1: mov     r10d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000004fc72d5: mov     ebp,dword ptr [r12+r10*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000004fc7335
  0x0000000004fc72da: cmp     r8d,ebp
  0x0000000004fc72dd: jnl     4fc7321h          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000004fc72df: cmp     r8d,ebp
  0x0000000004fc72e2: jnb     4fc72fah
  0x0000000004fc72e4: shl     r10,3h
  0x0000000004fc72e8: movzx   eax,word ptr [r10+r8*2+10h]
  0x0000000004fc72ee: add     rsp,20h
  0x0000000004fc72f2: pop     rbp
  0x0000000004fc72f3: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc72f9: ret
  0x0000000004fc72fa: mov     edx,0ffffffe4h
  0x0000000004fc72ff: mov     ebp,r8d
  0x0000000004fc7302: mov     dword ptr [rsp],r10d
  0x0000000004fc7306: nop
  0x0000000004fc7307: call    4d557a0h          ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000004fc730c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000004fc730d: mov     rbp,rdx
  0x0000000004fc7310: mov     dword ptr [rsp+4h],r8d
  0x0000000004fc7315: mov     edx,0ffffff65h
  0x0000000004fc731a: nop
  0x0000000004fc731b: call    4d557a0h          ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000004fc7320: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000004fc7321: mov     qword ptr [rsp],rdx
  0x0000000004fc7325: mov     dword ptr [rsp+0ch],r8d
  0x0000000004fc732a: mov     edx,0ffffff65h
  0x0000000004fc732f: call    4d557a0h          ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000004fc7334: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000004fc7335: mov     edx,0fffffff6h
  0x0000000004fc733a: nop
  0x0000000004fc733b: call    4d557a0h          ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000004fc7340: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000004fc7341: hlt
  0x0000000004fc7342: hlt
  0x0000000004fc7343: hlt
  0x0000000004fc7344: hlt
  0x0000000004fc7345: hlt
  0x0000000004fc7346: hlt
  0x0000000004fc7347: hlt
  0x0000000004fc7348: hlt
  0x0000000004fc7349: hlt
  0x0000000004fc734a: hlt
  0x0000000004fc734b: hlt
  0x0000000004fc734c: hlt
  0x0000000004fc734d: hlt
  0x0000000004fc734e: hlt
  0x0000000004fc734f: hlt
  0x0000000004fc7350: hlt
  0x0000000004fc7351: hlt
  0x0000000004fc7352: hlt
  0x0000000004fc7353: hlt
  0x0000000004fc7354: hlt
  0x0000000004fc7355: hlt
  0x0000000004fc7356: hlt
  0x0000000004fc7357: hlt
  0x0000000004fc7358: hlt
  0x0000000004fc7359: hlt
  0x0000000004fc735a: hlt
  0x0000000004fc735b: hlt
  0x0000000004fc735c: hlt
  0x0000000004fc735d: hlt
  0x0000000004fc735e: hlt
  0x0000000004fc735f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc7360: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc7365: call    4fc736ah
  0x0000000004fc736a: sub     qword ptr [rsp],5h
  0x0000000004fc736f: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc7374: hlt
  0x0000000004fc7375: hlt
  0x0000000004fc7376: hlt
  0x0000000004fc7377: hlt
<nmethod compile_id='1' compiler='C2' level='4' entry='0x0000000004fc72a0' size='928' address='0x0000000004fc7150' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='114570' iicount='114570' stamp='0.344'/>
<writer thread='20704'/>
Decoding compiled method 0x0000000004fc5110:
Code:
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='20704'/>
Argument 0 is unknown.RIP: 0x4fc5240 Code size: 0x00000078
[Entry Point]
[Constants]
  # {method} {0x000000001e2a3c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000004fc5240: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc5244: shl     r10,3h
  0x0000000004fc5248: cmp     rax,r10
  0x0000000004fc524b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc5251: nop
  0x0000000004fc5254: nop     word ptr [rax+rax+0h]
  0x0000000004fc525a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc5260: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc5267: push    rbp
  0x0000000004fc5268: sub     rsp,10h           ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000004fc526c: mov     r11d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000004fc5270: mov     eax,dword ptr [r12+r11*8+0ch]
                                                ; implicit exception: dispatches to 0x0000000004fc5281
  0x0000000004fc5275: add     rsp,10h
  0x0000000004fc5279: pop     rbp
  0x0000000004fc527a: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc5280: ret
  0x0000000004fc5281: mov     edx,0fffffff6h
  0x0000000004fc5286: nop
  0x0000000004fc5287: call    4d557a0h          ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000004fc528c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000004fc528d: hlt
  0x0000000004fc528e: hlt
  0x0000000004fc528f: hlt
  0x0000000004fc5290: hlt
  0x0000000004fc5291: hlt
  0x0000000004fc5292: hlt
  0x0000000004fc5293: hlt
  0x0000000004fc5294: hlt
  0x0000000004fc5295: hlt
  0x0000000004fc5296: hlt
  0x0000000004fc5297: hlt
  0x0000000004fc5298: hlt
  0x0000000004fc5299: hlt
  0x0000000004fc529a: hlt
  0x0000000004fc529b: hlt
  0x0000000004fc529c: hlt
  0x0000000004fc529d: hlt
  0x0000000004fc529e: hlt
  0x0000000004fc529f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc52a0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc52a5: call    4fc52aah
  0x0000000004fc52aa: sub     qword ptr [rsp],5h
  0x0000000004fc52af: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc52b4: hlt
  0x0000000004fc52b5: hlt
  0x0000000004fc52b6: hlt
  0x0000000004fc52b7: hlt
<nmethod compile_id='17' compiler='C2' level='4' entry='0x0000000004fc5240' size='584' address='0x0000000004fc5110' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='29062' iicount='29062' stamp='0.353'/>
<writer thread='22908'/>
Decoding compiled method 0x0000000004fc4c10:
Code:
Argument 0 is unknown.RIP: 0x4fc4d40 Code size: 0x00000178
[Entry Point]
[Constants]
  # {method} {0x000000001e2a4fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000004fc4d40: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc4d44: shl     r10,3h
  0x0000000004fc4d48: cmp     rax,r10
  0x0000000004fc4d4b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc4d51: nop
  0x0000000004fc4d54: nop     word ptr [rax+rax+0h]
  0x0000000004fc4d5a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc4d60: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc4d67: push    rbp
  0x0000000004fc4d68: sub     rsp,20h           ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000004fc4d6c: mov     rbx,rdx
  0x0000000004fc4d6f: mov     eax,dword ptr [rdx+10h]  ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000004fc4d72: test    eax,eax
  0x0000000004fc4d74: jne     4fc4e65h          ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000004fc4d7a: mov     ebp,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000004fc4d7d: mov     r10d,dword ptr [r12+rbp*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000004fc4e85
  0x0000000004fc4d82: test    r10d,r10d
  0x0000000004fc4d85: jle     4fc4e71h          ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000004fc4d8b: test    r10d,r10d
  0x0000000004fc4d8e: jbe     4fc4e75h
  0x0000000004fc4d94: mov     r9d,r10d
  0x0000000004fc4d97: dec     r9d
  0x0000000004fc4d9a: cmp     r9d,r10d
  0x0000000004fc4d9d: jnb     4fc4e75h          ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000004fc4da3: movzx   r11d,word ptr [r12+rbp*8+10h]
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000004fc4da9: mov     edi,r10d
  0x0000000004fc4dac: add     edi,0fffffffdh
  0x0000000004fc4daf: mov     eax,r11d
  0x0000000004fc4db2: shl     eax,5h
  0x0000000004fc4db5: lea     rdx,[r12+rbp*8]
  0x0000000004fc4db9: mov     r8d,1h
  0x0000000004fc4dbf: mov     ecx,80000000h
  0x0000000004fc4dc4: cmp     r9d,edi
  0x0000000004fc4dc7: cmovl   edi,ecx
  0x0000000004fc4dca: cmp     edi,1h
  0x0000000004fc4dcd: jle     4fc4e56h
  0x0000000004fc4dd3: sub     eax,r11d          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000004fc4dd6: jmp     4fc4e03h          ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000004fc4dd8: movzx   ecx,word ptr [rdx+r8*2+10h]
  0x0000000004fc4dde: sub     eax,r11d
  0x0000000004fc4de1: add     eax,ecx           ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000004fc4de3: inc     r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000004fc4de6: cmp     r8d,r10d
  0x0000000004fc4de9: jnl     4fc4e62h          ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000004fc4def: mov     r9d,eax
  0x0000000004fc4df2: shl     r9d,5h
  0x0000000004fc4df6: mov     r11d,eax
  0x0000000004fc4df9: mov     eax,r9d
  0x0000000004fc4dfc: jmp     4fc4dd8h
  0x0000000004fc4dfe: nop
  0x0000000004fc4e00: sub     eax,r11d          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000004fc4e03: movzx   r9d,word ptr [rdx+r8*2+10h]
  0x0000000004fc4e09: add     eax,r9d
  0x0000000004fc4e0c: movsxd  r11,r8d
  0x0000000004fc4e0f: movzx   ecx,word ptr [rdx+r11*2+12h]
  0x0000000004fc4e15: movzx   ebp,word ptr [rdx+r11*2+16h]
  0x0000000004fc4e1b: movzx   r9d,word ptr [rdx+r11*2+14h]
  0x0000000004fc4e21: mov     r11d,eax
  0x0000000004fc4e24: shl     r11d,5h
  0x0000000004fc4e28: sub     r11d,eax
  0x0000000004fc4e2b: add     r11d,ecx
  0x0000000004fc4e2e: mov     esi,r11d
  0x0000000004fc4e31: shl     esi,5h
  0x0000000004fc4e34: sub     esi,r11d
  0x0000000004fc4e37: add     esi,r9d
  0x0000000004fc4e3a: mov     r11d,esi
  0x0000000004fc4e3d: shl     r11d,5h
  0x0000000004fc4e41: sub     r11d,esi
  0x0000000004fc4e44: add     r11d,ebp          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000004fc4e47: mov     eax,r11d
  0x0000000004fc4e4a: shl     eax,5h            ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000004fc4e4d: add     r8d,4h            ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000004fc4e51: cmp     r8d,edi
  0x0000000004fc4e54: jl      4fc4e00h          ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000004fc4e56: cmp     r8d,r10d
  0x0000000004fc4e59: jl      4fc4dd8h
  0x0000000004fc4e5f: mov     eax,r11d
  0x0000000004fc4e62: mov     dword ptr [rbx+10h],eax  ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000004fc4e65: add     rsp,20h
  0x0000000004fc4e69: pop     rbp
  0x0000000004fc4e6a: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc4e70: ret
  0x0000000004fc4e71: xor     eax,eax
  0x0000000004fc4e73: jmp     4fc4e65h
  0x0000000004fc4e75: mov     edx,0ffffff86h
  0x0000000004fc4e7a: mov     qword ptr [rsp],rbx
  0x0000000004fc4e7e: nop
  0x0000000004fc4e7f: call    4d557a0h          ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x0000000004fc4e84: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000004fc4e85: mov     edx,0fffffff6h
  0x0000000004fc4e8a: nop
  0x0000000004fc4e8b: call    4d557a0h          ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000004fc4e90: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000004fc4e91: hlt
  0x0000000004fc4e92: hlt
  0x0000000004fc4e93: hlt
  0x0000000004fc4e94: hlt
  0x0000000004fc4e95: hlt
  0x0000000004fc4e96: hlt
  0x0000000004fc4e97: hlt
  0x0000000004fc4e98: hlt
  0x0000000004fc4e99: hlt
  0x0000000004fc4e9a: hlt
  0x0000000004fc4e9b: hlt
  0x0000000004fc4e9c: hlt
  0x0000000004fc4e9d: hlt
  0x0000000004fc4e9e: hlt
  0x0000000004fc4e9f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc4ea0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc4ea5: call    4fc4eaah
  0x0000000004fc4eaa: sub     qword ptr [rsp],5h
  0x0000000004fc4eaf: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc4eb4: hlt
  0x0000000004fc4eb5: hlt
  0x0000000004fc4eb6: hlt
  0x0000000004fc4eb7: hlt
<nmethod compile_id='8' compiler='C2' level='4' entry='0x0000000004fc4d40' size='1224' address='0x0000000004fc4c10' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='2288' backedge_count='33507' iicount='2288' stamp='0.364'/>
<writer thread='15116'/>
<task_queued compile_id='18' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='512' iicount='512' level='3' stamp='0.364' comment='tiered' hot_count='512'/>
<writer thread='18044'/>
Decoding compiled method 0x0000000004fc42d0:
Code:
Argument 0 is unknown.RIP: 0x4fc4420 Code size: 0x000002a8
<writer thread='24564'/>
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryBuffer from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='18044'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000004fc4420: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc4424: shl     r10,3h
  0x0000000004fc4428: cmp     rax,r10
  0x0000000004fc442b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc4431: nop
  0x0000000004fc4434: nop     word ptr [rax+rax+0h]
  0x0000000004fc443a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc4440: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc4447: push    rbp
  0x0000000004fc4448: sub     rsp,60h           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000004fc444c: mov     qword ptr [rsp+40h],rdx
  0x0000000004fc4451: mov     ebx,dword ptr [rdx+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000004fc4454: mov     ebp,dword ptr [r12+rbx*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000004fc4674
  0x0000000004fc4459: mov     r11d,r8d
  0x0000000004fc445c: sub     r11d,ebp
  0x0000000004fc445f: test    r11d,r11d
  0x0000000004fc4462: jnle    4fc4475h          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000004fc4464: add     rsp,60h
  0x0000000004fc4468: pop     rbp
  0x0000000004fc4469: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc446f: ret
  0x0000000004fc4470: mov     r11d,r8d
  0x0000000004fc4473: jmp     4fc448eh
  0x0000000004fc4475: mov     r11d,ebp
  0x0000000004fc4478: shl     r11d,1h           ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc447b: mov     r9d,r11d
  0x0000000004fc447e: sub     r9d,r8d
  0x0000000004fc4481: add     r9d,2h
  0x0000000004fc4485: test    r9d,r9d
  0x0000000004fc4488: jl      4fc4470h          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc448a: add     r11d,2h           ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc448e: test    r11d,r11d
  0x0000000004fc4491: jle     4fc44a1h          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc4493: mov     r9d,7ffffff7h
  0x0000000004fc4499: sub     r9d,r11d
  0x0000000004fc449c: test    r9d,r9d
  0x0000000004fc449f: jnl     4fc44b3h          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc44a1: mov     dword ptr [rsp+28h],ebx
  0x0000000004fc44a5: nop
  0x0000000004fc44a7: call    4d561a0h          ; OopMap{[40]=NarrowOop [64]=Oop off=140}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000004fc44ac: mov     r11d,eax
  0x0000000004fc44af: mov     ebx,dword ptr [rsp+28h]  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc44b3: cmp     r11d,80000h
  0x0000000004fc44ba: jnbe    4fc4633h
  0x0000000004fc44c0: movsxd  r10,r11d
  0x0000000004fc44c3: shl     r10,1h
  0x0000000004fc44c6: add     r10,17h
  0x0000000004fc44ca: mov     rdi,r10
  0x0000000004fc44cd: and     rdi,0fffffffffffffff8h
  0x0000000004fc44d1: cmp     r11d,80000h
  0x0000000004fc44d8: jnbe    4fc45e7h
  0x0000000004fc44de: mov     r13,qword ptr [r15+60h]
  0x0000000004fc44e2: mov     r8,r13
  0x0000000004fc44e5: add     r8,rdi
  0x0000000004fc44e8: cmp     r8,qword ptr [r15+70h]
  0x0000000004fc44ec: jnb     4fc45e7h
  0x0000000004fc44f2: mov     qword ptr [r15+60h],r8
  0x0000000004fc44f6: prefetchnta byte ptr [r8+100h]
  0x0000000004fc44fe: mov     qword ptr [r13+0h],1h
  0x0000000004fc4506: prefetchnta byte ptr [r8+140h]
  0x0000000004fc450e: mov     dword ptr [r13+8h],0f8000041h
                                                ;   {metadata({type array char})}
  0x0000000004fc4516: mov     dword ptr [r13+0ch],r11d
  0x0000000004fc451a: prefetchnta byte ptr [r8+180h]  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc4522: cmp     ebp,r11d
  0x0000000004fc4525: mov     esi,r11d
  0x0000000004fc4528: cmovl   esi,ebp           ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc452b: mov     r9,r13
  0x0000000004fc452e: add     r9,10h            ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc4532: lea     rdx,[r12+rbx*8]   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000004fc4536: shr     r10,3h
  0x0000000004fc453a: mov     rcx,r10
  0x0000000004fc453d: add     rcx,0fffffffffffffffeh
  0x0000000004fc4541: cmp     ebp,esi
  0x0000000004fc4543: jb      4fc463bh
  0x0000000004fc4549: cmp     r11d,esi
  0x0000000004fc454c: jb      4fc463bh
  0x0000000004fc4552: test    esi,esi
  0x0000000004fc4554: jle     4fc4666h
  0x0000000004fc455a: lea     rbx,[r12+rbx*8+10h]
  0x0000000004fc455f: cmp     esi,r11d
  0x0000000004fc4562: jl      4fc45a8h
  0x0000000004fc4564: add     rdi,0fffffffffffffff0h
  0x0000000004fc4568: shr     rdi,3h
  0x0000000004fc456c: mov     rcx,rbx
  0x0000000004fc456f: mov     rdx,r9
  0x0000000004fc4572: mov     r8,rdi
  0x0000000004fc4575: mov     r10,4d62860h
  0x0000000004fc457f: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc4582: mov     r10,r13
  0x0000000004fc4585: shr     r10,3h
  0x0000000004fc4589: mov     r11,qword ptr [rsp+40h]
  0x0000000004fc458e: mov     dword ptr [r11+10h],r10d
  0x0000000004fc4592: mov     r10,r11
  0x0000000004fc4595: shr     r10,9h
  0x0000000004fc4599: mov     r11d,10ac8000h
  0x0000000004fc459f: mov     byte ptr [r11+r10],r12l  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000004fc45a3: jmp     4fc4464h
  0x0000000004fc45a8: movsxd  r8,esi
  0x0000000004fc45ab: mov     r11,r8
  0x0000000004fc45ae: shl     r11,1h
  0x0000000004fc45b1: add     r11,10h
  0x0000000004fc45b5: mov     rcx,r11
  0x0000000004fc45b8: and     rcx,0fffffffffffffff9h
  0x0000000004fc45bc: mov     rdi,r13
  0x0000000004fc45bf: add     rdi,rcx
  0x0000000004fc45c2: shr     r11,3h
  0x0000000004fc45c6: sub     r10,r11
  0x0000000004fc45c9: mov     rcx,r10
  0x0000000004fc45cc: xor     rax,rax
  0x0000000004fc45cf: rep stos qword ptr [rdi]
  0x0000000004fc45d2: mov     rcx,rbx
  0x0000000004fc45d5: mov     rdx,r9
  0x0000000004fc45d8: mov     r10,4d62580h
  0x0000000004fc45e2: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc45e5: jmp     4fc4582h
  0x0000000004fc45e7: mov     dword ptr [rsp+2ch],ebx
  0x0000000004fc45eb: mov     qword ptr [rsp+38h],rdi
  0x0000000004fc45f0: mov     qword ptr [rsp+30h],r10
  0x0000000004fc45f5: mov     dword ptr [rsp+28h],r11d
  0x0000000004fc45fa: push    qword ptr [rsp+40h]
  0x0000000004fc45ff: pop     qword ptr [rsp+20h]
  0x0000000004fc4604: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fc460e: mov     r8d,r11d
  0x0000000004fc4611: nop
  0x0000000004fc4613: call    4d7f4a0h          ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=504}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000004fc4618: mov     r11d,dword ptr [rsp+28h]
  0x0000000004fc461d: mov     r10,qword ptr [rsp+30h]
  0x0000000004fc4622: mov     rdi,qword ptr [rsp+38h]
  0x0000000004fc4627: mov     ebx,dword ptr [rsp+2ch]
  0x0000000004fc462b: mov     r13,rax
  0x0000000004fc462e: jmp     4fc4522h
  0x0000000004fc4633: movsxd  r10,r11d          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc4636: jmp     4fc44c3h
  0x0000000004fc463b: mov     rdi,r9
  0x0000000004fc463e: xor     rax,rax
  0x0000000004fc4641: rep stos qword ptr [rdi]
  0x0000000004fc4644: xor     r8d,r8d
  0x0000000004fc4647: mov     r9,r13
  0x0000000004fc464a: xor     edi,edi
  0x0000000004fc464c: mov     rbp,qword ptr [rsp+40h]
  0x0000000004fc4651: mov     qword ptr [rsp+28h],r13
  0x0000000004fc4656: nop
  0x0000000004fc4657: call    4fc88e0h          ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000004fc465c: mov     r13,qword ptr [rsp+28h]
  0x0000000004fc4661: jmp     4fc4582h
  0x0000000004fc4666: mov     rdi,r9
  0x0000000004fc4669: xor     rax,rax
  0x0000000004fc466c: rep stos qword ptr [rdi]  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc466f: jmp     4fc4582h
  0x0000000004fc4674: mov     edx,0fffffff6h
  0x0000000004fc4679: nop
  0x0000000004fc467b: call    4d557a0h          ; OopMap{off=608}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000004fc4680: int3
  0x0000000004fc4681: jmp     4fc4683h          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000004fc4683: mov     rdx,rax
  0x0000000004fc4686: jmp     4fc468bh          ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000004fc4688: mov     rdx,rax           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000004fc468b: add     rsp,60h
  0x0000000004fc468f: pop     rbp
  0x0000000004fc4690: jmp     4fc40a0h          ;   {runtime_call}
  0x0000000004fc4695: hlt
  0x0000000004fc4696: hlt
  0x0000000004fc4697: hlt
  0x0000000004fc4698: hlt
  0x0000000004fc4699: hlt
  0x0000000004fc469a: hlt
  0x0000000004fc469b: hlt
  0x0000000004fc469c: hlt
  0x0000000004fc469d: hlt
  0x0000000004fc469e: hlt
  0x0000000004fc469f: hlt
[Stub Code]
  0x0000000004fc46a0: mov     rbx,0h            ;   {no_reloc}
  0x0000000004fc46aa: jmp     4fc46aah          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc46af: jmp     4d7fe20h          ;   {runtime_call}
[Deopt Handler Code]
  0x0000000004fc46b4: call    4fc46b9h
  0x0000000004fc46b9: sub     qword ptr [rsp],5h
  0x0000000004fc46be: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc46c3: hlt
  0x0000000004fc46c4: hlt
  0x0000000004fc46c5: hlt
  0x0000000004fc46c6: hlt
  0x0000000004fc46c7: hlt
<nmethod compile_id='16' compiler='C2' level='4' entry='0x0000000004fc4420' size='1784' address='0x0000000004fc42d0' relocation_offset='288' insts_offset='336' stub_offset='976' scopes_data_offset='1048' scopes_pcs_offset='1240' dependencies_offset='1688' handler_table_offset='1696' nul_chk_table_offset='1768' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='12300' iicount='12300' stamp='0.378'/>
<writer thread='18648'/>
Decoding compiled method 0x0000000004fc6290:
Code:
Argument 0 is unknown.RIP: 0x4fc63e0 Code size: 0x00000258
<writer thread='24564'/>
[Loaded java.net.DualStackPlainSocketImpl from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='18648'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a45d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fc63e0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fc63e4: shl     r10,3h
  0x0000000004fc63e8: cmp     rax,r10
  0x0000000004fc63eb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fc63f1: nop
  0x0000000004fc63f4: nop     word ptr [rax+rax+0h]
  0x0000000004fc63fa: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fc6400: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc6407: push    rbp
  0x0000000004fc6408: sub     rsp,30h           ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000004fc640c: cmp     rdx,r8
  0x0000000004fc640f: je      4fc6594h          ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000004fc6415: mov     r10d,dword ptr [r8+8h]  ; implicit exception: dispatches to 0x0000000004fc65e9
  0x0000000004fc6419: cmp     r10d,0f80002dah   ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000004fc6420: jne     4fc65d5h          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000004fc6426: mov     ecx,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000004fc6429: mov     edi,dword ptr [r12+rcx*8+0ch]
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ; implicit exception: dispatches to 0x0000000004fc65f9
  0x0000000004fc642e: mov     r8d,dword ptr [r8+0ch]  ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000004fc6432: mov     esi,dword ptr [r12+r8*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000004fc6605
  0x0000000004fc6437: xor     eax,eax
  0x0000000004fc6439: cmp     edi,esi
  0x0000000004fc643b: je      4fc6449h          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000004fc643d: add     rsp,30h
  0x0000000004fc6441: pop     rbp
  0x0000000004fc6442: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fc6448: ret
  0x0000000004fc6449: test    edi,edi
  0x0000000004fc644b: je      4fc658ah          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000004fc6451: mov     ebp,edi
  0x0000000004fc6453: dec     ebp               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000004fc6455: movsxd  r13,edi
  0x0000000004fc6458: lea     r10,[r12+rcx*8]
  0x0000000004fc645c: lea     r11,[r12+r8*8]
  0x0000000004fc6460: mov     edx,edi
  0x0000000004fc6462: add     edx,0fffffffeh
  0x0000000004fc6465: mov     r14d,0ffffffffh
  0x0000000004fc646b: cmp     edx,r14d
  0x0000000004fc646e: cmovl   edx,r14d
  0x0000000004fc6472: mov     r9d,ebp
  0x0000000004fc6475: mov     ebx,ebp
  0x0000000004fc6477: sub     ebx,r9d           ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000004fc647a: cmp     ebx,edi
  0x0000000004fc647c: jnb     4fc659eh
  0x0000000004fc6482: mov     qword ptr [rsp+8h],r13
  0x0000000004fc6487: mov     dword ptr [rsp],ebp
  0x0000000004fc648a: movsxd  rbp,r9d
  0x0000000004fc648d: sub     r13,rbp
  0x0000000004fc6490: movzx   ebp,word ptr [r10+r13*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc6496: cmp     ebx,esi
  0x0000000004fc6498: jnb     4fc65b9h          ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc649e: movzx   ebx,word ptr [r11+r13*2+0eh]
  0x0000000004fc64a4: cmp     ebp,ebx
  0x0000000004fc64a6: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc64a8: dec     r9d               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000004fc64ab: cmp     r9d,edx
  0x0000000004fc64ae: jle     4fc64bah          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000004fc64b0: mov     ebp,dword ptr [rsp]
  0x0000000004fc64b3: mov     r13,qword ptr [rsp+8h]
  0x0000000004fc64b8: jmp     4fc6475h
  0x0000000004fc64ba: mov     edx,edi
  0x0000000004fc64bc: sub     edx,esi
  0x0000000004fc64be: dec     edx
  0x0000000004fc64c0: cmp     edx,r14d
  0x0000000004fc64c3: cmovl   edx,r14d
  0x0000000004fc64c7: mov     ebp,edx
  0x0000000004fc64c9: add     ebp,3h
  0x0000000004fc64cc: mov     ebx,7fffffffh
  0x0000000004fc64d1: cmp     edx,ebp
  0x0000000004fc64d3: cmovnle ebp,ebx
  0x0000000004fc64d6: cmp     r9d,ebp
  0x0000000004fc64d9: jle     4fc654eh
  0x0000000004fc64db: nop     dword ptr [rax+rax+0h]  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000004fc64e0: movsxd  rbx,r9d
  0x0000000004fc64e3: mov     r13,qword ptr [rsp+8h]
  0x0000000004fc64e8: sub     r13,rbx           ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc64eb: movzx   edx,word ptr [r11+r13*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc64f1: movzx   ebx,word ptr [r10+r13*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc64f7: cmp     ebx,edx
  0x0000000004fc64f9: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc64ff: movzx   ebx,word ptr [r11+r13*2+10h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc6505: movzx   r13d,word ptr [r10+r13*2+10h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc650b: cmp     r13d,ebx
  0x0000000004fc650e: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc6514: mov     ebx,edi
  0x0000000004fc6516: sub     ebx,r9d
  0x0000000004fc6519: movsxd  r14,ebx
  0x0000000004fc651c: movzx   ebx,word ptr [r10+r14*2+12h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc6522: movzx   r13d,word ptr [r11+r14*2+12h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc6528: cmp     ebx,r13d
  0x0000000004fc652b: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc6531: movzx   edx,word ptr [r11+r14*2+14h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc6537: movzx   ebx,word ptr [r10+r14*2+14h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc653d: cmp     ebx,edx
  0x0000000004fc653f: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc6545: add     r9d,0fffffffch    ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000004fc6549: cmp     r9d,ebp
  0x0000000004fc654c: jnle    4fc64e0h          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000004fc654e: cmp     r9d,0ffffffffh
  0x0000000004fc6552: je      4fc658ah
  0x0000000004fc6554: mov     ebx,dword ptr [rsp]
  0x0000000004fc6557: sub     ebx,r9d           ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000004fc655a: cmp     ebx,edi
  0x0000000004fc655c: jnb     4fc659eh
  0x0000000004fc655e: movsxd  rbp,r9d
  0x0000000004fc6561: mov     rdx,qword ptr [rsp+8h]
  0x0000000004fc6566: sub     rdx,rbp
  0x0000000004fc6569: movzx   ebp,word ptr [r10+rdx*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc656f: cmp     ebx,esi
  0x0000000004fc6571: jnb     4fc65b9h          ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc6573: movzx   edx,word ptr [r11+rdx*2+0eh]
  0x0000000004fc6579: cmp     ebp,edx
  0x0000000004fc657b: jne     4fc643dh          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000004fc6581: dec     r9d               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000004fc6584: cmp     r9d,0ffffffffh
  0x0000000004fc6588: jne     4fc6554h          ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x0000000004fc658a: mov     eax,1h
  0x0000000004fc658f: jmp     4fc643dh
  0x0000000004fc6594: mov     eax,1h
  0x0000000004fc6599: jmp     4fc643dh
  0x0000000004fc659e: mov     edx,0ffffffe4h
  0x0000000004fc65a3: mov     ebp,r9d
  0x0000000004fc65a6: mov     dword ptr [rsp+4h],r8d
  0x0000000004fc65ab: mov     dword ptr [rsp+0ch],ecx
  0x0000000004fc65af: mov     dword ptr [rsp+10h],ebx
  0x0000000004fc65b3: call    4d557a0h          ; OopMap{[4]=NarrowOop [12]=NarrowOop off=472}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000004fc65b8: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000004fc65b9: mov     edx,0ffffffe4h
  0x0000000004fc65be: mov     dword ptr [rsp],r9d
  0x0000000004fc65c2: mov     dword ptr [rsp+4h],ecx
  0x0000000004fc65c6: mov     dword ptr [rsp+10h],r8d
  0x0000000004fc65cb: mov     dword ptr [rsp+14h],ebx
  0x0000000004fc65cf: call    4d557a0h          ; OopMap{[4]=NarrowOop [16]=NarrowOop off=500}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000004fc65d4: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000004fc65d5: mov     rbp,rdx
  0x0000000004fc65d8: mov     qword ptr [rsp+8h],r8
  0x0000000004fc65dd: mov     edx,0ffffffdeh
  0x0000000004fc65e2: nop
  0x0000000004fc65e3: call    4d557a0h          ; OopMap{rbp=Oop [8]=Oop off=520}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x0000000004fc65e8: int3
  0x0000000004fc65e9: mov     rbp,rdx
  0x0000000004fc65ec: mov     edx,0fffffff4h
  0x0000000004fc65f1: nop
  0x0000000004fc65f3: call    4d557a0h          ; OopMap{rbp=Oop off=536}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x0000000004fc65f8: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000004fc65f9: mov     edx,0fffffff6h
  0x0000000004fc65fe: nop
  0x0000000004fc65ff: call    4d557a0h          ; OopMap{off=548}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000004fc6604: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000000004fc6605: mov     edx,0fffffff6h
  0x0000000004fc660a: nop
  0x0000000004fc660b: call    4d557a0h          ; OopMap{off=560}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000004fc6610: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000000004fc6611: hlt
  0x0000000004fc6612: hlt
  0x0000000004fc6613: hlt
  0x0000000004fc6614: hlt
  0x0000000004fc6615: hlt
  0x0000000004fc6616: hlt
  0x0000000004fc6617: hlt
  0x0000000004fc6618: hlt
  0x0000000004fc6619: hlt
  0x0000000004fc661a: hlt
  0x0000000004fc661b: hlt
  0x0000000004fc661c: hlt
  0x0000000004fc661d: hlt
  0x0000000004fc661e: hlt
  0x0000000004fc661f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc6620: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc6625: call    4fc662ah
  0x0000000004fc662a: sub     qword ptr [rsp],5h
  0x0000000004fc662f: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc6634: hlt
  0x0000000004fc6635: hlt
  0x0000000004fc6636: hlt
  0x0000000004fc6637: hlt
<nmethod compile_id='6' compiler='C2' level='4' entry='0x0000000004fc63e0' size='2032' address='0x0000000004fc6290' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='952' scopes_pcs_offset='1176' dependencies_offset='1992' nul_chk_table_offset='2000' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='38354' backedge_count='14630' iicount='38354' stamp='0.394'/>
<writer thread='15116'/>
<task_queued compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1024' backedge_count='739' iicount='1024' level='3' stamp='0.394' comment='tiered' hot_count='1024'/>
<task_queued compile_id='20' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='256' iicount='256' level='3' stamp='0.394' comment='tiered' hot_count='256'/>
<task_queued compile_id='21' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='256' iicount='256' level='3' stamp='0.394' comment='tiered' hot_count='256'/>
<task_queued compile_id='22' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='256' iicount='256' level='3' stamp='0.394' comment='tiered' hot_count='256'/>
<task_queued compile_id='23' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='256' iicount='256' level='3' stamp='0.394' comment='tiered' hot_count='256'/>
<task_queued compile_id='24' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='256' iicount='256' level='3' stamp='0.394' comment='tiered' hot_count='256'/>
<task_queued compile_id='25' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='257' backedge_count='10240' iicount='257' level='3' stamp='0.394' comment='tiered' hot_count='257'/>
<task_queued compile_id='26' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='237' backedge_count='12288' iicount='237' level='3' stamp='0.394' comment='tiered' hot_count='237'/>
<task_queued compile_id='27' method='java/lang/String indexOf (II)I' bytes='70' count='834' backedge_count='39936' iicount='834' stamp='0.394' comment='tiered' hot_count='834'/>
<task_queued compile_id='28' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.394' comment='tiered' hot_count='256'/>
<writer thread='24564'/>
[Loaded java.net.Inet6Address from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
Decoding compiled method 0x0000000004fc5a50:
Code:
Argument 0 is unknown.RIP: 0x4fc5bc0 Code size: 0x00000328
<writer thread='15116'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000004fc5bc0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc5bc7: push    rbp
  0x0000000004fc5bc8: sub     rsp,60h
  0x0000000004fc5bcc: mov     r9,rdx
  0x0000000004fc5bcf: mov     rbx,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fc5bd9: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fc5bdf: add     edx,8h
  0x0000000004fc5be2: mov     dword ptr [rbx+0dch],edx
  0x0000000004fc5be8: mov     rbx,1e3b8aa8h     ;   {metadata({method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fc5bf2: and     edx,1ff8h
  0x0000000004fc5bf8: cmp     edx,0h
  0x0000000004fc5bfb: je      4fc5db8h          ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x0000000004fc5c01: mov     rbx,r8
  0x0000000004fc5c04: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fc5c0e: movsxd  rbx,ebx
  0x0000000004fc5c11: mov     rdi,rbx
  0x0000000004fc5c14: cmp     rbx,0ffffffh
  0x0000000004fc5c1b: jnbe    4fc5dcfh
  0x0000000004fc5c21: mov     rsi,17h
  0x0000000004fc5c2b: lea     rsi,[rsi+rbx*2]
  0x0000000004fc5c2f: and     rsi,0fffffffffffffff8h
  0x0000000004fc5c33: mov     rax,qword ptr [r15+60h]
  0x0000000004fc5c37: lea     rsi,[rax+rsi]
  0x0000000004fc5c3b: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fc5c3f: jnbe    4fc5dcfh
  0x0000000004fc5c45: mov     qword ptr [r15+60h],rsi
  0x0000000004fc5c49: sub     rsi,rax
  0x0000000004fc5c4c: mov     qword ptr [rax],1h
  0x0000000004fc5c53: mov     rcx,rdx
  0x0000000004fc5c56: shr     rcx,3h
  0x0000000004fc5c5a: mov     dword ptr [rax+8h],ecx
  0x0000000004fc5c5d: mov     dword ptr [rax+0ch],ebx
  0x0000000004fc5c60: sub     rsi,10h
  0x0000000004fc5c64: je      4fc5c7bh
  0x0000000004fc5c6a: xor     rbx,rbx
  0x0000000004fc5c6d: shr     rsi,3h
  0x0000000004fc5c71: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fc5c76: dec     rsi
  0x0000000004fc5c79: jne     4fc5c71h          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x0000000004fc5c7b: mov     edx,dword ptr [r9+0ch]  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x0000000004fc5dd9
  0x0000000004fc5c7f: mov     rdi,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fc5c89: add     qword ptr [rdi+108h],1h
  0x0000000004fc5c91: mov     rdi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc5c9b: mov     esi,dword ptr [rdi+0dch]
  0x0000000004fc5ca1: add     esi,8h
  0x0000000004fc5ca4: mov     dword ptr [rdi+0dch],esi
  0x0000000004fc5caa: mov     rdi,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc5cb4: and     esi,7ffff8h
  0x0000000004fc5cba: cmp     esi,0h
  0x0000000004fc5cbd: je      4fc5ddeh
  0x0000000004fc5cc3: cmp     edx,r8d
  0x0000000004fc5cc6: mov     rdi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc5cd0: mov     rsi,108h
  0x0000000004fc5cda: jnle    4fc5ceah
  0x0000000004fc5ce0: mov     rsi,118h
  0x0000000004fc5cea: mov     rbx,qword ptr [rdi+rsi]
  0x0000000004fc5cee: lea     rbx,[rbx+1h]
  0x0000000004fc5cf2: mov     qword ptr [rdi+rsi],rbx
  0x0000000004fc5cf6: jnle    4fc5d15h          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000004fc5cfc: mov     r8,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fc5d06: inc     dword ptr [r8+128h]
  0x0000000004fc5d0d: mov     rsi,rdx
  0x0000000004fc5d10: jmp     4fc5d18h          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000004fc5d15: mov     rsi,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000004fc5d18: mov     rdx,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fc5d22: add     qword ptr [rdx+118h],1h
  0x0000000004fc5d2a: mov     rdx,r9
  0x0000000004fc5d2d: mov     r8d,0h
  0x0000000004fc5d33: mov     r9,rax
  0x0000000004fc5d36: mov     edi,0h
  0x0000000004fc5d3b: mov     qword ptr [rsp+50h],rax
  0x0000000004fc5d40: lea     rcx,[r8+rsi]
  0x0000000004fc5d44: cmp     ecx,dword ptr [rdx+0ch]
  0x0000000004fc5d47: jnbe    4fc5df5h
  0x0000000004fc5d4d: lea     rcx,[rdi+rsi]
  0x0000000004fc5d51: cmp     ecx,dword ptr [r9+0ch]
  0x0000000004fc5d55: jnbe    4fc5df5h
  0x0000000004fc5d5b: test    esi,esi
  0x0000000004fc5d5d: jl      4fc5df5h
  0x0000000004fc5d63: je      4fc5da7h
  0x0000000004fc5d69: movsxd  r8,r8d
  0x0000000004fc5d6c: movsxd  rdi,edi
  0x0000000004fc5d6f: lea     rcx,[rdx+r8*2+10h]
  0x0000000004fc5d74: lea     rdx,[r9+rdi*2+10h]
  0x0000000004fc5d79: mov     r8,rsi
  0x0000000004fc5d7c: sub     rsp,20h
  0x0000000004fc5d80: test    esp,0fh
  0x0000000004fc5d86: je      4fc5d9eh
  0x0000000004fc5d8c: sub     rsp,8h
  0x0000000004fc5d90: call    4d62580h          ;   {runtime_call}
  0x0000000004fc5d95: add     rsp,8h
  0x0000000004fc5d99: jmp     4fc5da3h
  0x0000000004fc5d9e: call    4d62580h          ;   {runtime_call}
  0x0000000004fc5da3: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)

  0x0000000004fc5da7: mov     rax,qword ptr [rsp+50h]
  0x0000000004fc5dac: add     rsp,60h
  0x0000000004fc5db0: pop     rbp
  0x0000000004fc5db1: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fc5db7: ret
  0x0000000004fc5db8: mov     qword ptr [rsp+8h],rbx
  0x0000000004fc5dbd: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc5dc5: call    4fc0d20h          ; OopMap{r9=Oop off=522}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x0000000004fc5dca: jmp     4fc5c01h
  0x0000000004fc5dcf: call    4d89500h          ; OopMap{r9=Oop off=532}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x0000000004fc5dd4: jmp     4fc5c7bh
  0x0000000004fc5dd9: call    4d88100h          ; OopMap{r9=Oop rax=Oop off=542}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x0000000004fc5dde: mov     qword ptr [rsp+8h],rdi
  0x0000000004fc5de3: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fc5deb: call    4fc0d20h          ; OopMap{r9=Oop rax=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x0000000004fc5df0: jmp     4fc5cc3h
  0x0000000004fc5df5: nop
  0x0000000004fc5df6: nop
  0x0000000004fc5df7: call    4d56620h          ; OopMap{[80]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x0000000004fc5dfc: jmp     4fc5da7h
  0x0000000004fc5dfe: nop
  0x0000000004fc5dff: nop
  0x0000000004fc5e00: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fc5e07: mov     r10,0h
  0x0000000004fc5e11: mov     qword ptr [r15+2a8h],r10
  0x0000000004fc5e18: mov     r10,0h
  0x0000000004fc5e22: mov     qword ptr [r15+2b0h],r10
  0x0000000004fc5e29: add     rsp,60h
  0x0000000004fc5e2d: pop     rbp
  0x0000000004fc5e2e: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fc5e33: hlt
  0x0000000004fc5e34: hlt
  0x0000000004fc5e35: hlt
  0x0000000004fc5e36: hlt
  0x0000000004fc5e37: hlt
  0x0000000004fc5e38: hlt
  0x0000000004fc5e39: hlt
  0x0000000004fc5e3a: hlt
  0x0000000004fc5e3b: hlt
  0x0000000004fc5e3c: hlt
  0x0000000004fc5e3d: hlt
  0x0000000004fc5e3e: hlt
  0x0000000004fc5e3f: hlt
[Stub Code]
  0x0000000004fc5e40: nop                       ;   {no_reloc}
  0x0000000004fc5e41: nop
  0x0000000004fc5e42: nop
  0x0000000004fc5e43: nop
  0x0000000004fc5e44: nop
  0x0000000004fc5e45: mov     rbx,0h            ;   {static_stub}
  0x0000000004fc5e4f: jmp     4fc5e4fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fc5e54: call    4d89060h          ;   {runtime_call}
  0x0000000004fc5e59: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fc5e5e: sub     rsp,80h
  0x0000000004fc5e65: mov     qword ptr [rsp+78h],rax
  0x0000000004fc5e6a: mov     qword ptr [rsp+70h],rcx
  0x0000000004fc5e6f: mov     qword ptr [rsp+68h],rdx
  0x0000000004fc5e74: mov     qword ptr [rsp+60h],rbx
  0x0000000004fc5e79: mov     qword ptr [rsp+50h],rbp
  0x0000000004fc5e7e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fc5e83: mov     qword ptr [rsp+40h],rdi
  0x0000000004fc5e88: mov     qword ptr [rsp+38h],r8
  0x0000000004fc5e8d: mov     qword ptr [rsp+30h],r9
  0x0000000004fc5e92: mov     qword ptr [rsp+28h],r10
  0x0000000004fc5e97: mov     qword ptr [rsp+20h],r11
  0x0000000004fc5e9c: mov     qword ptr [rsp+18h],r12
  0x0000000004fc5ea1: mov     qword ptr [rsp+10h],r13
  0x0000000004fc5ea6: mov     qword ptr [rsp+8h],r14
  0x0000000004fc5eab: mov     qword ptr [rsp],r15
  0x0000000004fc5eaf: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fc5eb9: mov     rdx,4fc5e59h      ;   {internal_word}
  0x0000000004fc5ec3: mov     r8,rsp
  0x0000000004fc5ec6: and     rsp,0fffffffffffffff0h
  0x0000000004fc5eca: call    636c3d60h         ;   {runtime_call}
  0x0000000004fc5ecf: hlt
[Deopt Handler Code]
  0x0000000004fc5ed0: mov     r10,4fc5ed0h      ;   {section_word}
  0x0000000004fc5eda: push    r10
  0x0000000004fc5edc: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc5ee1: hlt
  0x0000000004fc5ee2: hlt
  0x0000000004fc5ee3: hlt
  0x0000000004fc5ee4: hlt
  0x0000000004fc5ee5: hlt
  0x0000000004fc5ee6: hlt
  0x0000000004fc5ee7: hlt
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000004fc5bc0' size='1576' address='0x0000000004fc5a50' relocation_offset='288' insts_offset='368' stub_offset='1008' scopes_data_offset='1192' scopes_pcs_offset='1328' dependencies_offset='1552' nul_chk_table_offset='1560' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='514' iicount='514' stamp='0.407'/>
<writer thread='1628'/>
Decoding compiled method 0x0000000004fd5210:
Code:
Argument 0 is unknown.RIP: 0x4fd53a0 Code size: 0x000002d8
<writer thread='24564'/>
[Loaded java.net.Inet6Address$Inet6AddressHolder from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000004fd53a0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd53a4: shl     r10,3h
  0x0000000004fd53a8: cmp     r10,rax
  0x0000000004fd53ab: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd53b1: nop     dword ptr [rax+rax+0h]
  0x0000000004fd53b9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fd53c0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd53c7: push    rbp
  0x0000000004fd53c8: sub     rsp,40h
  0x0000000004fd53cc: mov     rax,1e57e360h     ;   {metadata(method data for {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd53d6: mov     r8d,dword ptr [rax+0dch]
  0x0000000004fd53dd: add     r8d,8h
  0x0000000004fd53e1: mov     dword ptr [rax+0dch],r8d
  0x0000000004fd53e8: mov     rax,1e49d7d0h     ;   {metadata({method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd53f2: and     r8d,1ff8h
  0x0000000004fd53f9: cmp     r8d,0h
  0x0000000004fd53fd: je      4fd5526h          ;*aload_0
                                                ; - java.util.zip.ZipFile::ensureOpen@0 (line 685)

  0x0000000004fd5403: movsx   eax,byte ptr [rdx+19h]  ;*getfield closeRequested
                                                ; - java.util.zip.ZipFile::ensureOpen@1 (line 685)

  0x0000000004fd5407: cmp     eax,0h
  0x0000000004fd540a: mov     rax,1e57e360h     ;   {metadata(method data for {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd5414: mov     r8,108h
  0x0000000004fd541e: je      4fd542eh
  0x0000000004fd5424: mov     r8,118h
  0x0000000004fd542e: mov     rsi,qword ptr [rax+r8]
  0x0000000004fd5432: lea     rsi,[rsi+1h]
  0x0000000004fd5436: mov     qword ptr [rax+r8],rsi
  0x0000000004fd543a: jne     4fd54deh          ;*ifeq
                                                ; - java.util.zip.ZipFile::ensureOpen@4 (line 685)

  0x0000000004fd5440: mov     rax,qword ptr [rdx+10h]  ;*getfield jzfile
                                                ; - java.util.zip.ZipFile::ensureOpen@18 (line 689)

  0x0000000004fd5444: mov     rdx,0h
  0x0000000004fd544e: cmp     rax,rdx
  0x0000000004fd5451: mov     rdx,1e57e360h     ;   {metadata(method data for {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd545b: mov     rax,138h
  0x0000000004fd5465: jne     4fd5475h
  0x0000000004fd546b: mov     rax,148h
  0x0000000004fd5475: mov     r8,qword ptr [rdx+rax]
  0x0000000004fd5479: lea     r8,[r8+1h]
  0x0000000004fd547d: mov     qword ptr [rdx+rax],r8
  0x0000000004fd5481: je      4fd5493h          ;*lcmp
                                                ; - java.util.zip.ZipFile::ensureOpen@22 (line 689)

  0x0000000004fd5487: add     rsp,40h
  0x0000000004fd548b: pop     rbp
  0x0000000004fd548c: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd5492: ret                       ;*return
                                                ; - java.util.zip.ZipFile::ensureOpen@36 (line 692)

  0x0000000004fd5493: nop     dword ptr [rax+rax+0h]
  0x0000000004fd5498: jmp     4fd554ch          ;   {no_reloc}
  0x0000000004fd549d: add     byte ptr [rax],al
  0x0000000004fd549f: add     byte ptr [rax],al
  0x0000000004fd54a1: add     cl,ch
  0x0000000004fd54a3: scas    dword ptr [rdi]
  0x0000000004fd54a4: add     byte ptr [rax],al
  0x0000000004fd54a6: add     byte ptr [rbx+rcx*4+0ffffffffffffffc0h],cl
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@26 (line 690)

  0x0000000004fd54aa: mov     rdx,1e57e360h     ;   {metadata(method data for {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd54b4: add     qword ptr [rdx+158h],1h
  0x0000000004fd54bc: mov     r8,76b3d7a60h     ;   {oop(&quot;The object is not initialized.&quot;)}
  0x0000000004fd54c6: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 690)

  0x0000000004fd54c9: mov     qword ptr [rsp+28h],rax
  0x0000000004fd54ce: nop
  0x0000000004fd54cf: call    4d561a0h          ; OopMap{[40]=Oop off=308}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 690)
                                                ;   {optimized virtual_call}
  0x0000000004fd54d4: mov     rax,qword ptr [rsp+28h]
  0x0000000004fd54d9: jmp     4fd55b4h          ;*athrow
                                                ; - java.util.zip.ZipFile::ensureOpen@35 (line 690)

  0x0000000004fd54de: nop
  0x0000000004fd54e0: jmp     4fd5572h          ;   {no_reloc}
  0x0000000004fd54e5: add     byte ptr [rax],al
  0x0000000004fd54e7: add     byte ptr [rax],al
  0x0000000004fd54e9: add     cl,ch
  0x0000000004fd54eb: lea     eax,[rax]
  0x0000000004fd54ed: add     byte ptr [rax],al  ;*new
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 686)

  0x0000000004fd54ef: mov     r8,rax
  0x0000000004fd54f2: mov     rdx,1e57e360h     ;   {metadata(method data for {method} {0x000000001e49d7d8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000004fd54fc: add     qword ptr [rdx+128h],1h
  0x0000000004fd5504: mov     r8,76b3d7a18h     ;   {oop(&quot;zip file closed&quot;)}
  0x0000000004fd550e: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 686)

  0x0000000004fd5511: mov     qword ptr [rsp+30h],rax
  0x0000000004fd5516: nop
  0x0000000004fd5517: call    4d561a0h          ; OopMap{[48]=Oop off=380}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 686)
                                                ;   {optimized virtual_call}
  0x0000000004fd551c: mov     rax,qword ptr [rsp+30h]
  0x0000000004fd5521: jmp     4fd55b4h
  0x0000000004fd5526: mov     qword ptr [rsp+8h],rax
  0x0000000004fd552b: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd5533: call    4fc0d20h          ; OopMap{rdx=Oop off=408}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::ensureOpen@-1 (line 685)
                                                ;   {runtime_call}
  0x0000000004fd5538: jmp     4fd5403h
  0x0000000004fd553d: mov     rdx,0h            ;   {metadata(NULL)}
  0x0000000004fd5547: mov     eax,0a050f00h
  0x0000000004fd554c: call    4fbfc60h          ; OopMap{off=433}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@26 (line 690)
                                                ;   {runtime_call}
  0x0000000004fd5551: jmp     4fd5498h
  0x0000000004fd5556: mov     rdx,rdx
  0x0000000004fd5559: call    4d8a2e0h          ; OopMap{off=446}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@26 (line 690)
                                                ;   {runtime_call}
  0x0000000004fd555e: jmp     4fd54a7h
  0x0000000004fd5563: mov     rdx,0h            ;   {metadata(NULL)}
  0x0000000004fd556d: mov     eax,0a050f00h
  0x0000000004fd5572: call    4fbfc60h          ; OopMap{off=471}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@7 (line 686)
                                                ;   {runtime_call}
  0x0000000004fd5577: jmp     4fd54e0h
  0x0000000004fd557c: mov     rdx,rdx
  0x0000000004fd557f: call    4d8a2e0h          ; OopMap{off=484}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@7 (line 686)
                                                ;   {runtime_call}
  0x0000000004fd5584: jmp     4fd54efh
  0x0000000004fd5589: nop
  0x0000000004fd558a: nop
  0x0000000004fd558b: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fd5592: mov     r10,0h
  0x0000000004fd559c: mov     qword ptr [r15+2a8h],r10
  0x0000000004fd55a3: mov     r10,0h
  0x0000000004fd55ad: mov     qword ptr [r15+2b0h],r10
  0x0000000004fd55b4: add     rsp,40h
  0x0000000004fd55b8: pop     rbp
  0x0000000004fd55b9: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fd55be: hlt
  0x0000000004fd55bf: hlt
[Stub Code]
  0x0000000004fd55c0: nop                       ;   {no_reloc}
  0x0000000004fd55c1: nop
  0x0000000004fd55c2: nop
  0x0000000004fd55c3: nop
  0x0000000004fd55c4: nop
  0x0000000004fd55c5: mov     rbx,0h            ;   {static_stub}
  0x0000000004fd55cf: jmp     4fd55cfh          ;   {runtime_call}
  0x0000000004fd55d4: nop
  0x0000000004fd55d5: mov     rbx,0h            ;   {static_stub}
  0x0000000004fd55df: jmp     4fd55dfh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fd55e4: call    4d89060h          ;   {runtime_call}
  0x0000000004fd55e9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fd55ee: sub     rsp,80h
  0x0000000004fd55f5: mov     qword ptr [rsp+78h],rax
  0x0000000004fd55fa: mov     qword ptr [rsp+70h],rcx
  0x0000000004fd55ff: mov     qword ptr [rsp+68h],rdx
  0x0000000004fd5604: mov     qword ptr [rsp+60h],rbx
  0x0000000004fd5609: mov     qword ptr [rsp+50h],rbp
  0x0000000004fd560e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fd5613: mov     qword ptr [rsp+40h],rdi
  0x0000000004fd5618: mov     qword ptr [rsp+38h],r8
  0x0000000004fd561d: mov     qword ptr [rsp+30h],r9
  0x0000000004fd5622: mov     qword ptr [rsp+28h],r10
  0x0000000004fd5627: mov     qword ptr [rsp+20h],r11
  0x0000000004fd562c: mov     qword ptr [rsp+18h],r12
  0x0000000004fd5631: mov     qword ptr [rsp+10h],r13
  0x0000000004fd5636: mov     qword ptr [rsp+8h],r14
  0x0000000004fd563b: mov     qword ptr [rsp],r15
  0x0000000004fd563f: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fd5649: mov     rdx,4fd55e9h      ;   {internal_word}
  0x0000000004fd5653: mov     r8,rsp
  0x0000000004fd5656: and     rsp,0fffffffffffffff0h
  0x0000000004fd565a: call    636c3d60h         ;   {runtime_call}
  0x0000000004fd565f: hlt
[Deopt Handler Code]
  0x0000000004fd5660: mov     r10,4fd5660h      ;   {section_word}
  0x0000000004fd566a: push    r10
  0x0000000004fd566c: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd5671: hlt
  0x0000000004fd5672: hlt
  0x0000000004fd5673: hlt
  0x0000000004fd5674: hlt
  0x0000000004fd5675: hlt
  0x0000000004fd5676: hlt
  0x0000000004fd5677: hlt
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000004fd53a0' size='1576' address='0x0000000004fd5210' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1248' dependencies_offset='1568' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='260' iicount='260' stamp='0.420'/>
<writer thread='1724'/>
Decoding compiled method 0x0000000004fd4350:
Code:
Argument 0 is unknown.RIP: 0x4fd44c0 Code size: 0x00000330
[Entry Point]
[Constants]
  # {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fd44c0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd44c4: shl     r10,3h
  0x0000000004fd44c8: cmp     r10,rax
  0x0000000004fd44cb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd44d1: nop     dword ptr [rax+rax+0h]
  0x0000000004fd44d9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fd44e0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd44e7: push    rbp
  0x0000000004fd44e8: sub     rsp,30h
  0x0000000004fd44ec: mov     rax,1e4ceb48h     ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd44f6: mov     esi,dword ptr [rax+0dch]
  0x0000000004fd44fc: add     esi,8h
  0x0000000004fd44ff: mov     dword ptr [rax+0dch],esi
  0x0000000004fd4505: mov     rax,1e2a4db0h     ;   {metadata({method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd450f: and     esi,1ff8h
  0x0000000004fd4515: cmp     esi,0h
  0x0000000004fd4518: je      4fd46d5h          ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000004fd451e: mov     eax,dword ptr [rdx+0ch]
  0x0000000004fd4521: shl     rax,3h            ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000004fd4525: mov     esi,dword ptr [r8+0ch]  ; implicit exception: dispatches to 0x0000000004fd46ec
  0x0000000004fd4529: shl     rsi,3h            ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000004fd452d: mov     edi,dword ptr [rsi+0ch]  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000004fd46f1
  0x0000000004fd4530: cmp     r9d,0h
  0x0000000004fd4534: mov     rbx,1e4ceb48h     ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd453e: mov     rdx,108h
  0x0000000004fd4548: jl      4fd4558h
  0x0000000004fd454e: mov     rdx,118h
  0x0000000004fd4558: mov     rcx,qword ptr [rbx+rdx]
  0x0000000004fd455c: lea     rcx,[rcx+1h]
  0x0000000004fd4560: mov     qword ptr [rbx+rdx],rcx
  0x0000000004fd4564: jl      4fd46a2h          ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000004fd456a: mov     ebx,dword ptr [rax+0ch]  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000004fd46f6
  0x0000000004fd456d: sub     ebx,edi
  0x0000000004fd456f: cmp     r9d,ebx
  0x0000000004fd4572: mov     rbx,1e4ceb48h     ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd457c: mov     rdx,128h
  0x0000000004fd4586: jle     4fd4596h
  0x0000000004fd458c: mov     rdx,138h
  0x0000000004fd4596: mov     rcx,qword ptr [rbx+rdx]
  0x0000000004fd459a: lea     rcx,[rcx+1h]
  0x0000000004fd459e: mov     qword ptr [rbx+rdx],rcx
  0x0000000004fd45a2: jnle    4fd46a2h          ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000004fd45a8: mov     ebx,0h
  0x0000000004fd45ad: jmp     4fd4662h          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000004fd45b2: nop     word ptr [rax+rax+0h]
  0x0000000004fd45b8: mov     rdx,r9
  0x0000000004fd45bb: inc     edx
  0x0000000004fd45bd: movsxd  rcx,r9d
  0x0000000004fd45c0: cmp     r9d,dword ptr [rax+0ch]
  0x0000000004fd45c4: jnb     4fd46fbh
  0x0000000004fd45ca: movzx   ecx,word ptr [rax+rcx*2+10h]
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000004fd45cf: mov     r8,rbx
  0x0000000004fd45d2: inc     r8d
  0x0000000004fd45d5: movsxd  r9,ebx
  0x0000000004fd45d8: cmp     ebx,dword ptr [rsi+0ch]
  0x0000000004fd45db: jnb     4fd4704h
  0x0000000004fd45e1: movzx   ebx,word ptr [rsi+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000004fd45e7: mov     r9,1e4ceb48h      ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd45f1: mov     r11d,dword ptr [r9+0e0h]
  0x0000000004fd45f8: add     r11d,8h
  0x0000000004fd45fc: mov     dword ptr [r9+0e0h],r11d
  0x0000000004fd4603: mov     r9,1e2a4db0h      ;   {metadata({method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd460d: and     r11d,0fff8h
  0x0000000004fd4614: cmp     r11d,0h
  0x0000000004fd4618: je      4fd470dh          ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000004fd461e: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fd4624: cmp     ecx,ebx
  0x0000000004fd4626: mov     rbx,1e4ceb48h     ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd4630: mov     rcx,168h
  0x0000000004fd463a: je      4fd464ah
  0x0000000004fd4640: mov     rcx,178h
  0x0000000004fd464a: mov     r9,qword ptr [rbx+rcx]
  0x0000000004fd464e: lea     r9,[r9+1h]
  0x0000000004fd4652: mov     qword ptr [rbx+rcx],r9
  0x0000000004fd4656: jne     4fd46b3h          ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000004fd465c: mov     rbx,r8
  0x0000000004fd465f: mov     r9,rdx            ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000004fd4662: dec     edi
  0x0000000004fd4664: cmp     edi,0h
  0x0000000004fd4667: mov     rdx,1e4ceb48h     ;   {metadata(method data for {method} {0x000000001e2a4db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd4671: mov     rcx,148h
  0x0000000004fd467b: jl      4fd468bh
  0x0000000004fd4681: mov     rcx,158h
  0x0000000004fd468b: mov     r8,qword ptr [rdx+rcx]
  0x0000000004fd468f: lea     r8,[r8+1h]
  0x0000000004fd4693: mov     qword ptr [rdx+rcx],r8
  0x0000000004fd4697: jl      4fd46c4h
  0x0000000004fd469d: jmp     4fd45b8h          ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000004fd46a2: mov     eax,0h
  0x0000000004fd46a7: add     rsp,30h
  0x0000000004fd46ab: pop     rbp
  0x0000000004fd46ac: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd46b2: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000004fd46b3: mov     eax,0h
  0x0000000004fd46b8: add     rsp,30h
  0x0000000004fd46bc: pop     rbp
  0x0000000004fd46bd: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd46c3: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000004fd46c4: mov     eax,1h
  0x0000000004fd46c9: add     rsp,30h
  0x0000000004fd46cd: pop     rbp
  0x0000000004fd46ce: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd46d4: ret
  0x0000000004fd46d5: mov     qword ptr [rsp+8h],rax
  0x0000000004fd46da: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd46e2: call    4fc0d20h          ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000004fd46e7: jmp     4fd451eh
  0x0000000004fd46ec: call    4d88100h          ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000004fd46f1: call    4d88100h          ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000004fd46f6: call    4d88100h          ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000004fd46fb: mov     qword ptr [rsp],r9
  0x0000000004fd46ff: call    4d888c0h          ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000004fd4704: mov     qword ptr [rsp],rbx
  0x0000000004fd4708: call    4d888c0h          ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000004fd470d: mov     qword ptr [rsp+8h],r9
  0x0000000004fd4712: mov     qword ptr [rsp],41h
  0x0000000004fd471a: call    4fc0d20h          ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000004fd471f: jmp     4fd461eh
  0x0000000004fd4724: nop
  0x0000000004fd4725: nop
  0x0000000004fd4726: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fd472d: mov     r10,0h
  0x0000000004fd4737: mov     qword ptr [r15+2a8h],r10
  0x0000000004fd473e: mov     r10,0h
  0x0000000004fd4748: mov     qword ptr [r15+2b0h],r10
  0x0000000004fd474f: add     rsp,30h
  0x0000000004fd4753: pop     rbp
  0x0000000004fd4754: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fd4759: hlt
  0x0000000004fd475a: hlt
  0x0000000004fd475b: hlt
  0x0000000004fd475c: hlt
  0x0000000004fd475d: hlt
  0x0000000004fd475e: hlt
  0x0000000004fd475f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fd4760: call    4d89060h          ;   {no_reloc}
  0x0000000004fd4765: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fd476a: sub     rsp,80h
  0x0000000004fd4771: mov     qword ptr [rsp+78h],rax
  0x0000000004fd4776: mov     qword ptr [rsp+70h],rcx
  0x0000000004fd477b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fd4780: mov     qword ptr [rsp+60h],rbx
  0x0000000004fd4785: mov     qword ptr [rsp+50h],rbp
  0x0000000004fd478a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fd478f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fd4794: mov     qword ptr [rsp+38h],r8
  0x0000000004fd4799: mov     qword ptr [rsp+30h],r9
  0x0000000004fd479e: mov     qword ptr [rsp+28h],r10
  0x0000000004fd47a3: mov     qword ptr [rsp+20h],r11
  0x0000000004fd47a8: mov     qword ptr [rsp+18h],r12
  0x0000000004fd47ad: mov     qword ptr [rsp+10h],r13
  0x0000000004fd47b2: mov     qword ptr [rsp+8h],r14
  0x0000000004fd47b7: mov     qword ptr [rsp],r15
  0x0000000004fd47bb: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fd47c5: mov     rdx,4fd4765h      ;   {internal_word}
  0x0000000004fd47cf: mov     r8,rsp
  0x0000000004fd47d2: and     rsp,0fffffffffffffff0h
  0x0000000004fd47d6: call    636c3d60h         ;   {runtime_call}
  0x0000000004fd47db: hlt
[Deopt Handler Code]
  0x0000000004fd47dc: mov     r10,4fd47dch      ;   {section_word}
  0x0000000004fd47e6: push    r10
  0x0000000004fd47e8: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd47ed: hlt
  0x0000000004fd47ee: hlt
  0x0000000004fd47ef: hlt
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000004fd44c0' size='1824' address='0x0000000004fd4350' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1054' backedge_count='795' iicount='1054' stamp='0.432'/>
<writer thread='15116'/>
<task_queued compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='11008' iicount='11008' stamp='0.432' comment='tiered' hot_count='11008'/>
<writer thread='24564'/>
<task_queued compile_id='30' method='java/lang/Math min (II)I' bytes='11' count='3200' iicount='3200' level='3' stamp='0.432' comment='tiered' hot_count='3200'/>
<writer thread='15116'/>
<task_queued compile_id='31' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='11392' iicount='11392' stamp='0.432' comment='tiered' hot_count='11392'/>
<task_queued compile_id='32' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='12288' iicount='12288' stamp='0.432' comment='tiered' hot_count='12288'/>
<writer thread='12568'/>
Decoding compiled method 0x0000000004fd3890:
Code:
Argument 0 is unknown.RIP: 0x4fd3a20 Code size: 0x00000688
<writer thread='24564'/>
[Loaded java.net.SocksSocketImpl$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='15116'/>
[Loaded me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest from file:/D:/2019/October/git/boom-java/target/classes/]
<writer thread='12568'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000004fd3a20: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd3a24: shl     r10,3h
  0x0000000004fd3a28: cmp     r10,rax
  0x0000000004fd3a2b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd3a31: nop     dword ptr [rax+rax+0h]
  0x0000000004fd3a39: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fd3a40: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd3a47: push    rbp
  0x0000000004fd3a48: sub     rsp,60h
  0x0000000004fd3a4c: mov     rsi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3a56: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd3a5c: add     edi,8h
  0x0000000004fd3a5f: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd3a65: mov     rsi,1e4af9b0h     ;   {metadata({method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3a6f: and     edi,1ff8h
  0x0000000004fd3a75: cmp     edi,0h
  0x0000000004fd3a78: je      4fd3f39h          ;*aload_0
                                                ; - java.util.zip.ZipCoder::encoder@0 (line 152)

  0x0000000004fd3a7e: mov     esi,dword ptr [rdx+18h]
  0x0000000004fd3a81: shl     rsi,3h            ;*getfield enc
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)

  0x0000000004fd3a85: cmp     rsi,0h
  0x0000000004fd3a89: mov     rsi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3a93: mov     rdi,108h
  0x0000000004fd3a9d: jne     4fd3aadh
  0x0000000004fd3aa3: mov     rdi,118h
  0x0000000004fd3aad: mov     rbx,qword ptr [rsi+rdi]
  0x0000000004fd3ab1: lea     rbx,[rbx+1h]
  0x0000000004fd3ab5: mov     qword ptr [rsi+rdi],rbx
  0x0000000004fd3ab9: jne     4fd3f26h          ;*ifnonnull
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)

  0x0000000004fd3abf: mov     esi,dword ptr [rdx+10h]
  0x0000000004fd3ac2: shl     rsi,3h            ;*getfield cs
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)

  0x0000000004fd3ac6: cmp     rax,qword ptr [rsi]  ; implicit exception: dispatches to 0x0000000004fd3f50
  0x0000000004fd3ac9: mov     rdi,rsi
  0x0000000004fd3acc: mov     rbx,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3ad6: mov     edi,dword ptr [rdi+8h]
  0x0000000004fd3ad9: shl     rdi,3h
  0x0000000004fd3add: cmp     rdi,qword ptr [rbx+130h]
  0x0000000004fd3ae4: jne     4fd3af3h
  0x0000000004fd3ae6: add     qword ptr [rbx+138h],1h
  0x0000000004fd3aee: jmp     4fd3b59h
  0x0000000004fd3af3: cmp     rdi,qword ptr [rbx+140h]
  0x0000000004fd3afa: jne     4fd3b09h
  0x0000000004fd3afc: add     qword ptr [rbx+148h],1h
  0x0000000004fd3b04: jmp     4fd3b59h
  0x0000000004fd3b09: cmp     qword ptr [rbx+130h],0h
  0x0000000004fd3b14: jne     4fd3b2dh
  0x0000000004fd3b16: mov     qword ptr [rbx+130h],rdi
  0x0000000004fd3b1d: mov     qword ptr [rbx+138h],1h
  0x0000000004fd3b28: jmp     4fd3b59h
  0x0000000004fd3b2d: cmp     qword ptr [rbx+140h],0h
  0x0000000004fd3b38: jne     4fd3b51h
  0x0000000004fd3b3a: mov     qword ptr [rbx+140h],rdi
  0x0000000004fd3b41: mov     qword ptr [rbx+148h],1h
  0x0000000004fd3b4c: jmp     4fd3b59h
  0x0000000004fd3b51: add     qword ptr [rbx+128h],1h
  0x0000000004fd3b59: mov     qword ptr [rsp+48h],rdx
  0x0000000004fd3b5e: mov     rdx,rsi           ;*invokevirtual newEncoder
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)

  0x0000000004fd3b61: nop
  0x0000000004fd3b62: nop
  0x0000000004fd3b63: nop
  0x0000000004fd3b64: nop
  0x0000000004fd3b65: mov     rax,0ffffffffffffffffh
  0x0000000004fd3b6f: call    4d563e0h          ; OopMap{[72]=Oop off=340}
                                                ;*invokevirtual newEncoder
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {virtual_call}
  0x0000000004fd3b74: cmp     rax,qword ptr [rax]  ;*invokevirtual onMalformedInput
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; implicit exception: dispatches to 0x0000000004fd3f55
  0x0000000004fd3b77: mov     rsi,rax
  0x0000000004fd3b7a: mov     rdi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3b84: mov     esi,dword ptr [rsi+8h]
  0x0000000004fd3b87: shl     rsi,3h
  0x0000000004fd3b8b: cmp     rsi,qword ptr [rdi+160h]
  0x0000000004fd3b92: jne     4fd3ba1h
  0x0000000004fd3b94: add     qword ptr [rdi+168h],1h
  0x0000000004fd3b9c: jmp     4fd3c07h
  0x0000000004fd3ba1: cmp     rsi,qword ptr [rdi+170h]
  0x0000000004fd3ba8: jne     4fd3bb7h
  0x0000000004fd3baa: add     qword ptr [rdi+178h],1h
  0x0000000004fd3bb2: jmp     4fd3c07h
  0x0000000004fd3bb7: cmp     qword ptr [rdi+160h],0h
  0x0000000004fd3bc2: jne     4fd3bdbh
  0x0000000004fd3bc4: mov     qword ptr [rdi+160h],rsi
  0x0000000004fd3bcb: mov     qword ptr [rdi+168h],1h
  0x0000000004fd3bd6: jmp     4fd3c07h
  0x0000000004fd3bdb: cmp     qword ptr [rdi+170h],0h
  0x0000000004fd3be6: jne     4fd3bffh
  0x0000000004fd3be8: mov     qword ptr [rdi+170h],rsi
  0x0000000004fd3bef: mov     qword ptr [rdi+178h],1h
  0x0000000004fd3bfa: jmp     4fd3c07h
  0x0000000004fd3bff: add     qword ptr [rdi+158h],1h
  0x0000000004fd3c07: mov     rsi,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3c11: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd3c17: add     edi,8h
  0x0000000004fd3c1a: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd3c20: mov     rsi,1e405680h     ;   {metadata({method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3c2a: and     edi,7ffff8h
  0x0000000004fd3c30: cmp     edi,0h
  0x0000000004fd3c33: je      4fd3f5ah
  0x0000000004fd3c39: mov     rsi,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3c43: inc     dword ptr [rsi+108h]  ;*ifnonnull
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x0000000004fd3c49: mov     rsi,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd3c53: mov     r10,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd3c5d: shr     r10,3h
  0x0000000004fd3c61: mov     dword ptr [rax+20h],r10d
  0x0000000004fd3c65: mov     rsi,rax
  0x0000000004fd3c68: shr     rsi,9h
  0x0000000004fd3c6c: mov     rdi,10ac8000h
  0x0000000004fd3c76: mov     byte ptr [rsi+rdi],0h  ;*putfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x0000000004fd3c7a: mov     rsi,rax
  0x0000000004fd3c7d: mov     rdi,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3c87: mov     esi,dword ptr [rsi+8h]
  0x0000000004fd3c8a: shl     rsi,3h
  0x0000000004fd3c8e: cmp     rsi,qword ptr [rdi+140h]
  0x0000000004fd3c95: jne     4fd3ca4h
  0x0000000004fd3c97: add     qword ptr [rdi+148h],1h
  0x0000000004fd3c9f: jmp     4fd3d0ah
  0x0000000004fd3ca4: cmp     rsi,qword ptr [rdi+150h]
  0x0000000004fd3cab: jne     4fd3cbah
  0x0000000004fd3cad: add     qword ptr [rdi+158h],1h
  0x0000000004fd3cb5: jmp     4fd3d0ah
  0x0000000004fd3cba: cmp     qword ptr [rdi+140h],0h
  0x0000000004fd3cc5: jne     4fd3cdeh
  0x0000000004fd3cc7: mov     qword ptr [rdi+140h],rsi
  0x0000000004fd3cce: mov     qword ptr [rdi+148h],1h
  0x0000000004fd3cd9: jmp     4fd3d0ah
  0x0000000004fd3cde: cmp     qword ptr [rdi+150h],0h
  0x0000000004fd3ce9: jne     4fd3d02h
  0x0000000004fd3ceb: mov     qword ptr [rdi+150h],rsi
  0x0000000004fd3cf2: mov     qword ptr [rdi+158h],1h
  0x0000000004fd3cfd: jmp     4fd3d0ah
  0x0000000004fd3d02: add     qword ptr [rdi+138h],1h
  0x0000000004fd3d0a: mov     rsi,1e583760h     ;   {metadata(method data for {method} {0x000000001e405718} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3d14: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd3d1a: add     edi,8h
  0x0000000004fd3d1d: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd3d23: mov     rsi,1e405710h     ;   {metadata({method} {0x000000001e405718} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3d2d: and     edi,7ffff8h
  0x0000000004fd3d33: cmp     edi,0h
  0x0000000004fd3d36: je      4fd3f71h
  0x0000000004fd3d3c: mov     rsi,rax
  0x0000000004fd3d3f: mov     rdi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd3d49: mov     esi,dword ptr [rsi+8h]
  0x0000000004fd3d4c: shl     rsi,3h
  0x0000000004fd3d50: cmp     rsi,qword ptr [rdi+190h]
  0x0000000004fd3d57: jne     4fd3d66h
  0x0000000004fd3d59: add     qword ptr [rdi+198h],1h
  0x0000000004fd3d61: jmp     4fd3dcch
  0x0000000004fd3d66: cmp     rsi,qword ptr [rdi+1a0h]
  0x0000000004fd3d6d: jne     4fd3d7ch
  0x0000000004fd3d6f: add     qword ptr [rdi+1a8h],1h
  0x0000000004fd3d77: jmp     4fd3dcch
  0x0000000004fd3d7c: cmp     qword ptr [rdi+190h],0h
  0x0000000004fd3d87: jne     4fd3da0h
  0x0000000004fd3d89: mov     qword ptr [rdi+190h],rsi
  0x0000000004fd3d90: mov     qword ptr [rdi+198h],1h
  0x0000000004fd3d9b: jmp     4fd3dcch
  0x0000000004fd3da0: cmp     qword ptr [rdi+1a0h],0h
  0x0000000004fd3dab: jne     4fd3dc4h
  0x0000000004fd3dad: mov     qword ptr [rdi+1a0h],rsi
  0x0000000004fd3db4: mov     qword ptr [rdi+1a8h],1h
  0x0000000004fd3dbf: jmp     4fd3dcch
  0x0000000004fd3dc4: add     qword ptr [rdi+188h],1h
  0x0000000004fd3dcc: mov     rsi,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3dd6: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd3ddc: add     edi,8h
  0x0000000004fd3ddf: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd3de5: mov     rsi,1e405858h     ;   {metadata({method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3def: and     edi,7ffff8h
  0x0000000004fd3df5: cmp     edi,0h
  0x0000000004fd3df8: je      4fd3f88h
  0x0000000004fd3dfe: mov     rsi,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3e08: inc     dword ptr [rsi+108h]  ;*ifnonnull
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x0000000004fd3e0e: mov     rsi,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd3e18: mov     r10,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd3e22: shr     r10,3h
  0x0000000004fd3e26: mov     dword ptr [rax+24h],r10d
  0x0000000004fd3e2a: mov     rsi,rax
  0x0000000004fd3e2d: shr     rsi,9h
  0x0000000004fd3e31: mov     rdi,10ac8000h
  0x0000000004fd3e3b: mov     byte ptr [rsi+rdi],0h  ;*putfield unmappableCharacterAction
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x0000000004fd3e3f: mov     rsi,rax
  0x0000000004fd3e42: mov     rdi,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3e4c: mov     esi,dword ptr [rsi+8h]
  0x0000000004fd3e4f: shl     rsi,3h
  0x0000000004fd3e53: cmp     rsi,qword ptr [rdi+140h]
  0x0000000004fd3e5a: jne     4fd3e69h
  0x0000000004fd3e5c: add     qword ptr [rdi+148h],1h
  0x0000000004fd3e64: jmp     4fd3ecfh
  0x0000000004fd3e69: cmp     rsi,qword ptr [rdi+150h]
  0x0000000004fd3e70: jne     4fd3e7fh
  0x0000000004fd3e72: add     qword ptr [rdi+158h],1h
  0x0000000004fd3e7a: jmp     4fd3ecfh
  0x0000000004fd3e7f: cmp     qword ptr [rdi+140h],0h
  0x0000000004fd3e8a: jne     4fd3ea3h
  0x0000000004fd3e8c: mov     qword ptr [rdi+140h],rsi
  0x0000000004fd3e93: mov     qword ptr [rdi+148h],1h
  0x0000000004fd3e9e: jmp     4fd3ecfh
  0x0000000004fd3ea3: cmp     qword ptr [rdi+150h],0h
  0x0000000004fd3eae: jne     4fd3ec7h
  0x0000000004fd3eb0: mov     qword ptr [rdi+150h],rsi
  0x0000000004fd3eb7: mov     qword ptr [rdi+158h],1h
  0x0000000004fd3ec2: jmp     4fd3ecfh
  0x0000000004fd3ec7: add     qword ptr [rdi+138h],1h
  0x0000000004fd3ecf: mov     rsi,1e583af8h     ;   {metadata(method data for {method} {0x000000001e4058f0} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3ed9: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd3edf: add     edi,8h
  0x0000000004fd3ee2: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd3ee8: mov     rsi,1e4058e8h     ;   {metadata({method} {0x000000001e4058f0} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd3ef2: and     edi,7ffff8h
  0x0000000004fd3ef8: cmp     edi,0h
  0x0000000004fd3efb: je      4fd3f9fh
  0x0000000004fd3f01: mov     rdx,qword ptr [rsp+48h]
  0x0000000004fd3f06: mov     r10,rax
  0x0000000004fd3f09: shr     r10,3h
  0x0000000004fd3f0d: mov     dword ptr [rdx+18h],r10d
  0x0000000004fd3f11: mov     rax,rdx
  0x0000000004fd3f14: shr     rax,9h
  0x0000000004fd3f18: mov     rsi,10ac8000h
  0x0000000004fd3f22: mov     byte ptr [rax+rsi],0h  ;*putfield enc
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)

  0x0000000004fd3f26: mov     eax,dword ptr [rdx+18h]
  0x0000000004fd3f29: shl     rax,3h            ;*getfield enc
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)

  0x0000000004fd3f2d: add     rsp,60h
  0x0000000004fd3f31: pop     rbp
  0x0000000004fd3f32: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd3f38: ret
  0x0000000004fd3f39: mov     qword ptr [rsp+8h],rsi
  0x0000000004fd3f3e: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd3f46: call    4fc0d20h          ; OopMap{rdx=Oop off=1323}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::encoder@-1 (line 152)
                                                ;   {runtime_call}
  0x0000000004fd3f4b: jmp     4fd3a7eh
  0x0000000004fd3f50: call    4d88100h          ; OopMap{rdx=Oop rsi=Oop off=1333}
                                                ;*invokevirtual newEncoder
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {runtime_call}
  0x0000000004fd3f55: call    4d88100h          ; OopMap{[72]=Oop rax=Oop off=1338}
                                                ;*invokevirtual onMalformedInput
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x0000000004fd3f5a: mov     qword ptr [rsp+8h],rsi
  0x0000000004fd3f5f: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd3f67: call    4fc0d20h          ; OopMap{[72]=Oop rax=Oop off=1356}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@-1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x0000000004fd3f6c: jmp     4fd3c39h
  0x0000000004fd3f71: mov     qword ptr [rsp+8h],rsi
  0x0000000004fd3f76: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd3f7e: call    4fc0d20h          ; OopMap{[72]=Oop rax=Oop off=1379}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnMalformedInput@-1 (line 398)
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@21 (line 385)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x0000000004fd3f83: jmp     4fd3d3ch
  0x0000000004fd3f88: mov     qword ptr [rsp+8h],rsi
  0x0000000004fd3f8d: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd3f95: call    4fc0d20h          ; OopMap{[72]=Oop rax=Oop off=1402}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@-1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x0000000004fd3f9a: jmp     4fd3dfeh
  0x0000000004fd3f9f: mov     qword ptr [rsp+8h],rsi
  0x0000000004fd3fa4: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd3fac: call    4fc0d20h          ; OopMap{[72]=Oop rax=Oop off=1425}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnUnmappableCharacter@-1 (line 442)
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@21 (line 429)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x0000000004fd3fb1: jmp     4fd3f01h
  0x0000000004fd3fb6: nop
  0x0000000004fd3fb7: nop
  0x0000000004fd3fb8: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fd3fbf: mov     r10,0h
  0x0000000004fd3fc9: mov     qword ptr [r15+2a8h],r10
  0x0000000004fd3fd0: mov     r10,0h
  0x0000000004fd3fda: mov     qword ptr [r15+2b0h],r10
  0x0000000004fd3fe1: add     rsp,60h
  0x0000000004fd3fe5: pop     rbp
  0x0000000004fd3fe6: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fd3feb: hlt
  0x0000000004fd3fec: hlt
  0x0000000004fd3fed: hlt
  0x0000000004fd3fee: hlt
  0x0000000004fd3fef: hlt
  0x0000000004fd3ff0: hlt
  0x0000000004fd3ff1: hlt
  0x0000000004fd3ff2: hlt
  0x0000000004fd3ff3: hlt
  0x0000000004fd3ff4: hlt
  0x0000000004fd3ff5: hlt
  0x0000000004fd3ff6: hlt
  0x0000000004fd3ff7: hlt
  0x0000000004fd3ff8: hlt
  0x0000000004fd3ff9: hlt
  0x0000000004fd3ffa: hlt
  0x0000000004fd3ffb: hlt
  0x0000000004fd3ffc: hlt
  0x0000000004fd3ffd: hlt
  0x0000000004fd3ffe: hlt
  0x0000000004fd3fff: hlt
[Stub Code]
  0x0000000004fd4000: nop                       ;   {no_reloc}
  0x0000000004fd4001: nop
  0x0000000004fd4002: nop
  0x0000000004fd4003: nop
  0x0000000004fd4004: nop
  0x0000000004fd4005: mov     rbx,0h            ;   {static_stub}
  0x0000000004fd400f: jmp     4fd400fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fd4014: call    4d89060h          ;   {runtime_call}
  0x0000000004fd4019: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fd401e: sub     rsp,80h
  0x0000000004fd4025: mov     qword ptr [rsp+78h],rax
  0x0000000004fd402a: mov     qword ptr [rsp+70h],rcx
  0x0000000004fd402f: mov     qword ptr [rsp+68h],rdx
  0x0000000004fd4034: mov     qword ptr [rsp+60h],rbx
  0x0000000004fd4039: mov     qword ptr [rsp+50h],rbp
  0x0000000004fd403e: mov     qword ptr [rsp+48h],rsi
  0x0000000004fd4043: mov     qword ptr [rsp+40h],rdi
  0x0000000004fd4048: mov     qword ptr [rsp+38h],r8
  0x0000000004fd404d: mov     qword ptr [rsp+30h],r9
  0x0000000004fd4052: mov     qword ptr [rsp+28h],r10
  0x0000000004fd4057: mov     qword ptr [rsp+20h],r11
  0x0000000004fd405c: mov     qword ptr [rsp+18h],r12
  0x0000000004fd4061: mov     qword ptr [rsp+10h],r13
  0x0000000004fd4066: mov     qword ptr [rsp+8h],r14
  0x0000000004fd406b: mov     qword ptr [rsp],r15
  0x0000000004fd406f: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fd4079: mov     rdx,4fd4019h      ;   {internal_word}
  0x0000000004fd4083: mov     r8,rsp
  0x0000000004fd4086: and     rsp,0fffffffffffffff0h
  0x0000000004fd408a: call    636c3d60h         ;   {runtime_call}
  0x0000000004fd408f: hlt
[Deopt Handler Code]
  0x0000000004fd4090: mov     r10,4fd4090h      ;   {section_word}
  0x0000000004fd409a: push    r10
  0x0000000004fd409c: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd40a1: hlt
  0x0000000004fd40a2: hlt
  0x0000000004fd40a3: hlt
  0x0000000004fd40a4: hlt
  0x0000000004fd40a5: hlt
  0x0000000004fd40a6: hlt
  0x0000000004fd40a7: hlt
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000004fd3a20' size='2680' address='0x0000000004fd3890' relocation_offset='288' insts_offset='400' stub_offset='1904' scopes_data_offset='2120' scopes_pcs_offset='2296' dependencies_offset='2648' nul_chk_table_offset='2656' oops_offset='2072' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='260' iicount='260' stamp='0.449'/>
<writer thread='25016'/>
Decoding compiled method 0x0000000004fcc890:
Code:
Argument 0 is unknown.RIP: 0x4fcca80 Code size: 0x00000b18
<writer thread='15116'/>
[Loaded sun.launcher.LauncherHelper$FXHelper from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded java.net.ProxySelector from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000004fcca80: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fcca84: shl     r10,3h
  0x0000000004fcca88: cmp     r10,rax
  0x0000000004fcca8b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fcca91: nop     dword ptr [rax+rax+0h]
  0x0000000004fcca99: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fccaa0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fccaa7: push    rbp
  0x0000000004fccaa8: sub     rsp,80h
  0x0000000004fccaaf: mov     qword ptr [rsp+50h],rdx
  0x0000000004fccab4: mov     qword ptr [rsp+60h],r8
  0x0000000004fccab9: mov     qword ptr [rsp+70h],rsi
  0x0000000004fccabe: mov     rax,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccac8: mov     ebx,dword ptr [rax+0dch]
  0x0000000004fccace: add     ebx,8h
  0x0000000004fccad1: mov     dword ptr [rax+0dch],ebx
  0x0000000004fccad7: mov     rax,1e404070h     ;   {metadata({method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccae1: and     ebx,1ff8h
  0x0000000004fccae7: cmp     ebx,0h
  0x0000000004fccaea: je      4fcd372h          ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x0000000004fccaf0: mov     rbx,r9
  0x0000000004fccaf3: add     ebx,edi
  0x0000000004fccaf5: mov     dword ptr [rsp+68h],ebx
  0x0000000004fccaf9: mov     eax,dword ptr [rsi+0ch]  ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x0000000004fcd389
  0x0000000004fccafc: mov     rcx,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccb06: add     qword ptr [rcx+108h],1h
  0x0000000004fccb0e: mov     rcx,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fccb18: mov     r11d,dword ptr [rcx+0dch]
  0x0000000004fccb1f: add     r11d,8h
  0x0000000004fccb23: mov     dword ptr [rcx+0dch],r11d
  0x0000000004fccb2a: mov     rcx,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fccb34: and     r11d,7ffff8h
  0x0000000004fccb3b: cmp     r11d,0h
  0x0000000004fccb3f: je      4fcd38eh
  0x0000000004fccb45: cmp     edi,eax
  0x0000000004fccb47: mov     rcx,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fccb51: mov     r11,108h
  0x0000000004fccb5b: jnle    4fccb6bh
  0x0000000004fccb61: mov     r11,118h
  0x0000000004fccb6b: mov     r13,qword ptr [rcx+r11]
  0x0000000004fccb6f: lea     r13,[r13+1h]
  0x0000000004fccb73: mov     qword ptr [rcx+r11],r13
  0x0000000004fccb77: jnle    4fccb92h          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000004fccb7d: mov     rax,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fccb87: inc     dword ptr [rax+128h]
  0x0000000004fccb8d: jmp     4fccb95h          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000004fccb92: mov     rdi,rax           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000004fccb95: mov     eax,0h
  0x0000000004fccb9a: jmp     4fccc54h          ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x0000000004fccb9f: nop
  0x0000000004fccba0: movsxd  rcx,r9d
  0x0000000004fccba3: cmp     r9d,dword ptr [r8+0ch]  ; implicit exception: dispatches to 0x0000000004fcd3a5
  0x0000000004fccba7: jnb     4fcd3afh
  0x0000000004fccbad: movzx   ecx,word ptr [r8+rcx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000004fccbb3: cmp     ecx,80h
  0x0000000004fccbb9: mov     r11,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccbc3: mov     r13,138h
  0x0000000004fccbcd: jnl     4fccbddh
  0x0000000004fccbd3: mov     r13,148h
  0x0000000004fccbdd: mov     r14,qword ptr [r11+r13]
  0x0000000004fccbe1: lea     r14,[r14+1h]
  0x0000000004fccbe5: mov     qword ptr [r11+r13],r14
  0x0000000004fccbe9: jnl     4fccc90h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000004fccbef: mov     r11,rax
  0x0000000004fccbf2: inc     r11d
  0x0000000004fccbf5: inc     r9d
  0x0000000004fccbf8: movsxd  r13,eax
  0x0000000004fccbfb: cmp     eax,dword ptr [rsi+0ch]
  0x0000000004fccbfe: jnb     4fcd3b8h
  0x0000000004fccc04: mov     byte ptr [rsi+r13+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000004fccc09: mov     rax,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccc13: mov     ecx,dword ptr [rax+0e0h]
  0x0000000004fccc19: add     ecx,8h
  0x0000000004fccc1c: mov     dword ptr [rax+0e0h],ecx
  0x0000000004fccc22: mov     rax,1e404070h     ;   {metadata({method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccc2c: and     ecx,0fff8h
  0x0000000004fccc32: cmp     ecx,0h
  0x0000000004fccc35: je      4fcd3c1h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=443}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x0000000004fccc3b: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fccc41: mov     rax,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccc4b: inc     dword ptr [rax+158h]
  0x0000000004fccc51: mov     rax,r11           ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x0000000004fccc54: cmp     eax,edi
  0x0000000004fccc56: mov     rcx,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccc60: mov     r11,118h
  0x0000000004fccc6a: jnl     4fccc7ah
  0x0000000004fccc70: mov     r11,128h
  0x0000000004fccc7a: mov     r13,qword ptr [rcx+r11]
  0x0000000004fccc7e: lea     r13,[r13+1h]
  0x0000000004fccc82: mov     qword ptr [rcx+r11],r13
  0x0000000004fccc86: jl      4fccba0h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000004fccc8c: nop     dword ptr [rax+0h]
  0x0000000004fccc90: cmp     r9d,ebx
  0x0000000004fccc93: mov     rdi,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccc9d: mov     rcx,170h
  0x0000000004fccca7: jnl     4fcccb7h
  0x0000000004fcccad: mov     rcx,180h
  0x0000000004fcccb7: mov     r11,qword ptr [rdi+rcx]
  0x0000000004fcccbb: lea     r11,[r11+1h]
  0x0000000004fcccbf: mov     qword ptr [rdi+rcx],r11
  0x0000000004fcccc3: jnl     4fcd35dh          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x0000000004fcccc9: mov     rdi,r9
  0x0000000004fccccc: inc     edi
  0x0000000004fcccce: movsxd  rcx,r9d
  0x0000000004fcccd1: cmp     r9d,dword ptr [r8+0ch]  ; implicit exception: dispatches to 0x0000000004fcd3d8
  0x0000000004fcccd5: jnb     4fcd3e2h
  0x0000000004fcccdb: movzx   ecx,word ptr [r8+rcx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x0000000004fccce1: cmp     ecx,80h
  0x0000000004fccce7: mov     r9,1e52d578h      ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fcccf1: mov     r11,190h
  0x0000000004fcccfb: jnl     4fccd0bh
  0x0000000004fccd01: mov     r11,1a0h
  0x0000000004fccd0b: mov     r13,qword ptr [r9+r11]
  0x0000000004fccd0f: lea     r13,[r13+1h]
  0x0000000004fccd13: mov     qword ptr [r9+r11],r13
  0x0000000004fccd17: jnl     4fccd4ch          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x0000000004fccd1d: mov     r9,rax
  0x0000000004fccd20: inc     r9d
  0x0000000004fccd23: movsxd  r11,eax
  0x0000000004fccd26: cmp     eax,dword ptr [rsi+0ch]
  0x0000000004fccd29: jnb     4fcd3ebh
  0x0000000004fccd2f: mov     byte ptr [rsi+r11+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x0000000004fccd34: mov     rax,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccd3e: inc     dword ptr [rax+1b0h]
  0x0000000004fccd44: mov     rbx,rsi
  0x0000000004fccd47: jmp     4fcd2e7h          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x0000000004fccd4c: cmp     ecx,800h
  0x0000000004fccd52: mov     r9,1e52d578h      ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccd5c: mov     r11,1c8h
  0x0000000004fccd66: jnl     4fccd76h
  0x0000000004fccd6c: mov     r11,1d8h
  0x0000000004fccd76: mov     r13,qword ptr [r9+r11]
  0x0000000004fccd7a: lea     r13,[r13+1h]
  0x0000000004fccd7e: mov     qword ptr [r9+r11],r13
  0x0000000004fccd82: jnl     4fccde1h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x0000000004fccd88: mov     r9,rcx
  0x0000000004fccd8b: sar     r9d,6h
  0x0000000004fccd8f: or      r9d,0c0h
  0x0000000004fccd96: movsxd  r11,eax
  0x0000000004fccd99: cmp     eax,dword ptr [rsi+0ch]
  0x0000000004fccd9c: jnb     4fcd3f4h
  0x0000000004fccda2: mov     byte ptr [rsi+r11+10h],r9l
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x0000000004fccda7: inc     eax
  0x0000000004fccda9: mov     r9,rax
  0x0000000004fccdac: inc     r9d
  0x0000000004fccdaf: and     ecx,3fh
  0x0000000004fccdb2: or      ecx,80h
  0x0000000004fccdb8: movsxd  r11,eax
  0x0000000004fccdbb: cmp     eax,dword ptr [rsi+0ch]
  0x0000000004fccdbe: jnb     4fcd3fdh
  0x0000000004fccdc4: mov     byte ptr [rsi+r11+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x0000000004fccdc9: mov     rax,1e52d578h     ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccdd3: inc     dword ptr [rax+1e8h]
  0x0000000004fccdd9: mov     rbx,rsi
  0x0000000004fccddc: jmp     4fcd2e7h          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x0000000004fccde1: mov     r9,1e52d578h      ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccdeb: add     qword ptr [r9+200h],1h
  0x0000000004fccdf3: mov     r9,1e5801d8h      ;   {metadata(method data for {method} {0x000000001e338268} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fccdfd: mov     r11d,dword ptr [r9+0dch]
  0x0000000004fcce04: add     r11d,8h
  0x0000000004fcce08: mov     dword ptr [r9+0dch],r11d
  0x0000000004fcce0f: mov     r9,1e338260h      ;   {metadata({method} {0x000000001e338268} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fcce19: and     r11d,7ffff8h
  0x0000000004fcce20: cmp     r11d,0h
  0x0000000004fcce24: je      4fcd406h
  0x0000000004fcce2a: cmp     ecx,0d800h
  0x0000000004fcce30: mov     r9,1e5801d8h      ;   {metadata(method data for {method} {0x000000001e338268} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fcce3a: mov     r11,108h
  0x0000000004fcce44: jl      4fcce54h
  0x0000000004fcce4a: mov     r11,118h
  0x0000000004fcce54: mov     r13,qword ptr [r9+r11]
  0x0000000004fcce58: lea     r13,[r13+1h]
  0x0000000004fcce5c: mov     qword ptr [r9+r11],r13
  0x0000000004fcce60: jl      4fccea2h          ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000004fcce66: cmp     ecx,0e000h
  0x0000000004fcce6c: mov     r9,1e5801d8h      ;   {metadata(method data for {method} {0x000000001e338268} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fcce76: mov     r11,128h
  0x0000000004fcce80: jnl     4fcce90h
  0x0000000004fcce86: mov     r11,138h
  0x0000000004fcce90: mov     r13,qword ptr [r9+r11]
  0x0000000004fcce94: lea     r13,[r13+1h]
  0x0000000004fcce98: mov     qword ptr [r9+r11],r13
  0x0000000004fcce9c: jl      4fcceadh          ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000004fccea2: mov     r9d,0h
  0x0000000004fccea8: jmp     4fccec4h          ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000004fccead: mov     r9,1e5801d8h      ;   {metadata(method data for {method} {0x000000001e338268} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x0000000004fcceb7: inc     dword ptr [r9+148h]
  0x0000000004fccebe: mov     r9d,1h            ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000004fccec4: and     r9d,1h
  0x0000000004fccec8: cmp     r9d,0h
  0x0000000004fccecc: mov     r9,1e52d578h      ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fcced6: mov     r11,210h
  0x0000000004fccee0: je      4fccef0h
  0x0000000004fccee6: mov     r11,220h
  0x0000000004fccef0: mov     r13,qword ptr [r9+r11]
  0x0000000004fccef4: lea     r13,[r13+1h]
  0x0000000004fccef8: mov     qword ptr [r9+r11],r13
  0x0000000004fccefc: je      4fcd27bh          ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x0000000004fccf02: mov     r9d,dword ptr [rdx+30h]
  0x0000000004fccf06: shl     r9,3h             ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x0000000004fccf0a: cmp     r9,0h
  0x0000000004fccf0e: mov     r9,1e52d578h      ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccf18: mov     r11,230h
  0x0000000004fccf22: jne     4fccf32h
  0x0000000004fccf28: mov     r11,240h
  0x0000000004fccf32: mov     r13,qword ptr [r9+r11]
  0x0000000004fccf36: lea     r13,[r13+1h]
  0x0000000004fccf3a: mov     qword ptr [r9+r11],r13
  0x0000000004fccf3e: mov     dword ptr [rsp+5ch],ecx
  0x0000000004fccf42: mov     dword ptr [rsp+58h],edi
  0x0000000004fccf46: mov     dword ptr [rsp+6ch],eax
  0x0000000004fccf4a: jne     4fccfafh          ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x0000000004fccf50: jmp     4fcd42ch          ;   {no_reloc}
  0x0000000004fccf55: add     byte ptr [rax],al
  0x0000000004fccf57: add     byte ptr [rax],al
  0x0000000004fccf59: add     cl,ch
  0x0000000004fccf5b: xlat    byte ptr [rbx]
  0x0000000004fccf5c: add     al,0h
  0x0000000004fccf5e: add     byte ptr [rax+0ffffffffffffff8bh],cl
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x0000000004fccf61: ror     byte ptr [rcx+0ffffffffffffffbdh],1h
                                                ;   {metadata(method data for {method} {0x000000001e404078} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x0000000004fccf64: js      4fccf3bh
  0x0000000004fccf66: push    rdx
  0x0000000004fccf67: Fatal error: Disassembling failed with error code: 15<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000004fcca80' size='5528' address='0x0000000004fcc890' relocation_offset='288' insts_offset='496' stub_offset='3152' scopes_data_offset='3368' scopes_pcs_offset='4152' dependencies_offset='5464' nul_chk_table_offset='5472' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='261' backedge_count='10641' iicount='261' stamp='0.465'/>
<writer thread='1628'/>
Decoding compiled method 0x0000000004fcbbd0:
Code:
Argument 0 is unknown.RIP: 0x4fcbd80 Code size: 0x00000650
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x0000000004fcbd80: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcbd87: push    rbp
  0x0000000004fcbd88: sub     rsp,40h
  0x0000000004fcbd8c: mov     dword ptr [rsp+20h],r8d
  0x0000000004fcbd91: mov     dword ptr [rsp+24h],esi
  0x0000000004fcbd95: mov     rax,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbd9f: mov     ebx,dword ptr [rax+0dch]
  0x0000000004fcbda5: add     ebx,8h
  0x0000000004fcbda8: mov     dword ptr [rax+0dch],ebx
  0x0000000004fcbdae: mov     rax,1e2a5798h     ;   {metadata({method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbdb8: and     ebx,1ff8h
  0x0000000004fcbdbe: cmp     ebx,0h
  0x0000000004fcbdc1: je      4fcc25eh          ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x0000000004fcbdc7: mov     eax,dword ptr [rsp+50h]
  0x0000000004fcbdcb: cmp     eax,r9d
  0x0000000004fcbdce: mov     rbx,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbdd8: mov     r11,108h
  0x0000000004fcbde2: jl      4fcbdf2h
  0x0000000004fcbde8: mov     r11,118h
  0x0000000004fcbdf2: mov     r13,qword ptr [rbx+r11]
  0x0000000004fcbdf6: lea     r13,[r13+1h]
  0x0000000004fcbdfa: mov     qword ptr [rbx+r11],r13
  0x0000000004fcbdfe: jl      4fcbe42h          ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000004fcbe04: cmp     ecx,0h
  0x0000000004fcbe07: mov     rax,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbe11: mov     rsi,128h
  0x0000000004fcbe1b: jne     4fcbe2bh
  0x0000000004fcbe21: mov     rsi,138h
  0x0000000004fcbe2b: mov     rdi,qword ptr [rax+rsi]
  0x0000000004fcbe2f: lea     rdi,[rdi+1h]
  0x0000000004fcbe33: mov     qword ptr [rax+rsi],rdi
  0x0000000004fcbe37: jne     4fcc249h
  0x0000000004fcbe3d: jmp     4fcc234h          ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x0000000004fcbe42: cmp     eax,0h
  0x0000000004fcbe45: mov     rbx,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbe4f: mov     r11,160h
  0x0000000004fcbe59: jnl     4fcbe69h
  0x0000000004fcbe5f: mov     r11,170h
  0x0000000004fcbe69: mov     r13,qword ptr [rbx+r11]
  0x0000000004fcbe6d: lea     r13,[r13+1h]
  0x0000000004fcbe71: mov     qword ptr [rbx+r11],r13
  0x0000000004fcbe75: jnl     4fcbe80h          ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000004fcbe7b: mov     eax,0h            ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x0000000004fcbe80: cmp     ecx,0h
  0x0000000004fcbe83: mov     rbx,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbe8d: mov     r11,180h
  0x0000000004fcbe97: jne     4fcbea7h
  0x0000000004fcbe9d: mov     r11,190h
  0x0000000004fcbea7: mov     r13,qword ptr [rbx+r11]
  0x0000000004fcbeab: lea     r13,[r13+1h]
  0x0000000004fcbeaf: mov     qword ptr [rbx+r11],r13
  0x0000000004fcbeb3: je      4fcc228h          ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000004fcbeb9: movsxd  rbx,esi
  0x0000000004fcbebc: cmp     esi,dword ptr [rdi+0ch]  ; implicit exception: dispatches to 0x0000000004fcc275
  0x0000000004fcbebf: jnb     4fcc27fh
  0x0000000004fcbec5: movzx   ebx,word ptr [rdi+rbx*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000004fcbeca: mov     dword ptr [rsp+28h],ebx
  0x0000000004fcbece: sub     r9d,ecx
  0x0000000004fcbed1: add     r9d,r8d
  0x0000000004fcbed4: add     eax,r8d
  0x0000000004fcbed7: nop
  0x0000000004fcbed8: cmp     eax,r9d
  0x0000000004fcbedb: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbee5: mov     r13,1a0h
  0x0000000004fcbeef: jnle    4fcbeffh
  0x0000000004fcbef5: mov     r13,1b0h
  0x0000000004fcbeff: mov     r14,qword ptr [r11+r13]
  0x0000000004fcbf03: lea     r14,[r14+1h]
  0x0000000004fcbf07: mov     qword ptr [r11+r13],r14
  0x0000000004fcbf0b: jnle    4fcc217h          ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000004fcbf11: movsxd  r11,eax
  0x0000000004fcbf14: cmp     eax,dword ptr [rdx+0ch]  ; implicit exception: dispatches to 0x0000000004fcc288
  0x0000000004fcbf17: jnb     4fcc292h
  0x0000000004fcbf1d: movzx   r11d,word ptr [rdx+r11*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000004fcbf23: cmp     r11d,ebx
  0x0000000004fcbf26: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbf30: mov     r13,1c0h
  0x0000000004fcbf3a: je      4fcbf4ah
  0x0000000004fcbf40: mov     r13,1d0h
  0x0000000004fcbf4a: mov     r14,qword ptr [r11+r13]
  0x0000000004fcbf4e: lea     r14,[r14+1h]
  0x0000000004fcbf52: mov     qword ptr [r11+r13],r14
  0x0000000004fcbf56: je      4fcc03ch
  0x0000000004fcbf5c: jmp     4fcc001h          ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000004fcbf61: nop     dword ptr [rax+0h]
  0x0000000004fcbf68: movsxd  r11,eax
  0x0000000004fcbf6b: cmp     eax,dword ptr [rdx+0ch]
  0x0000000004fcbf6e: jnb     4fcc29bh
  0x0000000004fcbf74: movzx   r11d,word ptr [rdx+r11*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000004fcbf7a: cmp     r11d,ebx
  0x0000000004fcbf7d: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbf87: mov     r13,200h
  0x0000000004fcbf91: je      4fcbfa1h
  0x0000000004fcbf97: mov     r13,210h
  0x0000000004fcbfa1: mov     r14,qword ptr [r11+r13]
  0x0000000004fcbfa5: lea     r14,[r14+1h]
  0x0000000004fcbfa9: mov     qword ptr [r11+r13],r14
  0x0000000004fcbfad: je      4fcc03ch          ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000004fcbfb3: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbfbd: mov     r13d,dword ptr [r11+0e0h]
  0x0000000004fcbfc4: add     r13d,8h
  0x0000000004fcbfc8: mov     dword ptr [r11+0e0h],r13d
  0x0000000004fcbfcf: mov     r11,1e2a5798h     ;   {metadata({method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbfd9: and     r13d,0fff8h
  0x0000000004fcbfe0: cmp     r13d,0h
  0x0000000004fcbfe4: je      4fcc2a4h          ; OopMap{rdi=Oop rdx=Oop off=618}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000004fcbfea: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fcbff0: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcbffa: inc     dword ptr [r11+220h]  ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000004fcc001: inc     eax
  0x0000000004fcc003: cmp     eax,r9d
  0x0000000004fcc006: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc010: mov     r13,1e0h
  0x0000000004fcc01a: jnle    4fcc02ah
  0x0000000004fcc020: mov     r13,1f0h
  0x0000000004fcc02a: mov     r14,qword ptr [r11+r13]
  0x0000000004fcc02e: lea     r14,[r14+1h]
  0x0000000004fcc032: mov     qword ptr [r11+r13],r14
  0x0000000004fcc036: jle     4fcbf68h          ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000004fcc03c: cmp     eax,r9d
  0x0000000004fcc03f: mov     r11,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc049: mov     r13,238h
  0x0000000004fcc053: jnle    4fcc063h
  0x0000000004fcc059: mov     r13,248h
  0x0000000004fcc063: mov     r14,qword ptr [r11+r13]
  0x0000000004fcc067: lea     r14,[r14+1h]
  0x0000000004fcc06b: mov     qword ptr [r11+r13],r14
  0x0000000004fcc06f: jnle    4fcc1ach          ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000004fcc075: mov     r11,rax
  0x0000000004fcc078: inc     r11d
  0x0000000004fcc07b: mov     r13,r11
  0x0000000004fcc07e: add     r13d,ecx
  0x0000000004fcc081: dec     r13d
  0x0000000004fcc084: mov     r14,rsi
  0x0000000004fcc087: inc     r14d
  0x0000000004fcc08a: jmp     4fcc13ah          ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x0000000004fcc08f: nop
  0x0000000004fcc090: movsxd  rsi,r11d
  0x0000000004fcc093: cmp     r11d,dword ptr [rdx+0ch]
  0x0000000004fcc097: jnb     4fcc2bbh
  0x0000000004fcc09d: movzx   esi,word ptr [rdx+rsi*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000004fcc0a2: movsxd  rbx,r14d
  0x0000000004fcc0a5: cmp     r14d,dword ptr [rdi+0ch]
  0x0000000004fcc0a9: jnb     4fcc2c4h
  0x0000000004fcc0af: movzx   ebx,word ptr [rdi+rbx*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000004fcc0b4: cmp     esi,ebx
  0x0000000004fcc0b6: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc0c0: mov     rbx,278h
  0x0000000004fcc0ca: jne     4fcc0dah
  0x0000000004fcc0d0: mov     rbx,288h
  0x0000000004fcc0da: mov     r8,qword ptr [rsi+rbx]
  0x0000000004fcc0de: lea     r8,[r8+1h]
  0x0000000004fcc0e2: mov     qword ptr [rsi+rbx],r8
  0x0000000004fcc0e6: jne     4fcc173h          ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000004fcc0ec: inc     r11d
  0x0000000004fcc0ef: inc     r14d
  0x0000000004fcc0f2: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc0fc: mov     ebx,dword ptr [rsi+0e0h]
  0x0000000004fcc102: add     ebx,8h
  0x0000000004fcc105: mov     dword ptr [rsi+0e0h],ebx
  0x0000000004fcc10b: mov     rsi,1e2a5798h     ;   {metadata({method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc115: and     ebx,0fff8h
  0x0000000004fcc11b: cmp     ebx,0h
  0x0000000004fcc11e: je      4fcc2cdh          ; OopMap{rdi=Oop rdx=Oop off=932}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000004fcc124: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fcc12a: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc134: inc     dword ptr [rsi+298h]  ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000004fcc13a: cmp     r11d,r13d
  0x0000000004fcc13d: mov     r8,1e48e2b0h      ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc147: mov     rsi,258h
  0x0000000004fcc151: jnl     4fcc161h
  0x0000000004fcc157: mov     rsi,268h
  0x0000000004fcc161: mov     rbx,qword ptr [r8+rsi]
  0x0000000004fcc165: lea     rbx,[rbx+1h]
  0x0000000004fcc169: mov     qword ptr [r8+rsi],rbx
  0x0000000004fcc16d: jl      4fcc090h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000004fcc173: cmp     r11d,r13d
  0x0000000004fcc176: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc180: mov     rbx,2b0h
  0x0000000004fcc18a: jne     4fcc19ah
  0x0000000004fcc190: mov     rbx,2c0h
  0x0000000004fcc19a: mov     r8,qword ptr [rsi+rbx]
  0x0000000004fcc19e: lea     r8,[r8+1h]
  0x0000000004fcc1a2: mov     qword ptr [rsi+rbx],r8
  0x0000000004fcc1a6: je      4fcc203h          ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000004fcc1ac: inc     eax
  0x0000000004fcc1ae: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc1b8: mov     ebx,dword ptr [rsi+0e0h]
  0x0000000004fcc1be: add     ebx,8h
  0x0000000004fcc1c1: mov     dword ptr [rsi+0e0h],ebx
  0x0000000004fcc1c7: mov     rsi,1e2a5798h     ;   {metadata({method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc1d1: and     ebx,0fff8h
  0x0000000004fcc1d7: cmp     ebx,0h
  0x0000000004fcc1da: je      4fcc2e4h          ; OopMap{rdi=Oop rdx=Oop off=1120}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000004fcc1e0: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fcc1e6: mov     rsi,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc1f0: inc     dword ptr [rsi+2d0h]
  0x0000000004fcc1f6: mov     ebx,dword ptr [rsp+28h]
  0x0000000004fcc1fa: mov     esi,dword ptr [rsp+24h]
  0x0000000004fcc1fe: jmp     4fcbed8h          ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000004fcc203: mov     r8d,dword ptr [rsp+20h]
  0x0000000004fcc208: sub     eax,r8d
  0x0000000004fcc20b: add     rsp,40h
  0x0000000004fcc20f: pop     rbp
  0x0000000004fcc210: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcc216: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x0000000004fcc217: mov     eax,0ffffffffh
  0x0000000004fcc21c: add     rsp,40h
  0x0000000004fcc220: pop     rbp
  0x0000000004fcc221: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcc227: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x0000000004fcc228: add     rsp,40h
  0x0000000004fcc22c: pop     rbp
  0x0000000004fcc22d: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcc233: ret                       ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x0000000004fcc234: mov     rax,1e48e2b0h     ;   {metadata(method data for {method} {0x000000001e2a57a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fcc23e: inc     dword ptr [rax+148h]
  0x0000000004fcc244: jmp     4fcc24fh          ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x0000000004fcc249: mov     r9d,0ffffffffh    ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x0000000004fcc24f: mov     rax,r9
  0x0000000004fcc252: add     rsp,40h
  0x0000000004fcc256: pop     rbp
  0x0000000004fcc257: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcc25d: ret
  0x0000000004fcc25e: mov     qword ptr [rsp+8h],rax
  0x0000000004fcc263: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcc26b: call    4fc0d20h          ; OopMap{rdx=Oop rdi=Oop off=1264}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x0000000004fcc270: jmp     4fcbdc7h
  0x0000000004fcc275: call    4d88100h          ; OopMap{rdi=Oop rdx=Oop off=1274}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000004fcc27a: call    4d88100h          ; OopMap{rdi=Oop rdx=Oop off=1279}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000004fcc27f: mov     qword ptr [rsp],rsi
  0x0000000004fcc283: call    4d888c0h          ; OopMap{rdi=Oop rdx=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000004fcc288: call    4d88100h          ; OopMap{rdi=Oop rdx=Oop off=1293}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000004fcc28d: call    4d88100h          ; OopMap{rdi=Oop rdx=Oop off=1298}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000004fcc292: mov     qword ptr [rsp],rax
  0x0000000004fcc296: call    4d888c0h          ; OopMap{rdi=Oop rdx=Oop off=1307}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000004fcc29b: mov     qword ptr [rsp],rax
  0x0000000004fcc29f: call    4d888c0h          ; OopMap{rdi=Oop rdx=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000004fcc2a4: mov     qword ptr [rsp+8h],r11
  0x0000000004fcc2a9: mov     qword ptr [rsp],58h
  0x0000000004fcc2b1: call    4fc0d20h          ; OopMap{rdi=Oop rdx=Oop off=1334}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x0000000004fcc2b6: jmp     4fcbfeah
  0x0000000004fcc2bb: mov     qword ptr [rsp],r11
  0x0000000004fcc2bf: call    4d888c0h          ; OopMap{rdi=Oop rdx=Oop off=1348}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000004fcc2c4: mov     qword ptr [rsp],r14
  0x0000000004fcc2c8: call    4d888c0h          ; OopMap{rdi=Oop rdx=Oop off=1357}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000004fcc2cd: mov     qword ptr [rsp+8h],rsi
  0x0000000004fcc2d2: mov     qword ptr [rsp],8fh
  0x0000000004fcc2da: call    4fc0d20h          ; OopMap{rdi=Oop rdx=Oop off=1375}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x0000000004fcc2df: jmp     4fcc124h
  0x0000000004fcc2e4: mov     qword ptr [rsp+8h],rsi
  0x0000000004fcc2e9: mov     qword ptr [rsp],0a1h
  0x0000000004fcc2f1: call    4fc0d20h          ; OopMap{rdi=Oop rdx=Oop off=1398}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x0000000004fcc2f6: jmp     4fcc1e0h
  0x0000000004fcc2fb: nop
  0x0000000004fcc2fc: nop
  0x0000000004fcc2fd: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fcc304: mov     r10,0h
  0x0000000004fcc30e: mov     qword ptr [r15+2a8h],r10
  0x0000000004fcc315: mov     r10,0h
  0x0000000004fcc31f: mov     qword ptr [r15+2b0h],r10
  0x0000000004fcc326: add     rsp,40h
  0x0000000004fcc32a: pop     rbp
  0x0000000004fcc32b: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fcc330: hlt
  0x0000000004fcc331: hlt
  0x0000000004fcc332: hlt
  0x0000000004fcc333: hlt
  0x0000000004fcc334: hlt
  0x0000000004fcc335: hlt
  0x0000000004fcc336: hlt
  0x0000000004fcc337: hlt
  0x0000000004fcc338: hlt
  0x0000000004fcc339: hlt
  0x0000000004fcc33a: hlt
  0x0000000004fcc33b: hlt
  0x0000000004fcc33c: hlt
  0x0000000004fcc33d: hlt
  0x0000000004fcc33e: hlt
  0x0000000004fcc33f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fcc340: call    4d89060h          ;   {no_reloc}
  0x0000000004fcc345: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fcc34a: sub     rsp,80h
  0x0000000004fcc351: mov     qword ptr [rsp+78h],rax
  0x0000000004fcc356: mov     qword ptr [rsp+70h],rcx
  0x0000000004fcc35b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fcc360: mov     qword ptr [rsp+60h],rbx
  0x0000000004fcc365: mov     qword ptr [rsp+50h],rbp
  0x0000000004fcc36a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fcc36f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fcc374: mov     qword ptr [rsp+38h],r8
  0x0000000004fcc379: mov     qword ptr [rsp+30h],r9
  0x0000000004fcc37e: mov     qword ptr [rsp+28h],r10
  0x0000000004fcc383: mov     qword ptr [rsp+20h],r11
  0x0000000004fcc388: mov     qword ptr [rsp+18h],r12
  0x0000000004fcc38d: mov     qword ptr [rsp+10h],r13
  0x0000000004fcc392: mov     qword ptr [rsp+8h],r14
  0x0000000004fcc397: mov     qword ptr [rsp],r15
  0x0000000004fcc39b: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fcc3a5: mov     rdx,4fcc345h      ;   {internal_word}
  0x0000000004fcc3af: mov     r8,rsp
  0x0000000004fcc3b2: and     rsp,0fffffffffffffff0h
  0x0000000004fcc3b6: call    636c3d60h         ;   {runtime_call}
  0x0000000004fcc3bb: hlt
[Deopt Handler Code]
  0x0000000004fcc3bc: mov     r10,4fcc3bch      ;   {section_word}
  0x0000000004fcc3c6: push    r10
  0x0000000004fcc3c8: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcc3cd: hlt
  0x0000000004fcc3ce: hlt
  0x0000000004fcc3cf: hlt
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000004fcbd80' size='3232' address='0x0000000004fcbbd0' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='241' backedge_count='12661' iicount='241' stamp='0.482'/>
<writer thread='22908'/>
Decoding compiled method 0x0000000004fcb590:
Code:
Argument 0 is unknown.RIP: 0x4fcb6e0 Code size: 0x000001b8
<writer thread='15116'/>
[Loaded java.lang.Class$MethodArray from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='24564'/>
[Loaded sun.net.spi.DefaultProxySelector from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='22908'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a5140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fcb6e0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fcb6e4: shl     r10,3h
  0x0000000004fcb6e8: cmp     rax,r10
  0x0000000004fcb6eb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fcb6f1: nop
  0x0000000004fcb6f4: nop     word ptr [rax+rax+0h]
  0x0000000004fcb6fa: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fcb700: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcb707: push    rbp
  0x0000000004fcb708: sub     rsp,30h           ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x0000000004fcb70c: mov     r10,rdx
  0x0000000004fcb70f: mov     ecx,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000004fcb712: mov     ebp,dword ptr [r12+rcx*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000004fcb855
  0x0000000004fcb717: test    r9d,r9d
  0x0000000004fcb71a: jl      4fcb81dh          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000004fcb720: mov     eax,0ffffffffh
  0x0000000004fcb725: cmp     r9d,ebp
  0x0000000004fcb728: jnl     4fcb7e3h          ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000004fcb72e: cmp     r8d,10000h
  0x0000000004fcb735: jnl     4fcb839h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000004fcb73b: cmp     r9d,ebp
  0x0000000004fcb73e: jnb     4fcb803h
  0x0000000004fcb744: mov     r10d,ebp
  0x0000000004fcb747: dec     r10d
  0x0000000004fcb74a: cmp     r10d,ebp
  0x0000000004fcb74d: jnb     4fcb803h
  0x0000000004fcb753: lea     rbx,[r12+rcx*8]
  0x0000000004fcb757: mov     r11d,r9d
  0x0000000004fcb75a: inc     r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000004fcb75d: movzx   ecx,word ptr [rbx+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb763: cmp     ecx,r8d
  0x0000000004fcb766: je      4fcb7feh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb76c: inc     r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000004fcb76f: cmp     r9d,r11d
  0x0000000004fcb772: jl      4fcb75dh          ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000004fcb774: mov     r11d,ebp
  0x0000000004fcb777: add     r11d,0fffffffdh
  0x0000000004fcb77b: mov     ecx,80000000h
  0x0000000004fcb780: cmp     r10d,r11d
  0x0000000004fcb783: cmovl   r11d,ecx
  0x0000000004fcb787: cmp     r9d,r11d
  0x0000000004fcb78a: jnl     4fcb7c8h
  0x0000000004fcb78c: nop     dword ptr [rax+0h]  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000004fcb790: movzx   r10d,word ptr [rbx+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb796: cmp     r10d,r8d
  0x0000000004fcb799: je      4fcb7feh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb79b: movsxd  r10,r9d
  0x0000000004fcb79e: movzx   edi,word ptr [rbx+r10*2+12h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb7a4: cmp     edi,r8d
  0x0000000004fcb7a7: je      4fcb7efh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb7a9: movzx   edi,word ptr [rbx+r10*2+14h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb7af: cmp     edi,r8d
  0x0000000004fcb7b2: je      4fcb7f4h          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb7b4: movzx   ecx,word ptr [rbx+r10*2+16h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb7ba: cmp     ecx,r8d
  0x0000000004fcb7bd: je      4fcb7fah          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb7bf: add     r9d,4h            ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000004fcb7c3: cmp     r9d,r11d
  0x0000000004fcb7c6: jl      4fcb790h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000004fcb7c8: cmp     r9d,ebp
  0x0000000004fcb7cb: jnl     4fcb7e3h
  0x0000000004fcb7cd: nop                       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000004fcb7d0: movzx   r11d,word ptr [rbx+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000004fcb7d6: cmp     r11d,r8d
  0x0000000004fcb7d9: je      4fcb7feh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000004fcb7db: inc     r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000004fcb7de: cmp     r9d,ebp
  0x0000000004fcb7e1: jl      4fcb7d0h          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000004fcb7e3: add     rsp,30h
  0x0000000004fcb7e7: pop     rbp
  0x0000000004fcb7e8: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fcb7ee: ret
  0x0000000004fcb7ef: inc     r9d
  0x0000000004fcb7f2: jmp     4fcb7feh
  0x0000000004fcb7f4: add     r9d,2h
  0x0000000004fcb7f8: jmp     4fcb7feh
  0x0000000004fcb7fa: add     r9d,3h            ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000004fcb7fe: mov     eax,r9d
  0x0000000004fcb801: jmp     4fcb7e3h
  0x0000000004fcb803: mov     edx,0ffffff86h
  0x0000000004fcb808: mov     dword ptr [rsp],r8d
  0x0000000004fcb80c: mov     dword ptr [rsp+4h],r9d
  0x0000000004fcb811: mov     dword ptr [rsp+8h],ecx
  0x0000000004fcb815: nop
  0x0000000004fcb817: call    4d557a0h          ; OopMap{[8]=NarrowOop off=316}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x0000000004fcb81c: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000004fcb81d: mov     edx,0ffffff65h
  0x0000000004fcb822: mov     dword ptr [rsp],r8d
  0x0000000004fcb826: mov     dword ptr [rsp+8h],r9d
  0x0000000004fcb82b: mov     qword ptr [rsp+10h],r10
  0x0000000004fcb830: nop
  0x0000000004fcb833: call    4d557a0h          ; OopMap{[16]=Oop off=344}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x0000000004fcb838: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000004fcb839: mov     edx,0ffffff65h
  0x0000000004fcb83e: mov     dword ptr [rsp+4h],r9d
  0x0000000004fcb843: mov     dword ptr [rsp+8h],r8d
  0x0000000004fcb848: mov     qword ptr [rsp+10h],r10
  0x0000000004fcb84d: nop
  0x0000000004fcb84f: call    4d557a0h          ; OopMap{[16]=Oop off=372}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x0000000004fcb854: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000004fcb855: mov     edx,0fffffff6h
  0x0000000004fcb85a: nop
  0x0000000004fcb85b: call    4d557a0h          ; OopMap{off=384}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000004fcb860: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x0000000004fcb861: hlt
  0x0000000004fcb862: hlt
  0x0000000004fcb863: hlt
  0x0000000004fcb864: hlt
  0x0000000004fcb865: hlt
  0x0000000004fcb866: hlt
  0x0000000004fcb867: hlt
  0x0000000004fcb868: hlt
  0x0000000004fcb869: hlt
  0x0000000004fcb86a: hlt
  0x0000000004fcb86b: hlt
  0x0000000004fcb86c: hlt
  0x0000000004fcb86d: hlt
  0x0000000004fcb86e: hlt
  0x0000000004fcb86f: hlt
  0x0000000004fcb870: hlt
  0x0000000004fcb871: hlt
  0x0000000004fcb872: hlt
  0x0000000004fcb873: hlt
  0x0000000004fcb874: hlt
  0x0000000004fcb875: hlt
  0x0000000004fcb876: hlt
  0x0000000004fcb877: hlt
  0x0000000004fcb878: hlt
  0x0000000004fcb879: hlt
  0x0000000004fcb87a: hlt
  0x0000000004fcb87b: hlt
  0x0000000004fcb87c: hlt
  0x0000000004fcb87d: hlt
  0x0000000004fcb87e: hlt
  0x0000000004fcb87f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fcb880: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fcb885: call    4fcb88ah
  0x0000000004fcb88a: sub     qword ptr [rsp],5h
  0x0000000004fcb88f: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcb894: hlt
  0x0000000004fcb895: hlt
  0x0000000004fcb896: hlt
  0x0000000004fcb897: hlt
<nmethod compile_id='27' compiler='C2' level='4' entry='0x0000000004fcb6e0' size='1576' address='0x0000000004fcb590' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='784' scopes_pcs_offset='944' dependencies_offset='1552' nul_chk_table_offset='1560' method='java/lang/String indexOf (II)I' bytes='70' count='841' backedge_count='40478' iicount='841' stamp='0.495'/>
<writer thread='14484'/>
Decoding compiled method 0x0000000004fd3610:
Code:
Argument 0 is unknown.RIP: 0x4fd3740 Code size: 0x00000078
[Entry Point]
[Constants]
  # {method} {0x000000001e41bb60} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x0000000004fd3740: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd3744: shl     r10,3h
  0x0000000004fd3748: cmp     rax,r10
  0x0000000004fd374b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd3751: nop
  0x0000000004fd3754: nop     word ptr [rax+rax+0h]
  0x0000000004fd375a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fd3760: sub     rsp,18h
  0x0000000004fd3767: mov     qword ptr [rsp+10h],rbp  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x0000000004fd376c: cmp     r8d,5ch
  0x0000000004fd3770: je      4fd3786h          ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000004fd3772: cmp     r8d,2fh
  0x0000000004fd3776: je      4fd3786h          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000004fd3778: xor     eax,eax           ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000004fd377a: add     rsp,10h
  0x0000000004fd377e: pop     rbp
  0x0000000004fd377f: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fd3785: ret                       ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x0000000004fd3786: mov     eax,1h
  0x0000000004fd378b: jmp     4fd377ah
  0x0000000004fd378d: hlt
  0x0000000004fd378e: hlt
  0x0000000004fd378f: hlt
  0x0000000004fd3790: hlt
  0x0000000004fd3791: hlt
  0x0000000004fd3792: hlt
  0x0000000004fd3793: hlt
  0x0000000004fd3794: hlt
  0x0000000004fd3795: hlt
  0x0000000004fd3796: hlt
  0x0000000004fd3797: hlt
  0x0000000004fd3798: hlt
  0x0000000004fd3799: hlt
  0x0000000004fd379a: hlt
  0x0000000004fd379b: hlt
  0x0000000004fd379c: hlt
  0x0000000004fd379d: hlt
  0x0000000004fd379e: hlt
  0x0000000004fd379f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fd37a0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fd37a5: call    4fd37aah
  0x0000000004fd37aa: sub     qword ptr [rsp],5h
  0x0000000004fd37af: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd37b4: hlt
  0x0000000004fd37b5: hlt
  0x0000000004fd37b6: hlt
  0x0000000004fd37b7: hlt
<nmethod compile_id='32' compiler='C2' level='4' entry='0x0000000004fd3740' size='584' address='0x0000000004fd3610' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='12326' iicount='12326' stamp='0.504'/>
<writer thread='24564'/>
[Loaded sun.net.spi.DefaultProxySelector$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
Decoding compiled method 0x0000000004fcb1d0:
Code:
Argument 0 is unknown.RIP: 0x4fcb320 Code size: 0x00000190
<writer thread='15116'/>
[Loaded java.lang.Void from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fcb320: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcb327: push    rbp
  0x0000000004fcb328: sub     rsp,30h
  0x0000000004fcb32c: mov     rax,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fcb336: mov     esi,dword ptr [rax+0dch]
  0x0000000004fcb33c: add     esi,8h
  0x0000000004fcb33f: mov     dword ptr [rax+0dch],esi
  0x0000000004fcb345: mov     rax,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fcb34f: and     esi,1ff8h
  0x0000000004fcb355: cmp     esi,0h
  0x0000000004fcb358: je      4fcb3beh          ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000004fcb35e: cmp     edx,r8d
  0x0000000004fcb361: mov     rax,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fcb36b: mov     rsi,108h
  0x0000000004fcb375: jnle    4fcb385h
  0x0000000004fcb37b: mov     rsi,118h
  0x0000000004fcb385: mov     rdi,qword ptr [rax+rsi]
  0x0000000004fcb389: lea     rdi,[rdi+1h]
  0x0000000004fcb38d: mov     qword ptr [rax+rsi],rdi
  0x0000000004fcb391: jnle    4fcb3ach          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000004fcb397: mov     rax,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fcb3a1: inc     dword ptr [rax+128h]
  0x0000000004fcb3a7: jmp     4fcb3afh          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000004fcb3ac: mov     rdx,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000004fcb3af: mov     rax,rdx
  0x0000000004fcb3b2: add     rsp,30h
  0x0000000004fcb3b6: pop     rbp
  0x0000000004fcb3b7: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcb3bd: ret
  0x0000000004fcb3be: mov     qword ptr [rsp+8h],rax
  0x0000000004fcb3c3: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcb3cb: call    4fc0d20h          ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000004fcb3d0: jmp     4fcb35eh
  0x0000000004fcb3d2: nop
  0x0000000004fcb3d3: nop
  0x0000000004fcb3d4: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fcb3db: mov     r10,0h
  0x0000000004fcb3e5: mov     qword ptr [r15+2a8h],r10
  0x0000000004fcb3ec: mov     r10,0h
  0x0000000004fcb3f6: mov     qword ptr [r15+2b0h],r10
  0x0000000004fcb3fd: add     rsp,30h
  0x0000000004fcb401: pop     rbp
  0x0000000004fcb402: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fcb407: hlt
  0x0000000004fcb408: hlt
  0x0000000004fcb409: hlt
  0x0000000004fcb40a: hlt
  0x0000000004fcb40b: hlt
  0x0000000004fcb40c: hlt
  0x0000000004fcb40d: hlt
  0x0000000004fcb40e: hlt
  0x0000000004fcb40f: hlt
  0x0000000004fcb410: hlt
  0x0000000004fcb411: hlt
  0x0000000004fcb412: hlt
  0x0000000004fcb413: hlt
  0x0000000004fcb414: hlt
  0x0000000004fcb415: hlt
  0x0000000004fcb416: hlt
  0x0000000004fcb417: hlt
  0x0000000004fcb418: hlt
  0x0000000004fcb419: hlt
  0x0000000004fcb41a: hlt
  0x0000000004fcb41b: hlt
  0x0000000004fcb41c: hlt
  0x0000000004fcb41d: hlt
  0x0000000004fcb41e: hlt
  0x0000000004fcb41f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fcb420: call    4d89060h          ;   {no_reloc}
  0x0000000004fcb425: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fcb42a: sub     rsp,80h
  0x0000000004fcb431: mov     qword ptr [rsp+78h],rax
  0x0000000004fcb436: mov     qword ptr [rsp+70h],rcx
  0x0000000004fcb43b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fcb440: mov     qword ptr [rsp+60h],rbx
  0x0000000004fcb445: mov     qword ptr [rsp+50h],rbp
  0x0000000004fcb44a: mov     qword ptr [rsp+48h],rsi
  0x0000000004fcb44f: mov     qword ptr [rsp+40h],rdi
  0x0000000004fcb454: mov     qword ptr [rsp+38h],r8
  0x0000000004fcb459: mov     qword ptr [rsp+30h],r9
  0x0000000004fcb45e: mov     qword ptr [rsp+28h],r10
  0x0000000004fcb463: mov     qword ptr [rsp+20h],r11
  0x0000000004fcb468: mov     qword ptr [rsp+18h],r12
  0x0000000004fcb46d: mov     qword ptr [rsp+10h],r13
  0x0000000004fcb472: mov     qword ptr [rsp+8h],r14
  0x0000000004fcb477: mov     qword ptr [rsp],r15
  0x0000000004fcb47b: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fcb485: mov     rdx,4fcb425h      ;   {internal_word}
  0x0000000004fcb48f: mov     r8,rsp
  0x0000000004fcb492: and     rsp,0fffffffffffffff0h
  0x0000000004fcb496: call    636c3d60h         ;   {runtime_call}
  0x0000000004fcb49b: hlt
[Deopt Handler Code]
  0x0000000004fcb49c: mov     r10,4fcb49ch      ;   {section_word}
  0x0000000004fcb4a6: push    r10
  0x0000000004fcb4a8: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcb4ad: hlt
  0x0000000004fcb4ae: hlt
  0x0000000004fcb4af: hlt
<nmethod compile_id='30' compiler='C1' level='3' entry='0x0000000004fcb320' size='904' address='0x0000000004fcb1d0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='3207' iicount='3207' stamp='0.513'/>
<writer thread='12568'/>
Decoding compiled method 0x0000000004fcad90:
Code:
Argument 0 is unknown.RIP: 0x4fcaee0 Code size: 0x00000230
[Entry Point]
[Constants]
  # {method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000004fcaee0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fcaee4: shl     r10,3h
  0x0000000004fcaee8: cmp     r10,rax
  0x0000000004fcaeeb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fcaef1: nop     dword ptr [rax+rax+0h]
  0x0000000004fcaef9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fcaf00: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcaf07: push    rbp
  0x0000000004fcaf08: sub     rsp,30h
  0x0000000004fcaf0c: mov     rax,1e583c60h     ;   {metadata(method data for {method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fcaf16: mov     esi,dword ptr [rax+0dch]
  0x0000000004fcaf1c: add     esi,8h
  0x0000000004fcaf1f: mov     dword ptr [rax+0dch],esi
  0x0000000004fcaf25: mov     rax,1e405df8h     ;   {metadata({method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fcaf2f: and     esi,1ff8h
  0x0000000004fcaf35: cmp     esi,0h
  0x0000000004fcaf38: je      4fcb016h          ;*aload_0
                                                ; - java.nio.charset.CharsetEncoder::reset@0 (line 709)

  0x0000000004fcaf3e: mov     rax,rdx
  0x0000000004fcaf41: mov     rsi,1e583c60h     ;   {metadata(method data for {method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fcaf4b: mov     eax,dword ptr [rax+8h]
  0x0000000004fcaf4e: shl     rax,3h
  0x0000000004fcaf52: cmp     rax,qword ptr [rsi+110h]
  0x0000000004fcaf59: jne     4fcaf68h
  0x0000000004fcaf5b: add     qword ptr [rsi+118h],1h
  0x0000000004fcaf63: jmp     4fcafceh
  0x0000000004fcaf68: cmp     rax,qword ptr [rsi+120h]
  0x0000000004fcaf6f: jne     4fcaf7eh
  0x0000000004fcaf71: add     qword ptr [rsi+128h],1h
  0x0000000004fcaf79: jmp     4fcafceh
  0x0000000004fcaf7e: cmp     qword ptr [rsi+110h],0h
  0x0000000004fcaf89: jne     4fcafa2h
  0x0000000004fcaf8b: mov     qword ptr [rsi+110h],rax
  0x0000000004fcaf92: mov     qword ptr [rsi+118h],1h
  0x0000000004fcaf9d: jmp     4fcafceh
  0x0000000004fcafa2: cmp     qword ptr [rsi+120h],0h
  0x0000000004fcafad: jne     4fcafc6h
  0x0000000004fcafaf: mov     qword ptr [rsi+120h],rax
  0x0000000004fcafb6: mov     qword ptr [rsi+128h],1h
  0x0000000004fcafc1: jmp     4fcafceh
  0x0000000004fcafc6: add     qword ptr [rsi+108h],1h
  0x0000000004fcafce: mov     rax,1e583dd8h     ;   {metadata(method data for {method} {0x000000001e405e90} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fcafd8: mov     esi,dword ptr [rax+0dch]
  0x0000000004fcafde: add     esi,8h
  0x0000000004fcafe1: mov     dword ptr [rax+0dch],esi
  0x0000000004fcafe7: mov     rax,1e405e88h     ;   {metadata({method} {0x000000001e405e90} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fcaff1: and     esi,7ffff8h
  0x0000000004fcaff7: cmp     esi,0h
  0x0000000004fcaffa: je      4fcb02dh
  0x0000000004fcb000: mov     dword ptr [rdx+14h],0h  ;*putfield state
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)

  0x0000000004fcb007: mov     rax,rdx
  0x0000000004fcb00a: add     rsp,30h
  0x0000000004fcb00e: pop     rbp
  0x0000000004fcb00f: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcb015: ret
  0x0000000004fcb016: mov     qword ptr [rsp+8h],rax
  0x0000000004fcb01b: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcb023: call    4fc0d20h          ; OopMap{rdx=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ;   {runtime_call}
  0x0000000004fcb028: jmp     4fcaf3eh
  0x0000000004fcb02d: mov     qword ptr [rsp+8h],rax
  0x0000000004fcb032: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcb03a: call    4fc0d20h          ; OopMap{rdx=Oop off=351}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ;   {runtime_call}
  0x0000000004fcb03f: jmp     4fcb000h
  0x0000000004fcb041: nop
  0x0000000004fcb042: nop
  0x0000000004fcb043: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fcb04a: mov     r10,0h
  0x0000000004fcb054: mov     qword ptr [r15+2a8h],r10
  0x0000000004fcb05b: mov     r10,0h
  0x0000000004fcb065: mov     qword ptr [r15+2b0h],r10
  0x0000000004fcb06c: add     rsp,30h
  0x0000000004fcb070: pop     rbp
  0x0000000004fcb071: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fcb076: hlt
  0x0000000004fcb077: hlt
  0x0000000004fcb078: hlt
  0x0000000004fcb079: hlt
  0x0000000004fcb07a: hlt
  0x0000000004fcb07b: hlt
  0x0000000004fcb07c: hlt
  0x0000000004fcb07d: hlt
  0x0000000004fcb07e: hlt
  0x0000000004fcb07f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fcb080: call    4d89060h          ;   {no_reloc}
  0x0000000004fcb085: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fcb08a: sub     rsp,80h
  0x0000000004fcb091: mov     qword ptr [rsp+78h],rax
  0x0000000004fcb096: mov     qword ptr [rsp+70h],rcx
  0x0000000004fcb09b: mov     qword ptr [rsp+68h],rdx
  0x0000000004fcb0a0: mov     qword ptr [rsp+60h],rbx
  0x0000000004fcb0a5: mov     qword ptr [rsp+50h],rbp
  0x0000000004fcb0aa: mov     qword ptr [rsp+48h],rsi
  0x0000000004fcb0af: mov     qword ptr [rsp+40h],rdi
  0x0000000004fcb0b4: mov     qword ptr [rsp+38h],r8
  0x0000000004fcb0b9: mov     qword ptr [rsp+30h],r9
  0x0000000004fcb0be: mov     qword ptr [rsp+28h],r10
  0x0000000004fcb0c3: mov     qword ptr [rsp+20h],r11
  0x0000000004fcb0c8: mov     qword ptr [rsp+18h],r12
  0x0000000004fcb0cd: mov     qword ptr [rsp+10h],r13
  0x0000000004fcb0d2: mov     qword ptr [rsp+8h],r14
  0x0000000004fcb0d7: mov     qword ptr [rsp],r15
  0x0000000004fcb0db: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fcb0e5: mov     rdx,4fcb085h      ;   {internal_word}
  0x0000000004fcb0ef: mov     r8,rsp
  0x0000000004fcb0f2: and     rsp,0fffffffffffffff0h
  0x0000000004fcb0f6: call    636c3d60h         ;   {runtime_call}
  0x0000000004fcb0fb: hlt
[Deopt Handler Code]
  0x0000000004fcb0fc: mov     r10,4fcb0fch      ;   {section_word}
  0x0000000004fcb106: push    r10
  0x0000000004fcb108: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcb10d: hlt
  0x0000000004fcb10e: hlt
  0x0000000004fcb10f: hlt
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000004fcaee0' size='1056' address='0x0000000004fcad90' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='912' scopes_pcs_offset='952' dependencies_offset='1048' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='260' iicount='260' stamp='0.523'/>
<writer thread='15116'/>
<task_queued compile_id='33' compile_kind='osr' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='60416' iicount='1' osr_bci='3' level='3' stamp='0.523' comment='tiered' hot_count='60416'/>
<writer thread='24564'/>
[Loaded sun.net.NetProperties from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
Decoding compiled method 0x0000000004fca8d0:
Code:
Argument 0 is unknown.RIP: 0x4fcaa40 Code size: 0x00000210
<writer thread='24564'/>
[Loaded sun.net.NetProperties$1 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='25016'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;
  0x0000000004fcaa40: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcaa47: push    rbp
  0x0000000004fcaa48: sub     rsp,50h
  0x0000000004fcaa4c: mov     rdx,1e6a2d08h     ;   {metadata(method data for {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaa56: mov     ecx,dword ptr [rdx+0dch]
  0x0000000004fcaa5c: add     ecx,8h
  0x0000000004fcaa5f: mov     dword ptr [rdx+0dch],ecx
  0x0000000004fcaa65: mov     rdx,1e6a2b30h     ;   {metadata({method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaa6f: and     ecx,1ff8h
  0x0000000004fcaa75: cmp     ecx,0h
  0x0000000004fcaa78: je      4fcab4fh          ;*ldc  ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@0 (line 20)

  0x0000000004fcaa7e: mov     esi,5f5e100h
  0x0000000004fcaa83: jmp     4fcaae5h          ;*iload_0
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@3 (line 21)

  0x0000000004fcaa88: mov     rsi,76b2894a8h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaa92: mov     dword ptr [rsi+68h],edi
  0x0000000004fcaa95: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fcaa9a: mov     rsi,1e6a2d08h     ;   {metadata(method data for {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaaa4: mov     ebx,dword ptr [rsi+0e0h]
  0x0000000004fcaaaa: add     ebx,8h
  0x0000000004fcaaad: mov     dword ptr [rsi+0e0h],ebx
  0x0000000004fcaab3: mov     rsi,1e6a2b30h     ;   {metadata({method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaabd: and     ebx,0fff8h
  0x0000000004fcaac3: cmp     ebx,0h
  0x0000000004fcaac6: je      4fcab66h          ; OopMap{off=140}
                                                ;*goto
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@14 (line 22)

  0x0000000004fcaacc: test    dword ptr [4850100h],eax
                                                ;   {poll}
  0x0000000004fcaad2: mov     rsi,1e6a2d08h     ;   {metadata(method data for {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaadc: inc     dword ptr [rsi+128h]
  0x0000000004fcaae2: mov     rsi,rdi           ;*goto
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@14 (line 22)

  0x0000000004fcaae5: mov     rdi,rsi
  0x0000000004fcaae8: dec     edi
  0x0000000004fcaaea: cmp     esi,0h
  0x0000000004fcaaed: mov     rsi,1e6a2d08h     ;   {metadata(method data for {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fcaaf7: mov     rbx,108h
  0x0000000004fcab01: jle     4fcab11h
  0x0000000004fcab07: mov     rbx,118h
  0x0000000004fcab11: mov     rax,qword ptr [rsi+rbx]
  0x0000000004fcab15: lea     rax,[rax+1h]
  0x0000000004fcab19: mov     qword ptr [rsi+rbx],rax
  0x0000000004fcab1d: jnle    4fcaa88h          ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fcab23: add     rsp,50h
  0x0000000004fcab27: pop     rbp
  0x0000000004fcab28: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcab2e: ret                       ;*return
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@17 (line 24)

  0x0000000004fcab2f: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcab36: push    rbp
  0x0000000004fcab37: sub     rsp,50h
  0x0000000004fcab3b: mov     esi,dword ptr [rdx]
  0x0000000004fcab3d: mov     rcx,rdx
  0x0000000004fcab40: mov     dword ptr [rsp+40h],esi
  0x0000000004fcab44: call    635fc610h         ;   {runtime_call}
  0x0000000004fcab49: mov     esi,dword ptr [rsp+40h]
  0x0000000004fcab4d: jmp     4fcaae5h
  0x0000000004fcab4f: mov     qword ptr [rsp+8h],rdx
  0x0000000004fcab54: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcab5c: call    4fc0d20h          ; OopMap{off=289}
                                                ;*synchronization entry
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@-1 (line 20)
                                                ;   {runtime_call}
  0x0000000004fcab61: jmp     4fcaa7eh
  0x0000000004fcab66: mov     qword ptr [rsp+8h],rsi
  0x0000000004fcab6b: mov     qword ptr [rsp],0eh
  0x0000000004fcab73: call    4fc0d20h          ; OopMap{off=312}
                                                ;*goto
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@14 (line 22)
                                                ;   {runtime_call}
  0x0000000004fcab78: jmp     4fcaacch
  0x0000000004fcab7d: nop
  0x0000000004fcab7e: nop
  0x0000000004fcab7f: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fcab86: mov     r10,0h
  0x0000000004fcab90: mov     qword ptr [r15+2a8h],r10
  0x0000000004fcab97: mov     r10,0h
  0x0000000004fcaba1: mov     qword ptr [r15+2b0h],r10
  0x0000000004fcaba8: add     rsp,50h
  0x0000000004fcabac: pop     rbp
  0x0000000004fcabad: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fcabb2: hlt
  0x0000000004fcabb3: hlt
  0x0000000004fcabb4: hlt
  0x0000000004fcabb5: hlt
  0x0000000004fcabb6: hlt
  0x0000000004fcabb7: hlt
  0x0000000004fcabb8: hlt
  0x0000000004fcabb9: hlt
  0x0000000004fcabba: hlt
  0x0000000004fcabbb: hlt
  0x0000000004fcabbc: hlt
  0x0000000004fcabbd: hlt
  0x0000000004fcabbe: hlt
  0x0000000004fcabbf: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fcabc0: call    4d89060h          ;   {no_reloc}
  0x0000000004fcabc5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fcabca: sub     rsp,80h
  0x0000000004fcabd1: mov     qword ptr [rsp+78h],rax
  0x0000000004fcabd6: mov     qword ptr [rsp+70h],rcx
  0x0000000004fcabdb: mov     qword ptr [rsp+68h],rdx
  0x0000000004fcabe0: mov     qword ptr [rsp+60h],rbx
  0x0000000004fcabe5: mov     qword ptr [rsp+50h],rbp
  0x0000000004fcabea: mov     qword ptr [rsp+48h],rsi
  0x0000000004fcabef: mov     qword ptr [rsp+40h],rdi
  0x0000000004fcabf4: mov     qword ptr [rsp+38h],r8
  0x0000000004fcabf9: mov     qword ptr [rsp+30h],r9
  0x0000000004fcabfe: mov     qword ptr [rsp+28h],r10
  0x0000000004fcac03: mov     qword ptr [rsp+20h],r11
  0x0000000004fcac08: mov     qword ptr [rsp+18h],r12
  0x0000000004fcac0d: mov     qword ptr [rsp+10h],r13
  0x0000000004fcac12: mov     qword ptr [rsp+8h],r14
  0x0000000004fcac17: mov     qword ptr [rsp],r15
  0x0000000004fcac1b: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fcac25: mov     rdx,4fcabc5h      ;   {internal_word}
  0x0000000004fcac2f: mov     r8,rsp
  0x0000000004fcac32: and     rsp,0fffffffffffffff0h
  0x0000000004fcac36: call    636c3d60h         ;   {runtime_call}
  0x0000000004fcac3b: hlt
[Deopt Handler Code]
  0x0000000004fcac3c: mov     r10,4fcac3ch      ;   {section_word}
  0x0000000004fcac46: push    r10
  0x0000000004fcac48: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcac4d: hlt
  0x0000000004fcac4e: hlt
  0x0000000004fcac4f: hlt
<nmethod compile_id='33' compile_kind='osr' compiler='C1' level='3' entry='0x0000000004fcaa40' size='1152' address='0x0000000004fca8d0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='912' scopes_pcs_offset='968' dependencies_offset='1144' oops_offset='896' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='894187' iicount='1' stamp='0.535'/>
<writer thread='15116'/>
<task_queued compile_id='34' compile_kind='osr' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='901355' iicount='1' osr_bci='3' stamp='0.535' comment='tiered' hot_count='901355'/>
<writer thread='11292'/>
Decoding compiled method 0x0000000004fd0dd0:
Code:
Argument 0 is unknown.RIP: 0x4fd0f20 Code size: 0x00000568
[Entry Point]
[Constants]
  # {method} {0x000000001e3100c0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x0000000004fd0f20: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd0f24: shl     r10,3h
  0x0000000004fd0f28: cmp     rax,r10
  0x0000000004fd0f2b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd0f31: nop
  0x0000000004fd0f34: nop     word ptr [rax+rax+0h]
  0x0000000004fd0f3a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fd0f40: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd0f47: push    rbp
  0x0000000004fd0f48: sub     rsp,60h
  0x0000000004fd0f4c: mov     dword ptr [rsp+30h],r8d
  0x0000000004fd0f51: mov     rbp,rdx
  0x0000000004fd0f54: mov     rax,qword ptr [rdx]
  0x0000000004fd0f57: mov     r10,rax
  0x0000000004fd0f5a: and     r10,7h
  0x0000000004fd0f5e: cmp     r10,5h
  0x0000000004fd0f62: jne     4fd1212h
  0x0000000004fd0f68: mov     r10d,0f8001ac1h   ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000004fd0f6e: shl     r10,3h
  0x0000000004fd0f72: mov     r10,qword ptr [r10+0a8h]
  0x0000000004fd0f79: mov     r11,r10
  0x0000000004fd0f7c: or      r11,r15
  0x0000000004fd0f7f: mov     r8,r11
  0x0000000004fd0f82: xor     r8,rax
  0x0000000004fd0f85: test    r8,0ffffffffffffff87h
  0x0000000004fd0f8c: jne     4fd1275h          ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000004fd0f92: mov     edi,dword ptr [rbp+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0f95: mov     dword ptr [rbp+14h],r12d
                                                ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000004fd0f99: mov     r9d,dword ptr [r12+rdi*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000004fd1384
  0x0000000004fd0f9e: mov     r11d,dword ptr [rbp+0ch]
                                                ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0fa2: mov     ebx,r11d
  0x0000000004fd0fa5: sub     ebx,r9d
  0x0000000004fd0fa8: mov     rcx,rdi
  0x0000000004fd0fab: shl     rcx,3h            ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0faf: inc     ebx
  0x0000000004fd0fb1: mov     r8d,r11d
  0x0000000004fd0fb4: inc     r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0fb7: test    ebx,ebx
  0x0000000004fd0fb9: jnle    4fd1003h          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0fbb: mov     dword ptr [rbp+0ch],r8d  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd0fbf: test    rcx,rcx
  0x0000000004fd0fc2: je      4fd11e4h
  0x0000000004fd0fc8: mov     r8d,dword ptr [rcx+0ch]
  0x0000000004fd0fcc: cmp     r11d,r8d
  0x0000000004fd0fcf: jnb     4fd11f5h
  0x0000000004fd0fd5: mov     r8d,dword ptr [rsp+30h]
  0x0000000004fd0fda: mov     word ptr [rcx+r11*2+10h],r8w
  0x0000000004fd0fe0: mov     r10d,7h
  0x0000000004fd0fe6: and     r10,qword ptr [rbp+0h]
  0x0000000004fd0fea: cmp     r10,5h
  0x0000000004fd0fee: jne     4fd12a0h          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000004fd0ff4: mov     rax,rbp
  0x0000000004fd0ff7: add     rsp,60h
  0x0000000004fd0ffb: pop     rbp
  0x0000000004fd0ffc: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fd1002: ret
  0x0000000004fd1003: mov     r10d,r9d
  0x0000000004fd1006: shl     r10d,1h           ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1009: mov     ebx,r10d
  0x0000000004fd100c: sub     ebx,r11d
  0x0000000004fd100f: inc     ebx
  0x0000000004fd1011: test    ebx,ebx
  0x0000000004fd1013: jnl     4fd114ch          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1019: mov     r10d,r8d          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd101c: test    r10d,r10d
  0x0000000004fd101f: jle     4fd102dh          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1021: mov     ebx,7ffffff7h
  0x0000000004fd1026: sub     ebx,r10d
  0x0000000004fd1029: test    ebx,ebx
  0x0000000004fd102b: jnl     4fd1055h          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd102d: mov     dword ptr [rsp+2ch],r9d
  0x0000000004fd1032: mov     dword ptr [rsp+28h],edi
  0x0000000004fd1036: mov     qword ptr [rsp+20h],rcx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd103b: mov     rdx,rbp
  0x0000000004fd103e: nop
  0x0000000004fd103f: call    4d561a0h          ; OopMap{rbp=Oop [32]=Oop [40]=NarrowOop off=292}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000004fd1044: mov     rcx,qword ptr [rsp+20h]
  0x0000000004fd1049: mov     r10d,eax
  0x0000000004fd104c: mov     edi,dword ptr [rsp+28h]
  0x0000000004fd1050: mov     r9d,dword ptr [rsp+2ch]  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1055: cmp     r10d,80000h
  0x0000000004fd105c: jnbe    4fd1348h
  0x0000000004fd1062: movsxd  r11,r10d
  0x0000000004fd1065: shl     r11,1h
  0x0000000004fd1068: add     r11,17h
  0x0000000004fd106c: mov     r8,r11
  0x0000000004fd106f: and     r8,0fffffffffffffff8h
  0x0000000004fd1073: cmp     r10d,80000h
  0x0000000004fd107a: jnbe    4fd1194h
  0x0000000004fd1080: mov     rbx,qword ptr [r15+60h]
  0x0000000004fd1084: mov     rdx,rbx
  0x0000000004fd1087: add     rdx,r8
  0x0000000004fd108a: cmp     rdx,qword ptr [r15+70h]
  0x0000000004fd108e: jnb     4fd1194h
  0x0000000004fd1094: mov     qword ptr [r15+60h],rdx
  0x0000000004fd1098: prefetchnta byte ptr [rdx+100h]
  0x0000000004fd109f: mov     qword ptr [rbx],1h
  0x0000000004fd10a6: prefetchnta byte ptr [rdx+140h]
  0x0000000004fd10ad: mov     dword ptr [rbx+8h],0f8000041h
                                                ;   {metadata({type array char})}
  0x0000000004fd10b4: mov     dword ptr [rbx+0ch],r10d
  0x0000000004fd10b8: prefetchnta byte ptr [rdx+180h]  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd10bf: cmp     r9d,r10d
  0x0000000004fd10c2: mov     esi,r10d
  0x0000000004fd10c5: cmovl   esi,r9d           ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd10c9: mov     r13,rbx
  0x0000000004fd10cc: add     r13,10h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd10d0: lea     rdx,[r12+rdi*8]   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd10d4: shr     r11,3h
  0x0000000004fd10d8: mov     rcx,r11
  0x0000000004fd10db: add     rcx,0fffffffffffffffeh
  0x0000000004fd10df: cmp     r9d,esi
  0x0000000004fd10e2: jb      4fd1350h
  0x0000000004fd10e8: cmp     r10d,esi
  0x0000000004fd10eb: jb      4fd1350h
  0x0000000004fd10f1: test    esi,esi
  0x0000000004fd10f3: jle     4fd1376h
  0x0000000004fd10f9: lea     r9,[r12+rdi*8+10h]
  0x0000000004fd10fe: cmp     esi,r10d
  0x0000000004fd1101: jl      4fd1155h
  0x0000000004fd1103: add     r8,0fffffffffffffff0h
  0x0000000004fd1107: shr     r8,3h
  0x0000000004fd110b: mov     rcx,r9
  0x0000000004fd110e: mov     rdx,r13
  0x0000000004fd1111: mov     r10,4d62860h
  0x0000000004fd111b: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd111e: mov     r11d,dword ptr [rbp+0ch]
                                                ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1122: mov     r8,rbx
  0x0000000004fd1125: shr     r8,3h
  0x0000000004fd1129: mov     dword ptr [rbp+10h],r8d  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd112d: mov     r8d,r11d
  0x0000000004fd1130: inc     r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1133: mov     r10,rbp
  0x0000000004fd1136: shr     r10,9h
  0x0000000004fd113a: mov     r9d,10ac8000h
  0x0000000004fd1140: mov     byte ptr [r9+r10],r12l  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1144: mov     rcx,rbx
  0x0000000004fd1147: jmp     4fd0fbbh
  0x0000000004fd114c: add     r10d,2h           ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1150: jmp     4fd101ch
  0x0000000004fd1155: movsxd  r8,esi
  0x0000000004fd1158: mov     r10,r8
  0x0000000004fd115b: shl     r10,1h
  0x0000000004fd115e: add     r10,10h
  0x0000000004fd1162: mov     rcx,r10
  0x0000000004fd1165: and     rcx,0fffffffffffffff9h
  0x0000000004fd1169: mov     rdi,rbx
  0x0000000004fd116c: add     rdi,rcx
  0x0000000004fd116f: shr     r10,3h
  0x0000000004fd1173: sub     r11,r10
  0x0000000004fd1176: mov     rcx,r11
  0x0000000004fd1179: xor     rax,rax
  0x0000000004fd117c: rep stos qword ptr [rdi]
  0x0000000004fd117f: mov     rcx,r9
  0x0000000004fd1182: mov     rdx,r13
  0x0000000004fd1185: mov     r10,4d62580h
  0x0000000004fd118f: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1192: jmp     4fd111eh
  0x0000000004fd1194: mov     dword ptr [rsp+34h],r9d
  0x0000000004fd1199: mov     dword ptr [rsp+2ch],edi
  0x0000000004fd119d: mov     qword ptr [rsp+40h],r8
  0x0000000004fd11a2: mov     qword ptr [rsp+38h],r11
  0x0000000004fd11a7: mov     dword ptr [rsp+28h],r10d
  0x0000000004fd11ac: mov     qword ptr [rsp+20h],rcx  ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd11b1: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fd11bb: mov     r8d,r10d
  0x0000000004fd11be: nop
  0x0000000004fd11bf: call    4d7f4a0h          ; OopMap{rbp=Oop [32]=Oop [44]=NarrowOop off=676}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000004fd11c4: mov     r10d,dword ptr [rsp+28h]
  0x0000000004fd11c9: mov     r11,qword ptr [rsp+38h]
  0x0000000004fd11ce: mov     r8,qword ptr [rsp+40h]
  0x0000000004fd11d3: mov     edi,dword ptr [rsp+2ch]
  0x0000000004fd11d7: mov     r9d,dword ptr [rsp+34h]
  0x0000000004fd11dc: mov     rbx,rax
  0x0000000004fd11df: jmp     4fd10bfh
  0x0000000004fd11e4: mov     edx,0fffffff6h
  0x0000000004fd11e9: mov     dword ptr [rsp+24h],r11d
  0x0000000004fd11ee: nop
  0x0000000004fd11ef: call    4d557a0h          ; OopMap{rbp=Oop off=724}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000004fd11f4: int3
  0x0000000004fd11f5: mov     edx,0ffffffe4h
  0x0000000004fd11fa: mov     qword ptr [rsp+38h],rcx
  0x0000000004fd11ff: mov     dword ptr [rsp+34h],r11d
  0x0000000004fd1204: nop
  0x0000000004fd1207: call    4d557a0h          ; OopMap{rbp=Oop [56]=Oop off=748}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000004fd120c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd120d: lock cmpxchg qword ptr [rdx],r10
  0x0000000004fd1212: lea     rbx,[rsp+50h]
  0x0000000004fd1217: mov     rax,qword ptr [rdx]
  0x0000000004fd121a: test    rax,2h
  0x0000000004fd1220: jne     4fd1246h
  0x0000000004fd1222: or      rax,1h
  0x0000000004fd1226: mov     qword ptr [rbx],rax
  0x0000000004fd1229: lock cmpxchg qword ptr [rdx],rbx
  0x0000000004fd122e: je      4fd125fh
  0x0000000004fd1234: sub     rax,rsp
  0x0000000004fd1237: and     rax,0fffffffffffff007h
  0x0000000004fd123e: mov     qword ptr [rbx],rax
  0x0000000004fd1241: jmp     4fd125fh
  0x0000000004fd1246: mov     qword ptr [rbx],3h
  0x0000000004fd124d: mov     rbx,rax
  0x0000000004fd1250: mov     rax,qword ptr [rbx+16h]
  0x0000000004fd1254: test    rax,rax
  0x0000000004fd1257: jne     4fd125fh
  0x0000000004fd1259: lock cmpxchg qword ptr [rbx+16h],r15
  0x0000000004fd125f: je      4fd0f92h
  0x0000000004fd1265: lea     r8,[rsp+50h]
  0x0000000004fd126a: nop
  0x0000000004fd126b: call    4fc1220h          ; OopMap{rbp=Oop off=848}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000004fd1270: jmp     4fd0f92h
  0x0000000004fd1275: test    r8,7h
  0x0000000004fd127c: jne     4fd120dh
  0x0000000004fd127e: test    r8,300h
  0x0000000004fd1285: jne     4fd1294h
  0x0000000004fd1287: and     rax,37fh
  0x0000000004fd128e: mov     r11,rax
  0x0000000004fd1291: or      r11,r15
  0x0000000004fd1294: lock cmpxchg qword ptr [rdx],r11
  0x0000000004fd1299: jne     4fd1265h
  0x0000000004fd129b: jmp     4fd0f92h
  0x0000000004fd12a0: lea     rax,[rsp+50h]
  0x0000000004fd12a5: cmp     qword ptr [rax],0h
  0x0000000004fd12ac: je      4fd1328h
  0x0000000004fd12b2: mov     r10,qword ptr [rbp+0h]
  0x0000000004fd12b6: test    r10,2h
  0x0000000004fd12bd: je      4fd131fh
  0x0000000004fd12bf: mov     rax,qword ptr [r10+16h]
  0x0000000004fd12c3: xor     rax,r15
  0x0000000004fd12c6: or      rax,qword ptr [r10+26h]
  0x0000000004fd12ca: jne     4fd1328h
  0x0000000004fd12cc: mov     rax,qword ptr [r10+36h]
  0x0000000004fd12d0: or      rax,qword ptr [r10+3eh]
  0x0000000004fd12d4: jne     4fd12e0h
  0x0000000004fd12d6: mov     qword ptr [r10+16h],0h
  0x0000000004fd12de: jmp     4fd1328h
  0x0000000004fd12e0: cmp     qword ptr [r10+46h],0h
  0x0000000004fd12e8: je      4fd1313h
  0x0000000004fd12ea: mov     qword ptr [r10+16h],0h
  0x0000000004fd12f2: lock add dword ptr [rsp],0h
  0x0000000004fd12f7: cmp     qword ptr [r10+46h],0h
  0x0000000004fd12ff: jne     4fd1318h
  0x0000000004fd1301: mov     rax,0h
  0x0000000004fd130b: lock cmpxchg qword ptr [r10+16h],r15
  0x0000000004fd1311: jne     4fd1318h
  0x0000000004fd1313: or      eax,1h
  0x0000000004fd1316: jmp     4fd1328h
  0x0000000004fd1318: test    eax,0h
  0x0000000004fd131d: jmp     4fd1328h
  0x0000000004fd131f: mov     r10,qword ptr [rax]
  0x0000000004fd1322: lock cmpxchg qword ptr [rbp+0h],r10
  0x0000000004fd1328: je      4fd0ff4h
  0x0000000004fd132e: mov     rcx,rbp
  0x0000000004fd1331: lea     rdx,[rsp+50h]     ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000004fd1336: mov     r10,635fcd50h
  0x0000000004fd1340: call indirect r10         ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000004fd1343: jmp     4fd0ff4h
  0x0000000004fd1348: movsxd  r11,r10d          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd134b: jmp     4fd1065h
  0x0000000004fd1350: mov     rdi,r13
  0x0000000004fd1353: xor     rax,rax
  0x0000000004fd1356: rep stos qword ptr [rdi]
  0x0000000004fd1359: xor     r8d,r8d
  0x0000000004fd135c: mov     r9,rbx
  0x0000000004fd135f: xor     edi,edi
  0x0000000004fd1361: mov     qword ptr [rsp+48h],rbx
  0x0000000004fd1366: nop
  0x0000000004fd1367: call    4fc88e0h          ; OopMap{rbp=Oop [72]=Oop off=1100}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000004fd136c: mov     rbx,qword ptr [rsp+48h]
  0x0000000004fd1371: jmp     4fd111eh
  0x0000000004fd1376: mov     rdi,r13
  0x0000000004fd1379: xor     rax,rax
  0x0000000004fd137c: rep stos qword ptr [rdi]  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd137f: jmp     4fd111eh
  0x0000000004fd1384: mov     edx,0fffffff6h
  0x0000000004fd1389: nop
  0x0000000004fd138b: call    4d557a0h          ; OopMap{rbp=Oop off=1136}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000004fd1390: int3
  0x0000000004fd1391: jmp     4fd1393h          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1393: mov     rbx,rax
  0x0000000004fd1396: jmp     4fd139bh          ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd1398: mov     rbx,rax           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000004fd139b: mov     r10d,7h
  0x0000000004fd13a1: and     r10,qword ptr [rbp+0h]
  0x0000000004fd13a5: cmp     r10,5h
  0x0000000004fd13a9: jne     4fd13b8h
  0x0000000004fd13ab: mov     rdx,rbx
  0x0000000004fd13ae: add     rsp,60h
  0x0000000004fd13b2: pop     rbp
  0x0000000004fd13b3: jmp     4fc40a0h          ;   {runtime_call}
  0x0000000004fd13b8: lea     rax,[rsp+50h]
  0x0000000004fd13bd: cmp     qword ptr [rax],0h
  0x0000000004fd13c4: je      4fd1440h
  0x0000000004fd13ca: mov     r10,qword ptr [rbp+0h]
  0x0000000004fd13ce: test    r10,2h
  0x0000000004fd13d5: je      4fd1437h
  0x0000000004fd13d7: mov     rax,qword ptr [r10+16h]
  0x0000000004fd13db: xor     rax,r15
  0x0000000004fd13de: or      rax,qword ptr [r10+26h]
  0x0000000004fd13e2: jne     4fd1440h
  0x0000000004fd13e4: mov     rax,qword ptr [r10+36h]
  0x0000000004fd13e8: or      rax,qword ptr [r10+3eh]
  0x0000000004fd13ec: jne     4fd13f8h
  0x0000000004fd13ee: mov     qword ptr [r10+16h],0h
  0x0000000004fd13f6: jmp     4fd1440h
  0x0000000004fd13f8: cmp     qword ptr [r10+46h],0h
  0x0000000004fd1400: je      4fd142bh
  0x0000000004fd1402: mov     qword ptr [r10+16h],0h
  0x0000000004fd140a: lock add dword ptr [rsp],0h
  0x0000000004fd140f: cmp     qword ptr [r10+46h],0h
  0x0000000004fd1417: jne     4fd1430h
  0x0000000004fd1419: mov     rax,0h
  0x0000000004fd1423: lock cmpxchg qword ptr [r10+16h],r15
  0x0000000004fd1429: jne     4fd1430h
  0x0000000004fd142b: or      eax,1h
  0x0000000004fd142e: jmp     4fd1440h
  0x0000000004fd1430: test    eax,0h
  0x0000000004fd1435: jmp     4fd1440h
  0x0000000004fd1437: mov     r10,qword ptr [rax]
  0x0000000004fd143a: lock cmpxchg qword ptr [rbp+0h],r10
  0x0000000004fd1440: je      4fd13abh
  0x0000000004fd1446: mov     rcx,rbp
  0x0000000004fd1449: lea     rdx,[rsp+50h]     ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000004fd144e: mov     r10,635fcd50h
  0x0000000004fd1458: call indirect r10
  0x0000000004fd145b: jmp     4fd13abh
[Stub Code]
  0x0000000004fd1460: mov     rbx,0h            ;   {no_reloc}
  0x0000000004fd146a: jmp     4fd146ah          ;   {runtime_call}
[Exception Handler]
  0x0000000004fd146f: jmp     4d7fe20h          ;   {runtime_call}
[Deopt Handler Code]
  0x0000000004fd1474: call    4fd1479h
  0x0000000004fd1479: sub     qword ptr [rsp],5h
  0x0000000004fd147e: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd1483: hlt
  0x0000000004fd1484: hlt
  0x0000000004fd1485: hlt
  0x0000000004fd1486: hlt
  0x0000000004fd1487: hlt
<nmethod compile_id='29' compiler='C2' level='4' entry='0x0000000004fd0f20' size='2976' address='0x0000000004fd0dd0' relocation_offset='288' insts_offset='336' stub_offset='1680' scopes_data_offset='1776' scopes_pcs_offset='2128' dependencies_offset='2880' handler_table_offset='2888' nul_chk_table_offset='2960' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='11113' iicount='11113' stamp='0.554'/>
<writer thread='24564'/>
<task_queued compile_id='35' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1024' iicount='1024' level='3' stamp='0.554' comment='tiered' hot_count='1024'/>
<writer thread='18044'/>
Decoding compiled method 0x0000000004fd1990:
Code:
Argument 0 is unknown.RIP: 0x4fd1ac0 Code size: 0x00000118
<writer thread='24564'/>
[Loaded java.net.URI from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='18044'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;
  0x0000000004fd1ac0: int3
  0x0000000004fd1ac1: nop     dword ptr [rax+rax+0h]
  0x0000000004fd1ac9: nop     dword ptr [rax+0h]
  0x0000000004fd1ad0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd1ad7: push    rbp
  0x0000000004fd1ad8: sub     rsp,40h
  0x0000000004fd1adc: mov     ebp,dword ptr [rdx]
  0x0000000004fd1ade: mov     rcx,rdx
  0x0000000004fd1ae1: mov     r10,635fc610h
  0x0000000004fd1aeb: call indirect r10         ;*iload_0
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@3 (line 21)

  0x0000000004fd1aee: mov     r11d,ebp
  0x0000000004fd1af1: dec     r11d
  0x0000000004fd1af4: test    ebp,ebp
  0x0000000004fd1af6: jle     4fd1b91h          ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fd1afc: mov     r10,76b2894a8h    ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)
                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fd1b06: dec     ebp               ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fd1b08: mov     dword ptr [r10+68h],ebp
  0x0000000004fd1b0c: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fd1b11: cmp     ebp,r11d
  0x0000000004fd1b14: jnle    4fd1b06h          ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fd1b16: cmp     ebp,7h
  0x0000000004fd1b19: jle     4fd1b77h
  0x0000000004fd1b1b: nop     dword ptr [rax+rax+0h]
  0x0000000004fd1b20: mov     r11d,ebp
  0x0000000004fd1b23: dec     r11d
  0x0000000004fd1b26: mov     dword ptr [r10+68h],r11d
  0x0000000004fd1b2a: mov     r11d,ebp
  0x0000000004fd1b2d: add     r11d,0fffffff9h
  0x0000000004fd1b31: mov     r8d,ebp
  0x0000000004fd1b34: add     r8d,0fffffffah
  0x0000000004fd1b38: mov     r9d,ebp
  0x0000000004fd1b3b: add     r9d,0fffffffbh
  0x0000000004fd1b3f: mov     ecx,ebp
  0x0000000004fd1b41: add     ecx,0fffffffch
  0x0000000004fd1b44: mov     ebx,ebp
  0x0000000004fd1b46: add     ebx,0fffffffdh
  0x0000000004fd1b49: mov     edi,ebp
  0x0000000004fd1b4b: add     edi,0fffffffeh
  0x0000000004fd1b4e: mov     dword ptr [r10+68h],edi
  0x0000000004fd1b52: mov     dword ptr [r10+68h],ebx
  0x0000000004fd1b56: mov     dword ptr [r10+68h],ecx
  0x0000000004fd1b5a: mov     dword ptr [r10+68h],r9d
  0x0000000004fd1b5e: mov     dword ptr [r10+68h],r8d
  0x0000000004fd1b62: mov     dword ptr [r10+68h],r11d
                                                ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fd1b66: add     ebp,0fffffff8h    ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fd1b69: mov     dword ptr [r10+68h],ebp
  0x0000000004fd1b6d: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fd1b72: cmp     ebp,7h
  0x0000000004fd1b75: jnle    4fd1b20h          ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fd1b77: test    ebp,ebp
  0x0000000004fd1b79: jle     4fd1b8bh
  0x0000000004fd1b7b: nop                       ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fd1b7c: dec     ebp               ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fd1b7e: mov     dword ptr [r10+68h],ebp
  0x0000000004fd1b82: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fd1b87: test    ebp,ebp
  0x0000000004fd1b89: jnle    4fd1b7ch
  0x0000000004fd1b8b: mov     r11d,ebp
  0x0000000004fd1b8e: dec     r11d              ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fd1b91: mov     edx,0ffffff65h
  0x0000000004fd1b96: mov     dword ptr [rsp+20h],r11d
  0x0000000004fd1b9b: call    4d557a0h          ; OopMap{off=224}
                                                ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)
                                                ;   {runtime_call}
  0x0000000004fd1ba0: int3                      ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fd1ba1: hlt
  0x0000000004fd1ba2: hlt
  0x0000000004fd1ba3: hlt
  0x0000000004fd1ba4: hlt
  0x0000000004fd1ba5: hlt
  0x0000000004fd1ba6: hlt
  0x0000000004fd1ba7: hlt
  0x0000000004fd1ba8: hlt
  0x0000000004fd1ba9: hlt
  0x0000000004fd1baa: hlt
  0x0000000004fd1bab: hlt
  0x0000000004fd1bac: hlt
  0x0000000004fd1bad: hlt
  0x0000000004fd1bae: hlt
  0x0000000004fd1baf: hlt
  0x0000000004fd1bb0: hlt
  0x0000000004fd1bb1: hlt
  0x0000000004fd1bb2: hlt
  0x0000000004fd1bb3: hlt
  0x0000000004fd1bb4: hlt
  0x0000000004fd1bb5: hlt
  0x0000000004fd1bb6: hlt
  0x0000000004fd1bb7: hlt
  0x0000000004fd1bb8: hlt
  0x0000000004fd1bb9: hlt
  0x0000000004fd1bba: hlt
  0x0000000004fd1bbb: hlt
  0x0000000004fd1bbc: hlt
  0x0000000004fd1bbd: hlt
  0x0000000004fd1bbe: hlt
  0x0000000004fd1bbf: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fd1bc0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fd1bc5: call    4fd1bcah
  0x0000000004fd1bca: sub     qword ptr [rsp],5h
  0x0000000004fd1bcf: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd1bd4: hlt
  0x0000000004fd1bd5: hlt
  0x0000000004fd1bd6: hlt
  0x0000000004fd1bd7: hlt
<nmethod compile_id='34' compile_kind='osr' compiler='C2' level='4' entry='0x0000000004fd1ac0' size='936' address='0x0000000004fd1990' relocation_offset='288' insts_offset='304' stub_offset='560' scopes_data_offset='600' scopes_pcs_offset='640' dependencies_offset='928' oops_offset='584' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='5039730' iicount='1' stamp='0.565'/>
<make_not_entrant thread='18044' compile_id='33' compile_kind='osr' compiler='C1' level='3' stamp='0.565'/>
<writer thread='15116'/>
<task_queued compile_id='36' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='5047531' iicount='1' stamp='0.565' comment='tiered' hot_count='1'/>
<writer thread='11168'/>
Decoding compiled method 0x0000000004fd2d50:
Code:
Argument 0 is unknown.RIP: 0x4fd2ea0 Code size: 0x00000328
[Entry Point]
[Constants]
  # {method} {0x000000001e314ea0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x0000000004fd2ea0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd2ea4: shl     r10,3h
  0x0000000004fd2ea8: cmp     rax,r10
  0x0000000004fd2eab: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd2eb1: nop
  0x0000000004fd2eb4: nop     word ptr [rax+rax+0h]
  0x0000000004fd2eba: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x0000000004fd2ec0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd2ec7: push    rbp
  0x0000000004fd2ec8: sub     rsp,60h           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000004fd2ecc: mov     dword ptr [rsp+20h],r8d
  0x0000000004fd2ed1: mov     rbp,rdx
  0x0000000004fd2ed4: mov     r9d,dword ptr [rdx+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2ed8: mov     edi,dword ptr [r12+r9*8+0ch]
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000004fd3174
  0x0000000004fd2edd: mov     r11d,dword ptr [rdx+0ch]
                                                ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000004fd2ee1: mov     ebx,r11d
  0x0000000004fd2ee4: sub     ebx,edi
  0x0000000004fd2ee6: mov     rcx,r9
  0x0000000004fd2ee9: shl     rcx,3h            ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2eed: inc     ebx
  0x0000000004fd2eef: mov     r8d,r11d
  0x0000000004fd2ef2: inc     r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x0000000004fd2ef5: test    ebx,ebx
  0x0000000004fd2ef7: jnle    4fd2f2dh          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000004fd2ef9: mov     dword ptr [rbp+0ch],r8d  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000004fd2efd: test    rcx,rcx
  0x0000000004fd2f00: je      4fd310ch
  0x0000000004fd2f06: mov     r8d,dword ptr [rcx+0ch]
  0x0000000004fd2f0a: cmp     r11d,r8d
  0x0000000004fd2f0d: jnb     4fd3121h
  0x0000000004fd2f13: mov     r8d,dword ptr [rsp+20h]
  0x0000000004fd2f18: mov     word ptr [rcx+r11*2+10h],r8w
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000004fd2f1e: mov     rax,rbp
  0x0000000004fd2f21: add     rsp,60h
  0x0000000004fd2f25: pop     rbp
  0x0000000004fd2f26: test    dword ptr [4850000h],eax
                                                ;   {poll_return}
  0x0000000004fd2f2c: ret
  0x0000000004fd2f2d: mov     r10d,edi
  0x0000000004fd2f30: shl     r10d,1h           ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f33: mov     ebx,r10d
  0x0000000004fd2f36: sub     ebx,r11d
  0x0000000004fd2f39: inc     ebx
  0x0000000004fd2f3b: test    ebx,ebx
  0x0000000004fd2f3d: jnl     4fd3072h          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f43: mov     r10d,r8d          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f46: test    r10d,r10d
  0x0000000004fd2f49: jle     4fd2f59h          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f4b: mov     r11d,7ffffff7h
  0x0000000004fd2f51: sub     r11d,r10d
  0x0000000004fd2f54: test    r11d,r11d
  0x0000000004fd2f57: jnl     4fd2f7dh          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f59: mov     dword ptr [rsp+30h],edi
  0x0000000004fd2f5d: mov     dword ptr [rsp+24h],r9d
  0x0000000004fd2f62: mov     qword ptr [rsp+28h],rcx
  0x0000000004fd2f67: call    4d561a0h          ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=204}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000004fd2f6c: mov     rcx,qword ptr [rsp+28h]
  0x0000000004fd2f71: mov     r10d,eax
  0x0000000004fd2f74: mov     r9d,dword ptr [rsp+24h]
  0x0000000004fd2f79: mov     edi,dword ptr [rsp+30h]  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2f7d: cmp     r10d,80000h
  0x0000000004fd2f84: jnbe    4fd3139h
  0x0000000004fd2f8a: movsxd  r11,r10d
  0x0000000004fd2f8d: shl     r11,1h
  0x0000000004fd2f90: add     r11,17h
  0x0000000004fd2f94: mov     r8,r11
  0x0000000004fd2f97: and     r8,0fffffffffffffff8h
  0x0000000004fd2f9b: cmp     r10d,80000h
  0x0000000004fd2fa2: jnbe    4fd30bah
  0x0000000004fd2fa8: mov     rbx,qword ptr [r15+60h]
  0x0000000004fd2fac: mov     rdx,rbx
  0x0000000004fd2faf: add     rdx,r8
  0x0000000004fd2fb2: cmp     rdx,qword ptr [r15+70h]
  0x0000000004fd2fb6: jnb     4fd30bah
  0x0000000004fd2fbc: mov     qword ptr [r15+60h],rdx
  0x0000000004fd2fc0: prefetchnta byte ptr [rdx+100h]
  0x0000000004fd2fc7: mov     qword ptr [rbx],1h
  0x0000000004fd2fce: prefetchnta byte ptr [rdx+140h]
  0x0000000004fd2fd5: mov     dword ptr [rbx+8h],0f8000041h
                                                ;   {metadata({type array char})}
  0x0000000004fd2fdc: mov     dword ptr [rbx+0ch],r10d
  0x0000000004fd2fe0: prefetchnta byte ptr [rdx+180h]  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2fe7: cmp     edi,r10d
  0x0000000004fd2fea: mov     esi,r10d
  0x0000000004fd2fed: cmovl   esi,edi           ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2ff0: mov     r13,rbx
  0x0000000004fd2ff3: add     r13,10h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2ff7: lea     rdx,[r12+r9*8]    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd2ffb: shr     r11,3h
  0x0000000004fd2fff: mov     rcx,r11
  0x0000000004fd3002: add     rcx,0fffffffffffffffeh
  0x0000000004fd3006: cmp     edi,esi
  0x0000000004fd3008: jb      4fd3141h
  0x0000000004fd300e: cmp     r10d,esi
  0x0000000004fd3011: jb      4fd3141h
  0x0000000004fd3017: test    esi,esi
  0x0000000004fd3019: jle     4fd3166h
  0x0000000004fd301f: lea     r9,[r12+r9*8+10h]
  0x0000000004fd3024: cmp     esi,r10d
  0x0000000004fd3027: jl      4fd307bh
  0x0000000004fd3029: add     r8,0fffffffffffffff0h
  0x0000000004fd302d: shr     r8,3h
  0x0000000004fd3031: mov     rcx,r9
  0x0000000004fd3034: mov     rdx,r13
  0x0000000004fd3037: mov     r10,4d62860h
  0x0000000004fd3041: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd3044: mov     r11d,dword ptr [rbp+0ch]
                                                ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000004fd3048: mov     r8,rbx
  0x0000000004fd304b: shr     r8,3h
  0x0000000004fd304f: mov     dword ptr [rbp+10h],r8d  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd3053: mov     r8d,r11d
  0x0000000004fd3056: inc     r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x0000000004fd3059: mov     r10,rbp
  0x0000000004fd305c: shr     r10,9h
  0x0000000004fd3060: mov     r9d,10ac8000h
  0x0000000004fd3066: mov     byte ptr [r9+r10],r12l  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd306a: mov     rcx,rbx
  0x0000000004fd306d: jmp     4fd2ef9h
  0x0000000004fd3072: add     r10d,2h           ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd3076: jmp     4fd2f46h
  0x0000000004fd307b: movsxd  r8,esi
  0x0000000004fd307e: mov     r10,r8
  0x0000000004fd3081: shl     r10,1h
  0x0000000004fd3084: add     r10,10h
  0x0000000004fd3088: mov     rcx,r10
  0x0000000004fd308b: and     rcx,0fffffffffffffff9h
  0x0000000004fd308f: mov     rdi,rbx
  0x0000000004fd3092: add     rdi,rcx
  0x0000000004fd3095: shr     r10,3h
  0x0000000004fd3099: sub     r11,r10
  0x0000000004fd309c: mov     rcx,r11
  0x0000000004fd309f: xor     rax,rax
  0x0000000004fd30a2: rep stos qword ptr [rdi]
  0x0000000004fd30a5: mov     rcx,r9
  0x0000000004fd30a8: mov     rdx,r13
  0x0000000004fd30ab: mov     r10,4d62580h
  0x0000000004fd30b5: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd30b8: jmp     4fd3044h
  0x0000000004fd30ba: mov     dword ptr [rsp+44h],edi
  0x0000000004fd30be: mov     dword ptr [rsp+40h],r9d
  0x0000000004fd30c3: mov     qword ptr [rsp+38h],r8
  0x0000000004fd30c8: mov     qword ptr [rsp+30h],r11
  0x0000000004fd30cd: mov     dword ptr [rsp+24h],r10d
  0x0000000004fd30d2: mov     qword ptr [rsp+28h],rcx
  0x0000000004fd30d7: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fd30e1: mov     r8d,r10d
  0x0000000004fd30e4: nop
  0x0000000004fd30e7: call    4d7f4a0h          ; OopMap{rbp=Oop [40]=Oop [64]=NarrowOop off=588}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000004fd30ec: mov     r10d,dword ptr [rsp+24h]
  0x0000000004fd30f1: mov     r11,qword ptr [rsp+30h]
  0x0000000004fd30f6: mov     r8,qword ptr [rsp+38h]
  0x0000000004fd30fb: mov     r9d,dword ptr [rsp+40h]
  0x0000000004fd3100: mov     edi,dword ptr [rsp+44h]
  0x0000000004fd3104: mov     rbx,rax
  0x0000000004fd3107: jmp     4fd2fe7h
  0x0000000004fd310c: mov     edx,0fffffff6h
  0x0000000004fd3111: mov     ebp,dword ptr [rsp+20h]
  0x0000000004fd3115: mov     dword ptr [rsp+20h],r11d
  0x0000000004fd311a: nop
  0x0000000004fd311b: call    4d557a0h          ; OopMap{off=640}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000004fd3120: int3
  0x0000000004fd3121: mov     edx,0ffffffe4h
  0x0000000004fd3126: mov     qword ptr [rsp+28h],rcx
  0x0000000004fd312b: mov     dword ptr [rsp+24h],r11d
  0x0000000004fd3130: nop
  0x0000000004fd3133: call    4d557a0h          ; OopMap{rbp=Oop [40]=Oop off=664}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000004fd3138: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000004fd3139: movsxd  r11,r10d          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd313c: jmp     4fd2f8dh
  0x0000000004fd3141: mov     rdi,r13
  0x0000000004fd3144: xor     rax,rax
  0x0000000004fd3147: rep stos qword ptr [rdi]
  0x0000000004fd314a: xor     r8d,r8d
  0x0000000004fd314d: mov     r9,rbx
  0x0000000004fd3150: xor     edi,edi
  0x0000000004fd3152: mov     qword ptr [rsp+38h],rbx
  0x0000000004fd3157: call    4fc88e0h          ; OopMap{rbp=Oop [56]=Oop off=700}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000004fd315c: mov     rbx,qword ptr [rsp+38h]
  0x0000000004fd3161: jmp     4fd3044h
  0x0000000004fd3166: mov     rdi,r13
  0x0000000004fd3169: xor     rax,rax
  0x0000000004fd316c: rep stos qword ptr [rdi]  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd316f: jmp     4fd3044h
  0x0000000004fd3174: mov     edx,0fffffff6h
  0x0000000004fd3179: nop
  0x0000000004fd317b: call    4d557a0h          ; OopMap{off=736}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000004fd3180: int3
  0x0000000004fd3181: jmp     4fd3183h          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd3183: mov     rdx,rax
  0x0000000004fd3186: jmp     4fd318bh          ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000004fd3188: mov     rdx,rax           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000004fd318b: add     rsp,60h
  0x0000000004fd318f: pop     rbp
  0x0000000004fd3190: jmp     4fc40a0h          ;   {runtime_call}
  0x0000000004fd3195: hlt
  0x0000000004fd3196: hlt
  0x0000000004fd3197: hlt
  0x0000000004fd3198: hlt
  0x0000000004fd3199: hlt
  0x0000000004fd319a: hlt
  0x0000000004fd319b: hlt
  0x0000000004fd319c: hlt
  0x0000000004fd319d: hlt
  0x0000000004fd319e: hlt
  0x0000000004fd319f: hlt
[Stub Code]
  0x0000000004fd31a0: mov     rbx,0h            ;   {no_reloc}
  0x0000000004fd31aa: jmp     4fd31aah          ;   {runtime_call}
[Exception Handler]
  0x0000000004fd31af: jmp     4d7fe20h          ;   {runtime_call}
[Deopt Handler Code]
  0x0000000004fd31b4: call    4fd31b9h
  0x0000000004fd31b9: sub     qword ptr [rsp],5h
  0x0000000004fd31be: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd31c3: hlt
  0x0000000004fd31c4: hlt
  0x0000000004fd31c5: hlt
  0x0000000004fd31c6: hlt
  0x0000000004fd31c7: hlt
<nmethod compile_id='31' compiler='C2' level='4' entry='0x0000000004fd2ea0' size='2208' address='0x0000000004fd2d50' relocation_offset='288' insts_offset='336' stub_offset='1104' scopes_data_offset='1184' scopes_pcs_offset='1472' dependencies_offset='2112' handler_table_offset='2120' nul_chk_table_offset='2192' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='11436' iicount='11436' stamp='0.581'/>
<writer thread='1724'/>
Decoding compiled method 0x0000000004fd5850:
Code:
Argument 0 is unknown.RIP: 0x4fd5c00 Code size: 0x000022b8
<writer thread='24564'/>
[Loaded java.net.URI$Parser from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1724'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;
  # this:     rdx:rdx   = &apos;java/util/zip/ZipCoder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x180]  (sp of caller)
  0x0000000004fd5c00: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd5c04: shl     r10,3h
  0x0000000004fd5c08: cmp     r10,rax
  0x0000000004fd5c0b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd5c11: nop     dword ptr [rax+rax+0h]
  0x0000000004fd5c19: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fd5c20: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd5c27: push    rbp
  0x0000000004fd5c28: sub     rsp,170h
  0x0000000004fd5c2f: mov     qword ptr [rsp+0f0h],rdx
  0x0000000004fd5c37: mov     rsi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5c41: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd5c47: add     edi,8h
  0x0000000004fd5c4a: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd5c50: mov     rsi,1e4af4e0h     ;   {metadata({method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5c5a: and     edi,1ff8h
  0x0000000004fd5c60: cmp     edi,0h
  0x0000000004fd5c63: je      4fd7959h          ;*aload_0
                                                ; - java.util.zip.ZipCoder::getBytes@0 (line 77)

  0x0000000004fd5c69: mov     rsi,rdx
  0x0000000004fd5c6c: mov     rdi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5c76: add     qword ptr [rdi+108h],1h
  0x0000000004fd5c7e: mov     rsi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5c88: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fd5c8e: add     edi,8h
  0x0000000004fd5c91: mov     dword ptr [rsi+0dch],edi
  0x0000000004fd5c97: mov     rsi,1e4af9b0h     ;   {metadata({method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5ca1: and     edi,7ffff8h
  0x0000000004fd5ca7: cmp     edi,0h
  0x0000000004fd5caa: je      4fd7970h
  0x0000000004fd5cb0: mov     esi,dword ptr [rdx+18h]
  0x0000000004fd5cb3: shl     rsi,3h            ;*getfield enc
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5cb7: cmp     rsi,0h
  0x0000000004fd5cbb: mov     rsi,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5cc5: mov     rdi,108h
  0x0000000004fd5ccf: jne     4fd5cdfh
  0x0000000004fd5cd5: mov     rdi,118h
  0x0000000004fd5cdf: mov     rbx,qword ptr [rsi+rdi]
  0x0000000004fd5ce3: lea     rbx,[rbx+1h]
  0x0000000004fd5ce7: mov     qword ptr [rsi+rdi],rbx
  0x0000000004fd5ceb: mov     qword ptr [rsp+0f8h],r8
  0x0000000004fd5cf3: jne     4fd6161h          ;*ifnonnull
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5cf9: mov     esi,dword ptr [rdx+10h]
  0x0000000004fd5cfc: shl     rsi,3h            ;*getfield cs
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5d00: cmp     rax,qword ptr [rsi]  ; implicit exception: dispatches to 0x0000000004fd7987
  0x0000000004fd5d03: mov     rdi,rsi
  0x0000000004fd5d06: mov     rbx,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5d10: mov     edi,dword ptr [rdi+8h]
  0x0000000004fd5d13: shl     rdi,3h
  0x0000000004fd5d17: cmp     rdi,qword ptr [rbx+130h]
  0x0000000004fd5d1e: jne     4fd5d2dh
  0x0000000004fd5d20: add     qword ptr [rbx+138h],1h
  0x0000000004fd5d28: jmp     4fd5d93h
  0x0000000004fd5d2d: cmp     rdi,qword ptr [rbx+140h]
  0x0000000004fd5d34: jne     4fd5d43h
  0x0000000004fd5d36: add     qword ptr [rbx+148h],1h
  0x0000000004fd5d3e: jmp     4fd5d93h
  0x0000000004fd5d43: cmp     qword ptr [rbx+130h],0h
  0x0000000004fd5d4e: jne     4fd5d67h
  0x0000000004fd5d50: mov     qword ptr [rbx+130h],rdi
  0x0000000004fd5d57: mov     qword ptr [rbx+138h],1h
  0x0000000004fd5d62: jmp     4fd5d93h
  0x0000000004fd5d67: cmp     qword ptr [rbx+140h],0h
  0x0000000004fd5d72: jne     4fd5d8bh
  0x0000000004fd5d74: mov     qword ptr [rbx+140h],rdi
  0x0000000004fd5d7b: mov     qword ptr [rbx+148h],1h
  0x0000000004fd5d86: jmp     4fd5d93h
  0x0000000004fd5d8b: add     qword ptr [rbx+128h],1h
  0x0000000004fd5d93: mov     rdx,rsi           ;*invokevirtual newEncoder
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5d96: nop
  0x0000000004fd5d97: nop
  0x0000000004fd5d98: nop
  0x0000000004fd5d99: nop
  0x0000000004fd5d9a: nop
  0x0000000004fd5d9b: nop
  0x0000000004fd5d9c: nop
  0x0000000004fd5d9d: mov     rax,0ffffffffffffffffh
  0x0000000004fd5da7: call    4d563e0h          ; OopMap{[248]=Oop [240]=Oop off=428}
                                                ;*invokevirtual newEncoder
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {virtual_call}
  0x0000000004fd5dac: cmp     rax,qword ptr [rax]  ;*invokevirtual onMalformedInput
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ; implicit exception: dispatches to 0x0000000004fd798c
  0x0000000004fd5daf: mov     rbx,rax
  0x0000000004fd5db2: mov     rdx,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5dbc: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd5dbf: shl     rbx,3h
  0x0000000004fd5dc3: cmp     rbx,qword ptr [rdx+160h]
  0x0000000004fd5dca: jne     4fd5dd9h
  0x0000000004fd5dcc: add     qword ptr [rdx+168h],1h
  0x0000000004fd5dd4: jmp     4fd5e3fh
  0x0000000004fd5dd9: cmp     rbx,qword ptr [rdx+170h]
  0x0000000004fd5de0: jne     4fd5defh
  0x0000000004fd5de2: add     qword ptr [rdx+178h],1h
  0x0000000004fd5dea: jmp     4fd5e3fh
  0x0000000004fd5def: cmp     qword ptr [rdx+160h],0h
  0x0000000004fd5dfa: jne     4fd5e13h
  0x0000000004fd5dfc: mov     qword ptr [rdx+160h],rbx
  0x0000000004fd5e03: mov     qword ptr [rdx+168h],1h
  0x0000000004fd5e0e: jmp     4fd5e3fh
  0x0000000004fd5e13: cmp     qword ptr [rdx+170h],0h
  0x0000000004fd5e1e: jne     4fd5e37h
  0x0000000004fd5e20: mov     qword ptr [rdx+170h],rbx
  0x0000000004fd5e27: mov     qword ptr [rdx+178h],1h
  0x0000000004fd5e32: jmp     4fd5e3fh
  0x0000000004fd5e37: add     qword ptr [rdx+158h],1h
  0x0000000004fd5e3f: mov     rbx,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5e49: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd5e4f: add     edx,8h
  0x0000000004fd5e52: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd5e58: mov     rbx,1e405680h     ;   {metadata({method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5e62: and     edx,7ffff8h
  0x0000000004fd5e68: cmp     edx,0h
  0x0000000004fd5e6b: je      4fd7991h
  0x0000000004fd5e71: mov     rbx,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5e7b: inc     dword ptr [rbx+108h]  ;*ifnonnull
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5e81: mov     rbx,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd5e8b: mov     r10,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd5e95: shr     r10,3h
  0x0000000004fd5e99: mov     dword ptr [rax+20h],r10d
  0x0000000004fd5e9d: mov     rbx,rax
  0x0000000004fd5ea0: shr     rbx,9h
  0x0000000004fd5ea4: mov     rdx,10ac8000h
  0x0000000004fd5eae: mov     byte ptr [rbx+rdx],0h  ;*putfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd5eb2: mov     rbx,rax
  0x0000000004fd5eb5: mov     rdx,1e5835b0h     ;   {metadata(method data for {method} {0x000000001e405688} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5ebf: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd5ec2: shl     rbx,3h
  0x0000000004fd5ec6: cmp     rbx,qword ptr [rdx+140h]
  0x0000000004fd5ecd: jne     4fd5edch
  0x0000000004fd5ecf: add     qword ptr [rdx+148h],1h
  0x0000000004fd5ed7: jmp     4fd5f42h
  0x0000000004fd5edc: cmp     rbx,qword ptr [rdx+150h]
  0x0000000004fd5ee3: jne     4fd5ef2h
  0x0000000004fd5ee5: add     qword ptr [rdx+158h],1h
  0x0000000004fd5eed: jmp     4fd5f42h
  0x0000000004fd5ef2: cmp     qword ptr [rdx+140h],0h
  0x0000000004fd5efd: jne     4fd5f16h
  0x0000000004fd5eff: mov     qword ptr [rdx+140h],rbx
  0x0000000004fd5f06: mov     qword ptr [rdx+148h],1h
  0x0000000004fd5f11: jmp     4fd5f42h
  0x0000000004fd5f16: cmp     qword ptr [rdx+150h],0h
  0x0000000004fd5f21: jne     4fd5f3ah
  0x0000000004fd5f23: mov     qword ptr [rdx+150h],rbx
  0x0000000004fd5f2a: mov     qword ptr [rdx+158h],1h
  0x0000000004fd5f35: jmp     4fd5f42h
  0x0000000004fd5f3a: add     qword ptr [rdx+138h],1h
  0x0000000004fd5f42: mov     rbx,1e583760h     ;   {metadata(method data for {method} {0x000000001e405718} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5f4c: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd5f52: add     edx,8h
  0x0000000004fd5f55: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd5f5b: mov     rbx,1e405710h     ;   {metadata({method} {0x000000001e405718} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd5f65: and     edx,7ffff8h
  0x0000000004fd5f6b: cmp     edx,0h
  0x0000000004fd5f6e: je      4fd79a8h
  0x0000000004fd5f74: mov     rbx,rax
  0x0000000004fd5f77: mov     rdx,1e5833b8h     ;   {metadata(method data for {method} {0x000000001e4af9b8} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd5f81: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd5f84: shl     rbx,3h
  0x0000000004fd5f88: cmp     rbx,qword ptr [rdx+190h]
  0x0000000004fd5f8f: jne     4fd5f9eh
  0x0000000004fd5f91: add     qword ptr [rdx+198h],1h
  0x0000000004fd5f99: jmp     4fd6004h
  0x0000000004fd5f9e: cmp     rbx,qword ptr [rdx+1a0h]
  0x0000000004fd5fa5: jne     4fd5fb4h
  0x0000000004fd5fa7: add     qword ptr [rdx+1a8h],1h
  0x0000000004fd5faf: jmp     4fd6004h
  0x0000000004fd5fb4: cmp     qword ptr [rdx+190h],0h
  0x0000000004fd5fbf: jne     4fd5fd8h
  0x0000000004fd5fc1: mov     qword ptr [rdx+190h],rbx
  0x0000000004fd5fc8: mov     qword ptr [rdx+198h],1h
  0x0000000004fd5fd3: jmp     4fd6004h
  0x0000000004fd5fd8: cmp     qword ptr [rdx+1a0h],0h
  0x0000000004fd5fe3: jne     4fd5ffch
  0x0000000004fd5fe5: mov     qword ptr [rdx+1a0h],rbx
  0x0000000004fd5fec: mov     qword ptr [rdx+1a8h],1h
  0x0000000004fd5ff7: jmp     4fd6004h
  0x0000000004fd5ffc: add     qword ptr [rdx+188h],1h
  0x0000000004fd6004: mov     rbx,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd600e: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd6014: add     edx,8h
  0x0000000004fd6017: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd601d: mov     rbx,1e405858h     ;   {metadata({method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6027: and     edx,7ffff8h
  0x0000000004fd602d: cmp     edx,0h
  0x0000000004fd6030: je      4fd79bfh
  0x0000000004fd6036: mov     rbx,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6040: inc     dword ptr [rbx+108h]  ;*ifnonnull
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd6046: mov     rbx,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd6050: mov     r10,76b054190h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x0000000004fd605a: shr     r10,3h
  0x0000000004fd605e: mov     dword ptr [rax+24h],r10d
  0x0000000004fd6062: mov     rbx,rax
  0x0000000004fd6065: shr     rbx,9h
  0x0000000004fd6069: mov     rdx,10ac8000h
  0x0000000004fd6073: mov     byte ptr [rbx+rdx],0h  ;*putfield unmappableCharacterAction
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd6077: mov     rbx,rax
  0x0000000004fd607a: mov     rdx,1e5838a8h     ;   {metadata(method data for {method} {0x000000001e405860} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6084: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd6087: shl     rbx,3h
  0x0000000004fd608b: cmp     rbx,qword ptr [rdx+140h]
  0x0000000004fd6092: jne     4fd60a1h
  0x0000000004fd6094: add     qword ptr [rdx+148h],1h
  0x0000000004fd609c: jmp     4fd6107h
  0x0000000004fd60a1: cmp     rbx,qword ptr [rdx+150h]
  0x0000000004fd60a8: jne     4fd60b7h
  0x0000000004fd60aa: add     qword ptr [rdx+158h],1h
  0x0000000004fd60b2: jmp     4fd6107h
  0x0000000004fd60b7: cmp     qword ptr [rdx+140h],0h
  0x0000000004fd60c2: jne     4fd60dbh
  0x0000000004fd60c4: mov     qword ptr [rdx+140h],rbx
  0x0000000004fd60cb: mov     qword ptr [rdx+148h],1h
  0x0000000004fd60d6: jmp     4fd6107h
  0x0000000004fd60db: cmp     qword ptr [rdx+150h],0h
  0x0000000004fd60e6: jne     4fd60ffh
  0x0000000004fd60e8: mov     qword ptr [rdx+150h],rbx
  0x0000000004fd60ef: mov     qword ptr [rdx+158h],1h
  0x0000000004fd60fa: jmp     4fd6107h
  0x0000000004fd60ff: add     qword ptr [rdx+138h],1h
  0x0000000004fd6107: mov     rbx,1e583af8h     ;   {metadata(method data for {method} {0x000000001e4058f0} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6111: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd6117: add     edx,8h
  0x0000000004fd611a: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd6120: mov     rbx,1e4058e8h     ;   {metadata({method} {0x000000001e4058f0} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd612a: and     edx,7ffff8h
  0x0000000004fd6130: cmp     edx,0h
  0x0000000004fd6133: je      4fd79d6h
  0x0000000004fd6139: mov     rdx,qword ptr [rsp+0f0h]
  0x0000000004fd6141: mov     r10,rax
  0x0000000004fd6144: shr     r10,3h
  0x0000000004fd6148: mov     dword ptr [rdx+18h],r10d
  0x0000000004fd614c: mov     rbx,rdx
  0x0000000004fd614f: shr     rbx,9h
  0x0000000004fd6153: mov     rsi,10ac8000h
  0x0000000004fd615d: mov     byte ptr [rbx+rsi],0h  ;*putfield enc
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd6161: mov     r11d,dword ptr [rdx+18h]
  0x0000000004fd6165: shl     r11,3h            ;*getfield enc
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x0000000004fd6169: mov     qword ptr [rsp+108h],r11
  0x0000000004fd6171: mov     r8,qword ptr [rsp+0f8h]
  0x0000000004fd6179: cmp     rax,qword ptr [r11]  ;*invokevirtual reset
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ; implicit exception: dispatches to 0x0000000004fd79ed
  0x0000000004fd617c: mov     rbx,r11
  0x0000000004fd617f: mov     rsi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6189: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd618c: shl     rbx,3h
  0x0000000004fd6190: cmp     rbx,qword ptr [rsi+120h]
  0x0000000004fd6197: jne     4fd61a6h
  0x0000000004fd6199: add     qword ptr [rsi+128h],1h
  0x0000000004fd61a1: jmp     4fd620ch
  0x0000000004fd61a6: cmp     rbx,qword ptr [rsi+130h]
  0x0000000004fd61ad: jne     4fd61bch
  0x0000000004fd61af: add     qword ptr [rsi+138h],1h
  0x0000000004fd61b7: jmp     4fd620ch
  0x0000000004fd61bc: cmp     qword ptr [rsi+120h],0h
  0x0000000004fd61c7: jne     4fd61e0h
  0x0000000004fd61c9: mov     qword ptr [rsi+120h],rbx
  0x0000000004fd61d0: mov     qword ptr [rsi+128h],1h
  0x0000000004fd61db: jmp     4fd620ch
  0x0000000004fd61e0: cmp     qword ptr [rsi+130h],0h
  0x0000000004fd61eb: jne     4fd6204h
  0x0000000004fd61ed: mov     qword ptr [rsi+130h],rbx
  0x0000000004fd61f4: mov     qword ptr [rsi+138h],1h
  0x0000000004fd61ff: jmp     4fd620ch
  0x0000000004fd6204: add     qword ptr [rsi+118h],1h
  0x0000000004fd620c: mov     rbx,1e583c60h     ;   {metadata(method data for {method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6216: mov     esi,dword ptr [rbx+0dch]
  0x0000000004fd621c: add     esi,8h
  0x0000000004fd621f: mov     dword ptr [rbx+0dch],esi
  0x0000000004fd6225: mov     rbx,1e405df8h     ;   {metadata({method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd622f: and     esi,7ffff8h
  0x0000000004fd6235: cmp     esi,0h
  0x0000000004fd6238: je      4fd79f2h
  0x0000000004fd623e: mov     rbx,r11
  0x0000000004fd6241: mov     rsi,1e583c60h     ;   {metadata(method data for {method} {0x000000001e405e00} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd624b: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd624e: shl     rbx,3h
  0x0000000004fd6252: cmp     rbx,qword ptr [rsi+110h]
  0x0000000004fd6259: jne     4fd6268h
  0x0000000004fd625b: add     qword ptr [rsi+118h],1h
  0x0000000004fd6263: jmp     4fd62ceh
  0x0000000004fd6268: cmp     rbx,qword ptr [rsi+120h]
  0x0000000004fd626f: jne     4fd627eh
  0x0000000004fd6271: add     qword ptr [rsi+128h],1h
  0x0000000004fd6279: jmp     4fd62ceh
  0x0000000004fd627e: cmp     qword ptr [rsi+110h],0h
  0x0000000004fd6289: jne     4fd62a2h
  0x0000000004fd628b: mov     qword ptr [rsi+110h],rbx
  0x0000000004fd6292: mov     qword ptr [rsi+118h],1h
  0x0000000004fd629d: jmp     4fd62ceh
  0x0000000004fd62a2: cmp     qword ptr [rsi+120h],0h
  0x0000000004fd62ad: jne     4fd62c6h
  0x0000000004fd62af: mov     qword ptr [rsi+120h],rbx
  0x0000000004fd62b6: mov     qword ptr [rsi+128h],1h
  0x0000000004fd62c1: jmp     4fd62ceh
  0x0000000004fd62c6: add     qword ptr [rsi+108h],1h
  0x0000000004fd62ce: mov     rbx,1e583dd8h     ;   {metadata(method data for {method} {0x000000001e405e90} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd62d8: mov     esi,dword ptr [rbx+0dch]
  0x0000000004fd62de: add     esi,8h
  0x0000000004fd62e1: mov     dword ptr [rbx+0dch],esi
  0x0000000004fd62e7: mov     rbx,1e405e88h     ;   {metadata({method} {0x000000001e405e90} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd62f1: and     esi,7ffff8h
  0x0000000004fd62f7: cmp     esi,0h
  0x0000000004fd62fa: je      4fd7a09h
  0x0000000004fd6300: mov     dword ptr [r11+14h],0h  ;*putfield state
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)

  0x0000000004fd6308: cmp     rax,qword ptr [r8]  ;*invokevirtual toCharArray
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x0000000004fd7a20
  0x0000000004fd630b: mov     rbx,r8
  0x0000000004fd630e: mov     rsi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6318: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd631b: shl     rbx,3h
  0x0000000004fd631f: cmp     rbx,qword ptr [rsi+150h]
  0x0000000004fd6326: jne     4fd6335h
  0x0000000004fd6328: add     qword ptr [rsi+158h],1h
  0x0000000004fd6330: jmp     4fd639bh
  0x0000000004fd6335: cmp     rbx,qword ptr [rsi+160h]
  0x0000000004fd633c: jne     4fd634bh
  0x0000000004fd633e: add     qword ptr [rsi+168h],1h
  0x0000000004fd6346: jmp     4fd639bh
  0x0000000004fd634b: cmp     qword ptr [rsi+150h],0h
  0x0000000004fd6356: jne     4fd636fh
  0x0000000004fd6358: mov     qword ptr [rsi+150h],rbx
  0x0000000004fd635f: mov     qword ptr [rsi+158h],1h
  0x0000000004fd636a: jmp     4fd639bh
  0x0000000004fd636f: cmp     qword ptr [rsi+160h],0h
  0x0000000004fd637a: jne     4fd6393h
  0x0000000004fd637c: mov     qword ptr [rsi+160h],rbx
  0x0000000004fd6383: mov     qword ptr [rsi+168h],1h
  0x0000000004fd638e: jmp     4fd639bh
  0x0000000004fd6393: add     qword ptr [rsi+148h],1h
  0x0000000004fd639b: mov     rbx,1e52d2e0h     ;   {metadata(method data for {method} {0x000000001e2a6ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd63a5: mov     esi,dword ptr [rbx+0dch]
  0x0000000004fd63ab: add     esi,8h
  0x0000000004fd63ae: mov     dword ptr [rbx+0dch],esi
  0x0000000004fd63b4: mov     rbx,1e2a6ea0h     ;   {metadata({method} {0x000000001e2a6ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd63be: and     esi,7ffff8h
  0x0000000004fd63c4: cmp     esi,0h
  0x0000000004fd63c7: je      4fd7a25h
  0x0000000004fd63cd: mov     r9d,dword ptr [r8+0ch]
  0x0000000004fd63d1: shl     r9,3h             ;*getfield value
                                                ; - java.lang.String::toCharArray@1 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x0000000004fd63d5: mov     r13d,dword ptr [r9+0ch]  ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x0000000004fd7a3c
  0x0000000004fd63d9: mov     rbx,r13
  0x0000000004fd63dc: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fd63e6: movsxd  rbx,ebx
  0x0000000004fd63e9: mov     rdi,rbx
  0x0000000004fd63ec: cmp     rbx,0ffffffh
  0x0000000004fd63f3: jnbe    4fd7a41h
  0x0000000004fd63f9: mov     rsi,17h
  0x0000000004fd6403: lea     rsi,[rsi+rbx*2]
  0x0000000004fd6407: and     rsi,0fffffffffffffff8h
  0x0000000004fd640b: mov     rax,qword ptr [r15+60h]
  0x0000000004fd640f: lea     rsi,[rax+rsi]
  0x0000000004fd6413: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fd6417: jnbe    4fd7a41h
  0x0000000004fd641d: mov     qword ptr [r15+60h],rsi
  0x0000000004fd6421: sub     rsi,rax
  0x0000000004fd6424: mov     qword ptr [rax],1h
  0x0000000004fd642b: mov     rcx,rdx
  0x0000000004fd642e: shr     rcx,3h
  0x0000000004fd6432: mov     dword ptr [rax+8h],ecx
  0x0000000004fd6435: mov     dword ptr [rax+0ch],ebx
  0x0000000004fd6438: sub     rsi,10h
  0x0000000004fd643c: je      4fd6453h
  0x0000000004fd6442: xor     rbx,rbx
  0x0000000004fd6445: shr     rsi,3h
  0x0000000004fd6449: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fd644e: dec     rsi
  0x0000000004fd6451: jne     4fd6449h          ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x0000000004fd6453: mov     qword ptr [rsp+100h],rax
  0x0000000004fd645b: mov     rdx,1e52d2e0h     ;   {metadata(method data for {method} {0x000000001e2a6ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd6465: add     qword ptr [rdx+108h],1h
  0x0000000004fd646d: mov     rdx,r9
  0x0000000004fd6470: mov     r8d,0h
  0x0000000004fd6476: mov     r9,rax
  0x0000000004fd6479: mov     edi,0h
  0x0000000004fd647e: mov     rsi,r13
  0x0000000004fd6481: lea     rcx,[rdi+rsi]
  0x0000000004fd6485: cmp     ecx,dword ptr [r9+0ch]
  0x0000000004fd6489: jnbe    4fd7a4bh
  0x0000000004fd648f: movsxd  r8,r8d
  0x0000000004fd6492: movsxd  rdi,edi
  0x0000000004fd6495: lea     rcx,[rdx+r8*2+10h]
  0x0000000004fd649a: lea     rdx,[r9+rdi*2+10h]
  0x0000000004fd649f: mov     r8,rsi
  0x0000000004fd64a2: sub     rsp,20h
  0x0000000004fd64a6: test    esp,0fh
  0x0000000004fd64ac: je      4fd64c4h
  0x0000000004fd64b2: sub     rsp,8h
  0x0000000004fd64b6: call    4d62580h          ;   {runtime_call}
  0x0000000004fd64bb: add     rsp,8h
  0x0000000004fd64bf: jmp     4fd64c9h
  0x0000000004fd64c4: call    4d62580h          ;   {runtime_call}
  0x0000000004fd64c9: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x0000000004fd64cd: mov     rax,qword ptr [rsp+100h]
  0x0000000004fd64d5: mov     r11d,dword ptr [rax+0ch]
                                                ;*arraylength
                                                ; - java.util.zip.ZipCoder::getBytes@14 (line 79)

  0x0000000004fd64d9: mov     rbx,qword ptr [rsp+108h]
  0x0000000004fd64e1: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd64eb: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd64ee: shl     rbx,3h
  0x0000000004fd64f2: cmp     rbx,qword ptr [rdx+180h]
  0x0000000004fd64f9: jne     4fd6508h
  0x0000000004fd64fb: add     qword ptr [rdx+188h],1h
  0x0000000004fd6503: jmp     4fd656eh
  0x0000000004fd6508: cmp     rbx,qword ptr [rdx+190h]
  0x0000000004fd650f: jne     4fd651eh
  0x0000000004fd6511: add     qword ptr [rdx+198h],1h
  0x0000000004fd6519: jmp     4fd656eh
  0x0000000004fd651e: cmp     qword ptr [rdx+180h],0h
  0x0000000004fd6529: jne     4fd6542h
  0x0000000004fd652b: mov     qword ptr [rdx+180h],rbx
  0x0000000004fd6532: mov     qword ptr [rdx+188h],1h
  0x0000000004fd653d: jmp     4fd656eh
  0x0000000004fd6542: cmp     qword ptr [rdx+190h],0h
  0x0000000004fd654d: jne     4fd6566h
  0x0000000004fd654f: mov     qword ptr [rdx+190h],rbx
  0x0000000004fd6556: mov     qword ptr [rdx+198h],1h
  0x0000000004fd6561: jmp     4fd656eh
  0x0000000004fd6566: add     qword ptr [rdx+178h],1h
  0x0000000004fd656e: vcvtsi2ss xmm0,xmm0,r11d
  0x0000000004fd6573: mov     rbx,1e583f58h     ;   {metadata(method data for {method} {0x000000001e405a20} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd657d: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd6583: add     edx,8h
  0x0000000004fd6586: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd658c: mov     rbx,1e405a18h     ;   {metadata({method} {0x000000001e405a20} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000004fd6596: and     edx,7ffff8h
  0x0000000004fd659c: cmp     edx,0h
  0x0000000004fd659f: je      4fd7a59h
  0x0000000004fd65a5: mov     r13,qword ptr [rsp+108h]
  0x0000000004fd65ad: vmovss  xmm1,dword ptr [r13+10h]
                                                ;*getfield maxBytesPerChar
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)
                                                ; - java.util.zip.ZipCoder::getBytes@17 (line 79)

  0x0000000004fd65b3: vmulss  xmm0,xmm0,xmm1
  0x0000000004fd65b7: vcvttss2si r8d,xmm0
  0x0000000004fd65bb: cmp     r8d,80000000h
  0x0000000004fd65c2: je      4fd7a70h
  0x0000000004fd65c8: mov     rbx,r8
  0x0000000004fd65cb: mov     rdx,7c00007a8h    ;   {metadata({type array byte})}
  0x0000000004fd65d5: movsxd  rbx,ebx
  0x0000000004fd65d8: mov     rdi,rbx
  0x0000000004fd65db: cmp     rbx,0ffffffh
  0x0000000004fd65e2: jnbe    4fd7a89h
  0x0000000004fd65e8: mov     rsi,17h
  0x0000000004fd65f2: lea     rsi,[rsi+rbx]
  0x0000000004fd65f6: and     rsi,0fffffffffffffff8h
  0x0000000004fd65fa: mov     rax,qword ptr [r15+60h]
  0x0000000004fd65fe: lea     rsi,[rax+rsi]
  0x0000000004fd6602: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fd6606: jnbe    4fd7a89h
  0x0000000004fd660c: mov     qword ptr [r15+60h],rsi
  0x0000000004fd6610: sub     rsi,rax
  0x0000000004fd6613: mov     qword ptr [rax],1h
  0x0000000004fd661a: mov     rcx,rdx
  0x0000000004fd661d: shr     rcx,3h
  0x0000000004fd6621: mov     dword ptr [rax+8h],ecx
  0x0000000004fd6624: mov     dword ptr [rax+0ch],ebx
  0x0000000004fd6627: sub     rsi,10h
  0x0000000004fd662b: je      4fd6642h
  0x0000000004fd6631: xor     rbx,rbx
  0x0000000004fd6634: shr     rsi,3h
  0x0000000004fd6638: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fd663d: dec     rsi
  0x0000000004fd6640: jne     4fd6638h          ;*newarray
                                                ; - java.util.zip.ZipCoder::getBytes@26 (line 80)

  0x0000000004fd6642: mov     qword ptr [rsp+110h],rax
  0x0000000004fd664a: cmp     r8d,0h
  0x0000000004fd664e: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6658: mov     rsi,1a8h
  0x0000000004fd6662: jne     4fd6672h
  0x0000000004fd6668: mov     rsi,1b8h
  0x0000000004fd6672: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fd6676: lea     rdi,[rdi+1h]
  0x0000000004fd667a: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fd667e: je      4fd767eh          ;*ifne
                                                ; - java.util.zip.ZipCoder::getBytes@32 (line 81)

  0x0000000004fd6684: mov     rdx,qword ptr [rsp+0f0h]
  0x0000000004fd668c: movsx   edx,byte ptr [rdx+0ch]  ;*getfield isUTF8
                                                ; - java.util.zip.ZipCoder::getBytes@39 (line 85)

  0x0000000004fd6690: cmp     edx,0h
  0x0000000004fd6693: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd669d: mov     rsi,1c8h
  0x0000000004fd66a7: je      4fd66b7h
  0x0000000004fd66ad: mov     rsi,1d8h
  0x0000000004fd66b7: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fd66bb: lea     rdi,[rdi+1h]
  0x0000000004fd66bf: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fd66c3: je      4fd680eh          ;*ifeq
                                                ; - java.util.zip.ZipCoder::getBytes@42 (line 85)

  0x0000000004fd66c9: cmp     r13,0h
  0x0000000004fd66cd: jne     4fd66e8h
  0x0000000004fd66cf: mov     rdi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd66d9: or      dword ptr [rdi+1e0h],100h
  0x0000000004fd66e3: jmp     4fd67c6h
  0x0000000004fd66e8: mov     rcx,7c002ac18h    ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x0000000004fd66f2: mov     edi,dword ptr [r13+8h]
  0x0000000004fd66f6: shl     rdi,3h
  0x0000000004fd66fa: cmp     rcx,qword ptr [rdi+18h]
  0x0000000004fd66fe: je      4fd671fh
  0x0000000004fd6704: cmp     rdi,rcx
  0x0000000004fd6707: je      4fd671fh
  0x0000000004fd670d: push    rdi
  0x0000000004fd670e: push    rcx
  0x0000000004fd670f: call    4fbe6a0h          ;   {runtime_call}
  0x0000000004fd6714: pop     rdi
  0x0000000004fd6715: pop     rdi
  0x0000000004fd6716: cmp     edi,0h
  0x0000000004fd6719: je      4fd67aah
  0x0000000004fd671f: mov     rdi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6729: mov     ecx,dword ptr [r13+8h]
  0x0000000004fd672d: shl     rcx,3h
  0x0000000004fd6731: cmp     rcx,qword ptr [rdi+1f0h]
  0x0000000004fd6738: jne     4fd6747h
  0x0000000004fd673a: add     qword ptr [rdi+1f8h],1h
  0x0000000004fd6742: jmp     4fd67cbh
  0x0000000004fd6747: cmp     rcx,qword ptr [rdi+200h]
  0x0000000004fd674e: jne     4fd675dh
  0x0000000004fd6750: add     qword ptr [rdi+208h],1h
  0x0000000004fd6758: jmp     4fd67cbh
  0x0000000004fd675d: cmp     qword ptr [rdi+1f0h],0h
  0x0000000004fd6768: jne     4fd6781h
  0x0000000004fd676a: mov     qword ptr [rdi+1f0h],rcx
  0x0000000004fd6771: mov     qword ptr [rdi+1f8h],1h
  0x0000000004fd677c: jmp     4fd67cbh
  0x0000000004fd6781: cmp     qword ptr [rdi+200h],0h
  0x0000000004fd678c: jne     4fd67a5h
  0x0000000004fd678e: mov     qword ptr [rdi+200h],rcx
  0x0000000004fd6795: mov     qword ptr [rdi+208h],1h
  0x0000000004fd67a0: jmp     4fd67cbh
  0x0000000004fd67a5: jmp     4fd67cbh
  0x0000000004fd67aa: mov     rdi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd67b4: sub     qword ptr [rdi+1e8h],1h
  0x0000000004fd67bc: jmp     4fd67c6h
  0x0000000004fd67c1: jmp     4fd67cbh
  0x0000000004fd67c6: xor     rdx,rdx
  0x0000000004fd67c9: jmp     4fd67d5h
  0x0000000004fd67cb: mov     rdx,1h            ;*instanceof
                                                ; - java.util.zip.ZipCoder::getBytes@46 (line 85)

  0x0000000004fd67d5: cmp     edx,0h
  0x0000000004fd67d8: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd67e2: mov     rsi,218h
  0x0000000004fd67ec: je      4fd67fch
  0x0000000004fd67f2: mov     rsi,228h
  0x0000000004fd67fc: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fd6800: lea     rdi,[rdi+1h]
  0x0000000004fd6804: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fd6808: jne     4fd71a3h          ;*ifeq
                                                ; - java.util.zip.ZipCoder::getBytes@49 (line 85)

  0x0000000004fd680e: mov     dword ptr [rsp+118h],r11d
  0x0000000004fd6816: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6820: add     qword ptr [rdx+2d8h],1h
  0x0000000004fd6828: mov     rdx,1e589c70h     ;   {metadata(method data for {method} {0x000000001e408500} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd6832: mov     esi,dword ptr [rdx+0dch]
  0x0000000004fd6838: add     esi,8h
  0x0000000004fd683b: mov     dword ptr [rdx+0dch],esi
  0x0000000004fd6841: mov     rdx,1e4084f8h     ;   {metadata({method} {0x000000001e408500} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd684b: and     esi,7ffff8h
  0x0000000004fd6851: cmp     esi,0h
  0x0000000004fd6854: je      4fd7a93h
  0x0000000004fd685a: mov     r14d,dword ptr [rax+0ch]
                                                ;*arraylength
                                                ; - java.nio.ByteBuffer::wrap@3 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x0000000004fd685e: mov     rdx,1e589c70h     ;   {metadata(method data for {method} {0x000000001e408500} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd6868: add     qword ptr [rdx+108h],1h
  0x0000000004fd6870: mov     rdx,1e589e08h     ;   {metadata(method data for {method} {0x000000001e408468} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd687a: mov     esi,dword ptr [rdx+0dch]
  0x0000000004fd6880: add     esi,8h
  0x0000000004fd6883: mov     dword ptr [rdx+0dch],esi
  0x0000000004fd6889: mov     rdx,1e408460h     ;   {metadata({method} {0x000000001e408468} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd6893: and     esi,7ffff8h
  0x0000000004fd6899: cmp     esi,0h
  0x0000000004fd689c: je      4fd7aaah
  0x0000000004fd68a2: mov     rdx,7c002b688h    ;   {metadata(&apos;java/nio/HeapByteBuffer&apos;)}
  0x0000000004fd68ac: mov     r9,rax
  0x0000000004fd68af: mov     rax,qword ptr [r15+60h]
  0x0000000004fd68b3: lea     rdi,[rax+30h]
  0x0000000004fd68b7: cmp     rdi,qword ptr [r15+70h]
  0x0000000004fd68bb: jnbe    4fd7ac1h
  0x0000000004fd68c1: mov     qword ptr [r15+60h],rdi
  0x0000000004fd68c5: mov     rcx,qword ptr [rdx+0a8h]
  0x0000000004fd68cc: mov     qword ptr [rax],rcx
  0x0000000004fd68cf: mov     rcx,rdx
  0x0000000004fd68d2: shr     rcx,3h
  0x0000000004fd68d6: mov     dword ptr [rax+8h],ecx
  0x0000000004fd68d9: xor     rcx,rcx
  0x0000000004fd68dc: mov     dword ptr [rax+0ch],ecx
  0x0000000004fd68df: xor     rcx,rcx
  0x0000000004fd68e2: mov     qword ptr [rax+10h],rcx
  0x0000000004fd68e6: mov     qword ptr [rax+18h],rcx
  0x0000000004fd68ea: mov     qword ptr [rax+20h],rcx
  0x0000000004fd68ee: mov     qword ptr [rax+28h],rcx  ;*new
                                                ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x0000000004fd68f2: mov     qword ptr [rsp+120h],rax
  0x0000000004fd68fa: mov     r8,rax
  0x0000000004fd68fd: mov     rdi,1e589e08h     ;   {metadata(method data for {method} {0x000000001e408468} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000004fd6907: add     qword ptr [rdi+108h],1h
  0x0000000004fd690f: mov     r8,1e58a3b8h      ;   {metadata(method data for {method} {0x000000001e40bc30} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x0000000004fd6919: mov     edi,dword ptr [r8+0dch]
  0x0000000004fd6920: add     edi,8h
  0x0000000004fd6923: mov     dword ptr [r8+0dch],edi
  0x0000000004fd692a: mov     r8,1e40bc28h      ;   {metadata({method} {0x000000001e40bc30} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x0000000004fd6934: and     edi,7ffff8h
  0x0000000004fd693a: cmp     edi,0h
  0x0000000004fd693d: je      4fd7aceh
  0x0000000004fd6943: mov     r8,rax
  0x0000000004fd6946: mov     rdi,1e58a3b8h     ;   {metadata(method data for {method} {0x000000001e40bc30} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x0000000004fd6950: add     qword ptr [rdi+108h],1h
  0x0000000004fd6958: mov     r8d,0ffffffffh
  0x0000000004fd695e: mov     rdx,r9
  0x0000000004fd6961: mov     r9d,0h
  0x0000000004fd6967: mov     rdi,r14
  0x0000000004fd696a: mov     rsi,r14
  0x0000000004fd696d: mov     rcx,rdx
  0x0000000004fd6970: mov     dword ptr [rsp],0h
  0x0000000004fd6977: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x0000000004fd697a: mov     dword ptr [rsp+11ch],r14d
  0x0000000004fd6982: nop
  0x0000000004fd6983: nop
  0x0000000004fd6984: nop
  0x0000000004fd6985: nop
  0x0000000004fd6986: nop
  0x0000000004fd6987: call    4d561a0h          ; OopMap{[272]=Oop [264]=Oop [288]=Oop [256]=Oop off=3468}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {optimized virtual_call}
  0x0000000004fd698c: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6996: add     qword ptr [rdx+2e8h],1h
  0x0000000004fd699e: mov     rdx,1e58ac80h     ;   {metadata(method data for {method} {0x000000001e429ca0} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd69a8: mov     esi,dword ptr [rdx+0dch]
  0x0000000004fd69ae: add     esi,8h
  0x0000000004fd69b1: mov     dword ptr [rdx+0dch],esi
  0x0000000004fd69b7: mov     rdx,1e429c98h     ;   {metadata({method} {0x000000001e429ca0} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd69c1: and     esi,7ffff8h
  0x0000000004fd69c7: cmp     esi,0h
  0x0000000004fd69ca: je      4fd7ae5h
  0x0000000004fd69d0: mov     rdx,1e58ac80h     ;   {metadata(method data for {method} {0x000000001e429ca0} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd69da: add     qword ptr [rdx+108h],1h
  0x0000000004fd69e2: mov     rdx,1e58add8h     ;   {metadata(method data for {method} {0x000000001e429c08} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd69ec: mov     esi,dword ptr [rdx+0dch]
  0x0000000004fd69f2: add     esi,8h
  0x0000000004fd69f5: mov     dword ptr [rdx+0dch],esi
  0x0000000004fd69fb: mov     rdx,1e429c00h     ;   {metadata({method} {0x000000001e429c08} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd6a05: and     esi,7ffff8h
  0x0000000004fd6a0b: cmp     esi,0h
  0x0000000004fd6a0e: je      4fd7afch
  0x0000000004fd6a14: mov     rdx,7c002ec70h    ;   {metadata(&apos;java/nio/HeapCharBuffer&apos;)}
  0x0000000004fd6a1e: mov     rax,qword ptr [r15+60h]
  0x0000000004fd6a22: lea     rdi,[rax+30h]
  0x0000000004fd6a26: cmp     rdi,qword ptr [r15+70h]
  0x0000000004fd6a2a: jnbe    4fd7b13h
  0x0000000004fd6a30: mov     qword ptr [r15+60h],rdi
  0x0000000004fd6a34: mov     rcx,qword ptr [rdx+0a8h]
  0x0000000004fd6a3b: mov     qword ptr [rax],rcx
  0x0000000004fd6a3e: mov     rcx,rdx
  0x0000000004fd6a41: shr     rcx,3h
  0x0000000004fd6a45: mov     dword ptr [rax+8h],ecx
  0x0000000004fd6a48: xor     rcx,rcx
  0x0000000004fd6a4b: mov     dword ptr [rax+0ch],ecx
  0x0000000004fd6a4e: xor     rcx,rcx
  0x0000000004fd6a51: mov     qword ptr [rax+10h],rcx
  0x0000000004fd6a55: mov     qword ptr [rax+18h],rcx
  0x0000000004fd6a59: mov     qword ptr [rax+20h],rcx
  0x0000000004fd6a5d: mov     qword ptr [rax+28h],rcx  ;*new
                                                ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x0000000004fd6a61: mov     r8,rax
  0x0000000004fd6a64: mov     r9,1e58add8h      ;   {metadata(method data for {method} {0x000000001e429c08} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd6a6e: add     qword ptr [r9+108h],1h
  0x0000000004fd6a76: mov     r8,1e58af28h      ;   {metadata(method data for {method} {0x000000001e42c820} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x0000000004fd6a80: mov     r9d,dword ptr [r8+0dch]
  0x0000000004fd6a87: add     r9d,8h
  0x0000000004fd6a8b: mov     dword ptr [r8+0dch],r9d
  0x0000000004fd6a92: mov     r8,1e42c818h      ;   {metadata({method} {0x000000001e42c820} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x0000000004fd6a9c: and     r9d,7ffff8h
  0x0000000004fd6aa3: cmp     r9d,0h
  0x0000000004fd6aa7: je      4fd7b20h
  0x0000000004fd6aad: mov     r8,rax
  0x0000000004fd6ab0: mov     r9,1e58af28h      ;   {metadata(method data for {method} {0x000000001e42c820} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x0000000004fd6aba: add     qword ptr [r9+108h],1h
  0x0000000004fd6ac2: mov     r8,1e58b338h      ;   {metadata(method data for {method} {0x000000001e429a10} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd6acc: mov     r9d,dword ptr [r8+0dch]
  0x0000000004fd6ad3: add     r9d,8h
  0x0000000004fd6ad7: mov     dword ptr [r8+0dch],r9d
  0x0000000004fd6ade: mov     r8,1e429a08h      ;   {metadata({method} {0x000000001e429a10} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd6ae8: and     r9d,7ffff8h
  0x0000000004fd6aef: cmp     r9d,0h
  0x0000000004fd6af3: je      4fd7b37h
  0x0000000004fd6af9: mov     r8,rax
  0x0000000004fd6afc: mov     r9,1e58b338h      ;   {metadata(method data for {method} {0x000000001e429a10} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x0000000004fd6b06: add     qword ptr [r9+108h],1h
  0x0000000004fd6b0e: mov     r8d,0ffffffffh
  0x0000000004fd6b14: mov     r9d,0h
  0x0000000004fd6b1a: mov     edi,dword ptr [rsp+118h]
  0x0000000004fd6b21: mov     esi,dword ptr [rsp+118h]
  0x0000000004fd6b28: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x0000000004fd6b2b: mov     qword ptr [rsp+128h],rax
  0x0000000004fd6b33: nop
  0x0000000004fd6b34: nop
  0x0000000004fd6b35: nop
  0x0000000004fd6b36: nop
  0x0000000004fd6b37: call    4d561a0h          ; OopMap{[272]=Oop [264]=Oop [288]=Oop [256]=Oop [296]=Oop off=3900}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {optimized virtual_call}
  0x0000000004fd6b3c: mov     r8,qword ptr [rsp+128h]
  0x0000000004fd6b44: mov     rax,qword ptr [rsp+100h]
  0x0000000004fd6b4c: mov     r10,rax
  0x0000000004fd6b4f: shr     r10,3h
  0x0000000004fd6b53: mov     dword ptr [r8+2ch],r10d
  0x0000000004fd6b57: mov     rax,r8
  0x0000000004fd6b5a: shr     rax,9h
  0x0000000004fd6b5e: mov     r9,10ac8000h
  0x0000000004fd6b68: mov     byte ptr [rax+r9],0h  ;*putfield hb
                                                ; - java.nio.CharBuffer::&lt;init&gt;@12 (line 282)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x0000000004fd6b6d: mov     dword ptr [r8+24h],0h  ;*putfield offset
                                                ; - java.nio.CharBuffer::&lt;init&gt;@18 (line 283)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x0000000004fd6b75: mov     r11,qword ptr [rsp+108h]
  0x0000000004fd6b7d: mov     r9,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6b87: mov     r11d,dword ptr [r11+8h]
  0x0000000004fd6b8b: shl     r11,3h
  0x0000000004fd6b8f: cmp     r11,qword ptr [r9+300h]
  0x0000000004fd6b96: jne     4fd6ba5h
  0x0000000004fd6b98: add     qword ptr [r9+308h],1h
  0x0000000004fd6ba0: jmp     4fd6c0bh
  0x0000000004fd6ba5: cmp     r11,qword ptr [r9+310h]
  0x0000000004fd6bac: jne     4fd6bbbh
  0x0000000004fd6bae: add     qword ptr [r9+318h],1h
  0x0000000004fd6bb6: jmp     4fd6c0bh
  0x0000000004fd6bbb: cmp     qword ptr [r9+300h],0h
  0x0000000004fd6bc6: jne     4fd6bdfh
  0x0000000004fd6bc8: mov     qword ptr [r9+300h],r11
  0x0000000004fd6bcf: mov     qword ptr [r9+308h],1h
  0x0000000004fd6bda: jmp     4fd6c0bh
  0x0000000004fd6bdf: cmp     qword ptr [r9+310h],0h
  0x0000000004fd6bea: jne     4fd6c03h
  0x0000000004fd6bec: mov     qword ptr [r9+310h],r11
  0x0000000004fd6bf3: mov     qword ptr [r9+318h],1h
  0x0000000004fd6bfe: jmp     4fd6c0bh
  0x0000000004fd6c03: add     qword ptr [r9+2f8h],1h
  0x0000000004fd6c0b: mov     r9,qword ptr [rsp+120h]
  0x0000000004fd6c13: mov     edi,1h
  0x0000000004fd6c18: mov     rdx,qword ptr [rsp+108h]
                                                ;*invokevirtual encode
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x0000000004fd6c20: nop
  0x0000000004fd6c21: nop
  0x0000000004fd6c22: nop
  0x0000000004fd6c23: nop
  0x0000000004fd6c24: nop
  0x0000000004fd6c25: nop
  0x0000000004fd6c26: nop
  0x0000000004fd6c27: call    4d561a0h          ; OopMap{[272]=Oop [264]=Oop [288]=Oop off=4140}
                                                ;*invokevirtual encode
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)
                                                ;   {optimized virtual_call}
  0x0000000004fd6c2c: mov     rbx,rax           ;*invokevirtual encode
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x0000000004fd6c2f: cmp     rax,qword ptr [rbx]  ;*invokevirtual isUnderflow
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ; implicit exception: dispatches to 0x0000000004fd7b4e
  0x0000000004fd6c32: mov     r8,rbx
  0x0000000004fd6c35: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6c3f: mov     r10,7c002f040h    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6c49: mov     qword ptr [rdx+330h],r10
  0x0000000004fd6c50: add     qword ptr [rdx+338h],1h
  0x0000000004fd6c58: mov     r8,1e58c478h      ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6c62: mov     edx,dword ptr [r8+0dch]
  0x0000000004fd6c69: add     edx,8h
  0x0000000004fd6c6c: mov     dword ptr [r8+0dch],edx
  0x0000000004fd6c73: mov     r8,1e42e430h      ;   {metadata({method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6c7d: and     edx,7ffff8h
  0x0000000004fd6c83: cmp     edx,0h
  0x0000000004fd6c86: je      4fd7b53h
  0x0000000004fd6c8c: mov     r8d,dword ptr [rbx+0ch]  ;*getfield type
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x0000000004fd6c90: cmp     r8d,0h
  0x0000000004fd6c94: mov     r8,1e58c478h      ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6c9e: mov     rdx,108h
  0x0000000004fd6ca8: jne     4fd6cb8h
  0x0000000004fd6cae: mov     rdx,118h
  0x0000000004fd6cb8: mov     rsi,qword ptr [r8+rdx]
  0x0000000004fd6cbc: lea     rsi,[rsi+1h]
  0x0000000004fd6cc0: mov     qword ptr [r8+rdx],rsi
  0x0000000004fd6cc4: jne     4fd6ce6h          ;*ifne
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x0000000004fd6cca: mov     r8,1e58c478h      ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6cd4: inc     dword ptr [r8+128h]
  0x0000000004fd6cdb: mov     r8d,1h
  0x0000000004fd6ce1: jmp     4fd6cech          ;*goto
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x0000000004fd6ce6: mov     r8d,0h            ;*ireturn
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x0000000004fd6cec: and     r8d,1h
  0x0000000004fd6cf0: cmp     r8d,0h
  0x0000000004fd6cf4: mov     r8,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6cfe: mov     rdx,358h
  0x0000000004fd6d08: jne     4fd6d18h
  0x0000000004fd6d0e: mov     rdx,368h
  0x0000000004fd6d18: mov     rsi,qword ptr [r8+rdx]
  0x0000000004fd6d1c: lea     rsi,[rsi+1h]
  0x0000000004fd6d20: mov     qword ptr [r8+rdx],rsi
  0x0000000004fd6d24: je      4fd77d9h          ;*ifne
                                                ; - java.util.zip.ZipCoder::getBytes@122 (line 94)

  0x0000000004fd6d2a: mov     r11,qword ptr [rsp+108h]
  0x0000000004fd6d32: mov     r8,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6d3c: mov     r11d,dword ptr [r11+8h]
  0x0000000004fd6d40: shl     r11,3h
  0x0000000004fd6d44: cmp     r11,qword ptr [r8+3c0h]
  0x0000000004fd6d4b: jne     4fd6d5ah
  0x0000000004fd6d4d: add     qword ptr [r8+3c8h],1h
  0x0000000004fd6d55: jmp     4fd6dc0h
  0x0000000004fd6d5a: cmp     r11,qword ptr [r8+3d0h]
  0x0000000004fd6d61: jne     4fd6d70h
  0x0000000004fd6d63: add     qword ptr [r8+3d8h],1h
  0x0000000004fd6d6b: jmp     4fd6dc0h
  0x0000000004fd6d70: cmp     qword ptr [r8+3c0h],0h
  0x0000000004fd6d7b: jne     4fd6d94h
  0x0000000004fd6d7d: mov     qword ptr [r8+3c0h],r11
  0x0000000004fd6d84: mov     qword ptr [r8+3c8h],1h
  0x0000000004fd6d8f: jmp     4fd6dc0h
  0x0000000004fd6d94: cmp     qword ptr [r8+3d0h],0h
  0x0000000004fd6d9f: jne     4fd6db8h
  0x0000000004fd6da1: mov     qword ptr [r8+3d0h],r11
  0x0000000004fd6da8: mov     qword ptr [r8+3d8h],1h
  0x0000000004fd6db3: jmp     4fd6dc0h
  0x0000000004fd6db8: add     qword ptr [r8+3b8h],1h
  0x0000000004fd6dc0: mov     r8,qword ptr [rsp+120h]
  0x0000000004fd6dc8: mov     rdx,qword ptr [rsp+108h]
                                                ;*invokevirtual flush
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x0000000004fd6dd0: nop
  0x0000000004fd6dd1: nop
  0x0000000004fd6dd2: nop
  0x0000000004fd6dd3: nop
  0x0000000004fd6dd4: nop
  0x0000000004fd6dd5: nop
  0x0000000004fd6dd6: nop
  0x0000000004fd6dd7: call    4d561a0h          ; OopMap{[272]=Oop [288]=Oop off=4572}
                                                ;*invokevirtual flush
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)
                                                ;   {optimized virtual_call}
  0x0000000004fd6ddc: mov     rbx,rax           ;*invokevirtual flush
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x0000000004fd6ddf: cmp     rax,qword ptr [rbx]  ;*invokevirtual isUnderflow
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ; implicit exception: dispatches to 0x0000000004fd7b6a
  0x0000000004fd6de2: mov     rdx,rbx
  0x0000000004fd6de5: mov     rsi,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6def: mov     r10,7c002f040h    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6df9: mov     qword ptr [rsi+3f0h],r10
  0x0000000004fd6e00: add     qword ptr [rsi+3f8h],1h
  0x0000000004fd6e08: mov     rdx,1e58c478h     ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6e12: mov     esi,dword ptr [rdx+0dch]
  0x0000000004fd6e18: add     esi,8h
  0x0000000004fd6e1b: mov     dword ptr [rdx+0dch],esi
  0x0000000004fd6e21: mov     rdx,1e42e430h     ;   {metadata({method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6e2b: and     esi,7ffff8h
  0x0000000004fd6e31: cmp     esi,0h
  0x0000000004fd6e34: je      4fd7b6fh
  0x0000000004fd6e3a: mov     edx,dword ptr [rbx+0ch]  ;*getfield type
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x0000000004fd6e3d: cmp     edx,0h
  0x0000000004fd6e40: mov     rdx,1e58c478h     ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6e4a: mov     rsi,108h
  0x0000000004fd6e54: jne     4fd6e64h
  0x0000000004fd6e5a: mov     rsi,118h
  0x0000000004fd6e64: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fd6e68: lea     rdi,[rdi+1h]
  0x0000000004fd6e6c: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fd6e70: jne     4fd6e90h          ;*ifne
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x0000000004fd6e76: mov     rdx,1e58c478h     ;   {metadata(method data for {method} {0x000000001e42e438} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x0000000004fd6e80: inc     dword ptr [rdx+128h]
  0x0000000004fd6e86: mov     edx,1h
  0x0000000004fd6e8b: jmp     4fd6e95h          ;*goto
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x0000000004fd6e90: mov     edx,0h            ;*ireturn
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x0000000004fd6e95: and     edx,1h
  0x0000000004fd6e98: cmp     edx,0h
  0x0000000004fd6e9b: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6ea5: mov     rsi,418h
  0x0000000004fd6eaf: jne     4fd6ebfh
  0x0000000004fd6eb5: mov     rsi,428h
  0x0000000004fd6ebf: mov     rdi,qword ptr [rdx+rsi]
  0x0000000004fd6ec3: lea     rdi,[rdi+1h]
  0x0000000004fd6ec7: mov     qword ptr [rdx+rsi],rdi
  0x0000000004fd6ecb: je      4fd7719h          ;*ifne
                                                ; - java.util.zip.ZipCoder::getBytes@151 (line 97)

  0x0000000004fd6ed1: mov     rax,qword ptr [rsp+120h]
  0x0000000004fd6ed9: mov     rbx,rax
  0x0000000004fd6edc: mov     rdx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6ee6: mov     ebx,dword ptr [rbx+8h]
  0x0000000004fd6ee9: shl     rbx,3h
  0x0000000004fd6eed: cmp     rbx,qword ptr [rdx+480h]
  0x0000000004fd6ef4: jne     4fd6f03h
  0x0000000004fd6ef6: add     qword ptr [rdx+488h],1h
  0x0000000004fd6efe: jmp     4fd6f69h
  0x0000000004fd6f03: cmp     rbx,qword ptr [rdx+490h]
  0x0000000004fd6f0a: jne     4fd6f19h
  0x0000000004fd6f0c: add     qword ptr [rdx+498h],1h
  0x0000000004fd6f14: jmp     4fd6f69h
  0x0000000004fd6f19: cmp     qword ptr [rdx+480h],0h
  0x0000000004fd6f24: jne     4fd6f3dh
  0x0000000004fd6f26: mov     qword ptr [rdx+480h],rbx
  0x0000000004fd6f2d: mov     qword ptr [rdx+488h],1h
  0x0000000004fd6f38: jmp     4fd6f69h
  0x0000000004fd6f3d: cmp     qword ptr [rdx+490h],0h
  0x0000000004fd6f48: jne     4fd6f61h
  0x0000000004fd6f4a: mov     qword ptr [rdx+490h],rbx
  0x0000000004fd6f51: mov     qword ptr [rdx+498h],1h
  0x0000000004fd6f5c: jmp     4fd6f69h
  0x0000000004fd6f61: add     qword ptr [rdx+478h],1h
  0x0000000004fd6f69: mov     r8d,dword ptr [rax+18h]  ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)
                                                ; - java.util.zip.ZipCoder::getBytes@169 (line 99)

  0x0000000004fd6f6d: cmp     r8d,dword ptr [rsp+11ch]
  0x0000000004fd6f75: mov     rbx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6f7f: mov     rdx,4a8h
  0x0000000004fd6f89: jne     4fd6f99h
  0x0000000004fd6f8f: mov     rdx,4b8h
  0x0000000004fd6f99: mov     rsi,qword ptr [rbx+rdx]
  0x0000000004fd6f9d: lea     rsi,[rsi+1h]
  0x0000000004fd6fa1: mov     qword ptr [rbx+rdx],rsi
  0x0000000004fd6fa5: je      4fd7664h          ;*if_icmpne
                                                ; - java.util.zip.ZipCoder::getBytes@175 (line 99)

  0x0000000004fd6fab: mov     r14d,dword ptr [rsp+11ch]
  0x0000000004fd6fb3: mov     rbx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd6fbd: mov     eax,dword ptr [rax+8h]
  0x0000000004fd6fc0: shl     rax,3h
  0x0000000004fd6fc4: cmp     rax,qword ptr [rbx+4d0h]
  0x0000000004fd6fcb: jne     4fd6fdah
  0x0000000004fd6fcd: add     qword ptr [rbx+4d8h],1h
  0x0000000004fd6fd5: jmp     4fd7040h
  0x0000000004fd6fda: cmp     rax,qword ptr [rbx+4e0h]
  0x0000000004fd6fe1: jne     4fd6ff0h
  0x0000000004fd6fe3: add     qword ptr [rbx+4e8h],1h
  0x0000000004fd6feb: jmp     4fd7040h
  0x0000000004fd6ff0: cmp     qword ptr [rbx+4d0h],0h
  0x0000000004fd6ffb: jne     4fd7014h
  0x0000000004fd6ffd: mov     qword ptr [rbx+4d0h],rax
  0x0000000004fd7004: mov     qword ptr [rbx+4d8h],1h
  0x0000000004fd700f: jmp     4fd7040h
  0x0000000004fd7014: cmp     qword ptr [rbx+4e0h],0h
  0x0000000004fd701f: jne     4fd7038h
  0x0000000004fd7021: mov     qword ptr [rbx+4e0h],rax
  0x0000000004fd7028: mov     qword ptr [rbx+4e8h],1h
  0x0000000004fd7033: jmp     4fd7040h
  0x0000000004fd7038: add     qword ptr [rbx+4c8h],1h
  0x0000000004fd7040: mov     rbx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd704a: add     qword ptr [rbx+4f8h],1h
  0x0000000004fd7052: mov     rbx,1e5892b8h     ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd705c: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd7062: add     edx,8h
  0x0000000004fd7065: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd706b: mov     rbx,1e3b8808h     ;   {metadata({method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd7075: and     edx,7ffff8h
  0x0000000004fd707b: cmp     edx,0h
  0x0000000004fd707e: je      4fd7b86h
  0x0000000004fd7084: mov     rbx,r8
  0x0000000004fd7087: mov     rdx,7c00007a8h    ;   {metadata({type array byte})}
  0x0000000004fd7091: movsxd  rbx,ebx
  0x0000000004fd7094: mov     rdi,rbx
  0x0000000004fd7097: cmp     rbx,0ffffffh
  0x0000000004fd709e: jnbe    4fd7b9dh
  0x0000000004fd70a4: mov     rsi,17h
  0x0000000004fd70ae: lea     rsi,[rsi+rbx]
  0x0000000004fd70b2: and     rsi,0fffffffffffffff8h
  0x0000000004fd70b6: mov     rax,qword ptr [r15+60h]
  0x0000000004fd70ba: lea     rsi,[rax+rsi]
  0x0000000004fd70be: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fd70c2: jnbe    4fd7b9dh
  0x0000000004fd70c8: mov     qword ptr [r15+60h],rsi
  0x0000000004fd70cc: sub     rsi,rax
  0x0000000004fd70cf: mov     qword ptr [rax],1h
  0x0000000004fd70d6: mov     rcx,rdx
  0x0000000004fd70d9: shr     rcx,3h
  0x0000000004fd70dd: mov     dword ptr [rax+8h],ecx
  0x0000000004fd70e0: mov     dword ptr [rax+0ch],ebx
  0x0000000004fd70e3: sub     rsi,10h
  0x0000000004fd70e7: je      4fd70feh
  0x0000000004fd70ed: xor     rbx,rbx
  0x0000000004fd70f0: shr     rsi,3h
  0x0000000004fd70f4: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fd70f9: dec     rsi
  0x0000000004fd70fc: jne     4fd70f4h          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd70fe: mov     r9,1e5892b8h      ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd7108: add     qword ptr [r9+108h],1h
  0x0000000004fd7110: mov     r9,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd711a: mov     edi,dword ptr [r9+0dch]
  0x0000000004fd7121: add     edi,8h
  0x0000000004fd7124: mov     dword ptr [r9+0dch],edi
  0x0000000004fd712b: mov     r9,1e394550h      ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd7135: and     edi,7ffff8h
  0x0000000004fd713b: cmp     edi,0h
  0x0000000004fd713e: je      4fd7ba7h
  0x0000000004fd7144: cmp     r14d,r8d
  0x0000000004fd7147: mov     r9,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd7151: mov     rdi,108h
  0x0000000004fd715b: jnle    4fd716bh
  0x0000000004fd7161: mov     rdi,118h
  0x0000000004fd716b: mov     rsi,qword ptr [r9+rdi]
  0x0000000004fd716f: lea     rsi,[rsi+1h]
  0x0000000004fd7173: mov     qword ptr [r9+rdi],rsi
  0x0000000004fd7177: jnle    4fd7193h          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd717d: mov     r8,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd7187: inc     dword ptr [r8+128h]
  0x0000000004fd718e: jmp     4fd7196h          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd7193: mov     r14,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd7196: mov     r9,qword ptr [rsp+110h]
  0x0000000004fd719e: jmp     4fd75b8h          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd71a3: mov     rdi,r11
  0x0000000004fd71a6: mov     rax,qword ptr [rsp+100h]
  0x0000000004fd71ae: mov     r11,r13
  0x0000000004fd71b1: cmp     r11,0h
  0x0000000004fd71b5: jne     4fd71d1h
  0x0000000004fd71b7: mov     r9,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd71c1: or      dword ptr [r9+230h],100h
  0x0000000004fd71cc: jmp     4fd72b3h
  0x0000000004fd71d1: mov     rsi,7c002ac18h    ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x0000000004fd71db: mov     r9d,dword ptr [r11+8h]
  0x0000000004fd71df: shl     r9,3h
  0x0000000004fd71e3: cmp     rsi,qword ptr [r9+18h]
  0x0000000004fd71e7: je      4fd720ch
  0x0000000004fd71ed: cmp     r9,rsi
  0x0000000004fd71f0: je      4fd720ch
  0x0000000004fd71f6: push    r9
  0x0000000004fd71f8: push    rsi
  0x0000000004fd71f9: call    4fbe6a0h          ;   {runtime_call}
  0x0000000004fd71fe: pop     r9
  0x0000000004fd7200: pop     r9
  0x0000000004fd7202: cmp     r9d,0h
  0x0000000004fd7206: je      4fd7297h
  0x0000000004fd720c: mov     r9,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd7216: mov     esi,dword ptr [r11+8h]
  0x0000000004fd721a: shl     rsi,3h
  0x0000000004fd721e: cmp     rsi,qword ptr [r9+240h]
  0x0000000004fd7225: jne     4fd7234h
  0x0000000004fd7227: add     qword ptr [r9+248h],1h
  0x0000000004fd722f: jmp     4fd72b3h
  0x0000000004fd7234: cmp     rsi,qword ptr [r9+250h]
  0x0000000004fd723b: jne     4fd724ah
  0x0000000004fd723d: add     qword ptr [r9+258h],1h
  0x0000000004fd7245: jmp     4fd72b3h
  0x0000000004fd724a: cmp     qword ptr [r9+240h],0h
  0x0000000004fd7255: jne     4fd726eh
  0x0000000004fd7257: mov     qword ptr [r9+240h],rsi
  0x0000000004fd725e: mov     qword ptr [r9+248h],1h
  0x0000000004fd7269: jmp     4fd72b3h
  0x0000000004fd726e: cmp     qword ptr [r9+250h],0h
  0x0000000004fd7279: jne     4fd7292h
  0x0000000004fd727b: mov     qword ptr [r9+250h],rsi
  0x0000000004fd7282: mov     qword ptr [r9+258h],1h
  0x0000000004fd728d: jmp     4fd72b3h
  0x0000000004fd7292: jmp     4fd72b3h
  0x0000000004fd7297: mov     r9,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd72a1: sub     qword ptr [r9+238h],1h
  0x0000000004fd72a9: jmp     4fd7bbeh
  0x0000000004fd72ae: jmp     4fd72b3h
  0x0000000004fd72b3: mov     rdx,r11           ;*checkcast
                                                ; - java.util.zip.ZipCoder::getBytes@53 (line 86)

  0x0000000004fd72b6: cmp     rax,qword ptr [rdx]  ; implicit exception: dispatches to 0x0000000004fd7bc7
  0x0000000004fd72b9: mov     r8,rdx
  0x0000000004fd72bc: mov     r9,1e582e68h      ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd72c6: mov     r8d,dword ptr [r8+8h]
  0x0000000004fd72ca: shl     r8,3h
  0x0000000004fd72ce: cmp     r8,qword ptr [r9+270h]
  0x0000000004fd72d5: jne     4fd72e4h
  0x0000000004fd72d7: add     qword ptr [r9+278h],1h
  0x0000000004fd72df: jmp     4fd734ah
  0x0000000004fd72e4: cmp     r8,qword ptr [r9+280h]
  0x0000000004fd72eb: jne     4fd72fah
  0x0000000004fd72ed: add     qword ptr [r9+288h],1h
  0x0000000004fd72f5: jmp     4fd734ah
  0x0000000004fd72fa: cmp     qword ptr [r9+270h],0h
  0x0000000004fd7305: jne     4fd731eh
  0x0000000004fd7307: mov     qword ptr [r9+270h],r8
  0x0000000004fd730e: mov     qword ptr [r9+278h],1h
  0x0000000004fd7319: jmp     4fd734ah
  0x0000000004fd731e: cmp     qword ptr [r9+280h],0h
  0x0000000004fd7329: jne     4fd7342h
  0x0000000004fd732b: mov     qword ptr [r9+280h],r8
  0x0000000004fd7332: mov     qword ptr [r9+288h],1h
  0x0000000004fd733d: jmp     4fd734ah
  0x0000000004fd7342: add     qword ptr [r9+268h],1h
  0x0000000004fd734a: mov     r8,rax
  0x0000000004fd734d: mov     r9d,0h
  0x0000000004fd7353: mov     rsi,qword ptr [rsp+110h]
                                                ;*invokeinterface encode
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x0000000004fd735b: nop
  0x0000000004fd735c: nop
  0x0000000004fd735d: mov     rax,0ffffffffffffffffh
  0x0000000004fd7367: call    4d563e0h          ; OopMap{[272]=Oop off=5996}
                                                ;*invokeinterface encode
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {virtual_call}
  0x0000000004fd736c: mov     r8,rax            ;*invokeinterface encode
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x0000000004fd736f: cmp     r8d,0ffffffffh
  0x0000000004fd7373: mov     rbx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd737d: mov     rdx,298h
  0x0000000004fd7387: jne     4fd7397h
  0x0000000004fd738d: mov     rdx,2a8h
  0x0000000004fd7397: mov     rsi,qword ptr [rbx+rdx]
  0x0000000004fd739b: lea     rsi,[rsi+1h]
  0x0000000004fd739f: mov     qword ptr [rbx+rdx],rsi
  0x0000000004fd73a3: je      4fd7693h          ;*if_icmpne
                                                ; - java.util.zip.ZipCoder::getBytes@72 (line 87)

  0x0000000004fd73a9: mov     rax,qword ptr [rsp+110h]
  0x0000000004fd73b1: mov     rbx,1e582e68h     ;   {metadata(method data for {method} {0x000000001e4af4e8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x0000000004fd73bb: add     qword ptr [rbx+2c8h],1h
  0x0000000004fd73c3: mov     rbx,1e5892b8h     ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd73cd: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fd73d3: add     edx,8h
  0x0000000004fd73d6: mov     dword ptr [rbx+0dch],edx
  0x0000000004fd73dc: mov     rbx,1e3b8808h     ;   {metadata({method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd73e6: and     edx,7ffff8h
  0x0000000004fd73ec: cmp     edx,0h
  0x0000000004fd73ef: je      4fd7bcch
  0x0000000004fd73f5: mov     rbx,r8
  0x0000000004fd73f8: mov     rdx,7c00007a8h    ;   {metadata({type array byte})}
  0x0000000004fd7402: mov     r9,rax
  0x0000000004fd7405: movsxd  rbx,ebx
  0x0000000004fd7408: mov     rdi,rbx
  0x0000000004fd740b: cmp     rbx,0ffffffh
  0x0000000004fd7412: jnbe    4fd7be3h
  0x0000000004fd7418: mov     rsi,17h
  0x0000000004fd7422: lea     rsi,[rsi+rbx]
  0x0000000004fd7426: and     rsi,0fffffffffffffff8h
  0x0000000004fd742a: mov     rax,qword ptr [r15+60h]
  0x0000000004fd742e: lea     rsi,[rax+rsi]
  0x0000000004fd7432: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fd7436: jnbe    4fd7be3h
  0x0000000004fd743c: mov     qword ptr [r15+60h],rsi
  0x0000000004fd7440: sub     rsi,rax
  0x0000000004fd7443: mov     qword ptr [rax],1h
  0x0000000004fd744a: mov     rcx,rdx
  0x0000000004fd744d: shr     rcx,3h
  0x0000000004fd7451: mov     dword ptr [rax+8h],ecx
  0x0000000004fd7454: mov     dword ptr [rax+0ch],ebx
  0x0000000004fd7457: sub     rsi,10h
  0x0000000004fd745b: je      4fd7472h
  0x0000000004fd7461: xor     rbx,rbx
  0x0000000004fd7464: shr     rsi,3h
  0x0000000004fd7468: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fd746d: dec     rsi
  0x0000000004fd7470: jne     4fd7468h          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd7472: mov     edx,dword ptr [r9+0ch]  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd7476: mov     rdi,1e5892b8h     ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd7480: add     qword ptr [rdi+108h],1h
  0x0000000004fd7488: mov     rdi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd7492: mov     esi,dword ptr [rdi+0dch]
  0x0000000004fd7498: add     esi,8h
  0x0000000004fd749b: mov     dword ptr [rdi+0dch],esi
  0x0000000004fd74a1: mov     rdi,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd74ab: and     esi,7ffff8h
  0x0000000004fd74b1: cmp     esi,0h
  0x0000000004fd74b4: je      4fd7bedh
  0x0000000004fd74ba: cmp     edx,r8d
  0x0000000004fd74bd: mov     rdi,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd74c7: mov     rsi,108h
  0x0000000004fd74d1: jnle    4fd74e1h
  0x0000000004fd74d7: mov     rsi,118h
  0x0000000004fd74e1: mov     rbx,qword ptr [rdi+rsi]
  0x0000000004fd74e5: lea     rbx,[rbx+1h]
  0x0000000004fd74e9: mov     qword ptr [rdi+rsi],rbx
  0x0000000004fd74ed: jnle    4fd750ch          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd74f3: mov     r8,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fd74fd: inc     dword ptr [r8+128h]
  0x0000000004fd7504: mov     rsi,rdx
  0x0000000004fd7507: jmp     4fd750fh          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd750c: mov     rsi,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd750f: mov     rdx,1e5892b8h     ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd7519: add     qword ptr [rdx+118h],1h
  0x0000000004fd7521: mov     rdx,r9
  0x0000000004fd7524: mov     r8d,0h
  0x0000000004fd752a: mov     r9,rax
  0x0000000004fd752d: mov     edi,0h
  0x0000000004fd7532: mov     qword ptr [rsp+130h],rax
  0x0000000004fd753a: lea     rcx,[r8+rsi]
  0x0000000004fd753e: cmp     ecx,dword ptr [rdx+0ch]
  0x0000000004fd7541: jnbe    4fd7c04h
  0x0000000004fd7547: lea     rcx,[rdi+rsi]
  0x0000000004fd754b: cmp     ecx,dword ptr [r9+0ch]
  0x0000000004fd754f: jnbe    4fd7c04h
  0x0000000004fd7555: test    esi,esi
  0x0000000004fd7557: jl      4fd7c04h
  0x0000000004fd755d: je      4fd75a1h
  0x0000000004fd7563: movsxd  r8,r8d
  0x0000000004fd7566: movsxd  rdi,edi
  0x0000000004fd7569: lea     rcx,[rdx+r8+10h]
  0x0000000004fd756e: lea     rdx,[r9+rdi+10h]
  0x0000000004fd7573: mov     r8,rsi
  0x0000000004fd7576: sub     rsp,20h
  0x0000000004fd757a: test    esp,0fh
  0x0000000004fd7580: je      4fd7598h
  0x0000000004fd7586: sub     rsp,8h
  0x0000000004fd758a: call    4d623c0h          ;   {runtime_call}
  0x0000000004fd758f: add     rsp,8h
  0x0000000004fd7593: jmp     4fd759dh
  0x0000000004fd7598: call    4d623c0h          ;   {runtime_call}
  0x0000000004fd759d: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x0000000004fd75a1: mov     rax,qword ptr [rsp+130h]
  0x0000000004fd75a9: add     rsp,170h
  0x0000000004fd75b0: pop     rbp
  0x0000000004fd75b1: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd75b7: ret                       ;*areturn
                                                ; - java.util.zip.ZipCoder::getBytes@92 (line 89)

  0x0000000004fd75b8: mov     rdx,1e5892b8h     ;   {metadata(method data for {method} {0x000000001e3b8810} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fd75c2: add     qword ptr [rdx+118h],1h
  0x0000000004fd75ca: mov     rdx,r9
  0x0000000004fd75cd: mov     r8d,0h
  0x0000000004fd75d3: mov     r9,rax
  0x0000000004fd75d6: mov     edi,0h
  0x0000000004fd75db: mov     rsi,r14
  0x0000000004fd75de: mov     qword ptr [rsp+138h],rax
  0x0000000004fd75e6: lea     rcx,[r8+rsi]
  0x0000000004fd75ea: cmp     ecx,dword ptr [rdx+0ch]
  0x0000000004fd75ed: jnbe    4fd7c11h
  0x0000000004fd75f3: lea     rcx,[rdi+rsi]
  0x0000000004fd75f7: cmp     ecx,dword ptr [r9+0ch]
  0x0000000004fd75fb: jnbe    4fd7c11h
  0x0000000004fd7601: test    esi,esi
  0x0000000004fd7603: jl      4fd7c11h
  0x0000000004fd7609: je      4fd764dh
  0x0000000004fd760f: movsxd  r8,r8d
  0x0000000004fd7612: movsxd  rdi,edi
  0x0000000004fd7615: lea     rcx,[rdx+r8+10h]
  0x0000000004fd761a: lea     rdx,[r9+rdi+10h]
  0x0000000004fd761f: mov     r8,rsi
  0x0000000004fd7622: sub     rsp,20h
  0x0000000004fd7626: test    esp,0fh
  0x0000000004fd762c: je      4fd7644h
  0x0000000004fd7632: sub     rsp,8h
  0x0000000004fd7636: call    4d623c0h          ;   {runtime_call}
  0x0000000004fd763b: add     rsp,8h
  0x0000000004fd763f: jmp     4fd7649h
  0x0000000004fd7644: call    4d623c0h          ;   {runtime_call}
  0x0000000004fd7649: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x0000000004fd764d: mov     rax,qword ptr [rsp+138h]
  0x0000000004fd7655: add     rsp,170h
  0x0000000004fd765c: pop     rbp
  0x0000000004fd765d: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd7663: ret                       ;*areturn
                                                ; - java.util.zip.ZipCoder::getBytes@191 (line 102)

  0x0000000004fd7664: mov     r9,qword ptr [rsp+110h]
  0x0000000004fd766c: mov     rax,r9
  0x0000000004fd766f: add     rsp,170h
  0x0000000004fd7676: pop     rbp
  0x0000000004fd7677: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd767d: ret                       ;*areturn
                                                ; - java.util.zip.ZipCoder::getBytes@180 (line 100)

  0x0000000004fd767e: mov     r9,rax
  0x0000000004fd7681: mov     rax,r9
  0x0000000004fd7684: add     rsp,170h
  0x0000000004fd768b: pop     rbp
  0x0000000004fd768c: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd7692: ret                       ;*areturn
                                                ; - java.util.zip.ZipCoder::getBytes@37 (line 82)

  0x0000000004fd7693: nop     dword ptr [rax+rax+0h]
  0x0000000004fd7698: jmp     4fd7c30h          ;   {no_reloc}
  0x0000000004fd769d: add     byte ptr [rax],al
  0x0000000004fd769f: add     byte ptr [rax],al
  0x0000000004fd76a1: add     byte ptr [rcx+0ffffffffffffff8bh],cl
  0x0000000004fd76a4: Fatal error: Disassembling failed with error code: 15<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000004fd5c00' size='14800' address='0x0000000004fd5850' relocation_offset='288' insts_offset='944' stub_offset='9424' scopes_data_offset='10016' scopes_pcs_offset='12152' dependencies_offset='14616' handler_table_offset='14632' nul_chk_table_offset='14728' oops_offset='9832' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='260' iicount='260' stamp='0.623'/>
<writer thread='24564'/>
<task_queued compile_id='37' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' level='3' stamp='0.624' comment='tiered' hot_count='896'/>
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
Decoding compiled method 0x0000000004fd20d0:
Code:
Argument 0 is unknown.RIP: 0x4fd2240 Code size: 0x00000208
<writer thread='24564'/>
[Loaded sun.net.spi.DefaultProxySelector$3 from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='1628'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e2a5058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000004fd2240: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fd2244: shl     r10,3h
  0x0000000004fd2248: cmp     r10,rax
  0x0000000004fd224b: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fd2251: nop     dword ptr [rax+rax+0h]
  0x0000000004fd2259: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fd2260: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fd2267: push    rbp
  0x0000000004fd2268: sub     rsp,30h
  0x0000000004fd226c: mov     r9,1e4d4538h      ;   {metadata(method data for {method} {0x000000001e2a5058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd2276: mov     esi,dword ptr [r9+0dch]
  0x0000000004fd227d: add     esi,8h
  0x0000000004fd2280: mov     dword ptr [r9+0dch],esi
  0x0000000004fd2287: mov     r9,1e2a5050h      ;   {metadata({method} {0x000000001e2a5058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd2291: and     esi,1ff8h
  0x0000000004fd2297: cmp     esi,0h
  0x0000000004fd229a: je      4fd2348h          ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000004fd22a0: mov     r9,rdx
  0x0000000004fd22a3: mov     rsi,1e4d4538h     ;   {metadata(method data for {method} {0x000000001e2a5058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fd22ad: mov     r9d,dword ptr [r9+8h]
  0x0000000004fd22b1: shl     r9,3h
  0x0000000004fd22b5: cmp     r9,qword ptr [rsi+110h]
  0x0000000004fd22bc: jne     4fd22cbh
  0x0000000004fd22be: add     qword ptr [rsi+118h],1h
  0x0000000004fd22c6: jmp     4fd2331h
  0x0000000004fd22cb: cmp     r9,qword ptr [rsi+120h]
  0x0000000004fd22d2: jne     4fd22e1h
  0x0000000004fd22d4: add     qword ptr [rsi+128h],1h
  0x0000000004fd22dc: jmp     4fd2331h
  0x0000000004fd22e1: cmp     qword ptr [rsi+110h],0h
  0x0000000004fd22ec: jne     4fd2305h
  0x0000000004fd22ee: mov     qword ptr [rsi+110h],r9
  0x0000000004fd22f5: mov     qword ptr [rsi+118h],1h
  0x0000000004fd2300: jmp     4fd2331h
  0x0000000004fd2305: cmp     qword ptr [rsi+120h],0h
  0x0000000004fd2310: jne     4fd2329h
  0x0000000004fd2312: mov     qword ptr [rsi+120h],r9
  0x0000000004fd2319: mov     qword ptr [rsi+128h],1h
  0x0000000004fd2324: jmp     4fd2331h
  0x0000000004fd2329: add     qword ptr [rsi+108h],1h
  0x0000000004fd2331: mov     r9d,0h            ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000004fd2337: call    4d561a0h          ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000004fd233c: add     rsp,30h
  0x0000000004fd2340: pop     rbp
  0x0000000004fd2341: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fd2347: ret
  0x0000000004fd2348: mov     qword ptr [rsp+8h],r9
  0x0000000004fd234d: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fd2355: call    4fc0d20h          ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000004fd235a: jmp     4fd22a0h
  0x0000000004fd235f: nop
  0x0000000004fd2360: nop
  0x0000000004fd2361: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fd2368: mov     r10,0h
  0x0000000004fd2372: mov     qword ptr [r15+2a8h],r10
  0x0000000004fd2379: mov     r10,0h
  0x0000000004fd2383: mov     qword ptr [r15+2b0h],r10
  0x0000000004fd238a: add     rsp,30h
  0x0000000004fd238e: pop     rbp
  0x0000000004fd238f: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fd2394: hlt
  0x0000000004fd2395: hlt
  0x0000000004fd2396: hlt
  0x0000000004fd2397: hlt
  0x0000000004fd2398: hlt
  0x0000000004fd2399: hlt
  0x0000000004fd239a: hlt
  0x0000000004fd239b: hlt
  0x0000000004fd239c: hlt
  0x0000000004fd239d: hlt
  0x0000000004fd239e: hlt
  0x0000000004fd239f: hlt
[Stub Code]
  0x0000000004fd23a0: nop                       ;   {no_reloc}
  0x0000000004fd23a1: nop
  0x0000000004fd23a2: nop
  0x0000000004fd23a3: nop
  0x0000000004fd23a4: nop
  0x0000000004fd23a5: mov     rbx,0h            ;   {static_stub}
  0x0000000004fd23af: jmp     4fd23afh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fd23b4: call    4d89060h          ;   {runtime_call}
  0x0000000004fd23b9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fd23be: sub     rsp,80h
  0x0000000004fd23c5: mov     qword ptr [rsp+78h],rax
  0x0000000004fd23ca: mov     qword ptr [rsp+70h],rcx
  0x0000000004fd23cf: mov     qword ptr [rsp+68h],rdx
  0x0000000004fd23d4: mov     qword ptr [rsp+60h],rbx
  0x0000000004fd23d9: mov     qword ptr [rsp+50h],rbp
  0x0000000004fd23de: mov     qword ptr [rsp+48h],rsi
  0x0000000004fd23e3: mov     qword ptr [rsp+40h],rdi
  0x0000000004fd23e8: mov     qword ptr [rsp+38h],r8
  0x0000000004fd23ed: mov     qword ptr [rsp+30h],r9
  0x0000000004fd23f2: mov     qword ptr [rsp+28h],r10
  0x0000000004fd23f7: mov     qword ptr [rsp+20h],r11
  0x0000000004fd23fc: mov     qword ptr [rsp+18h],r12
  0x0000000004fd2401: mov     qword ptr [rsp+10h],r13
  0x0000000004fd2406: mov     qword ptr [rsp+8h],r14
  0x0000000004fd240b: mov     qword ptr [rsp],r15
  0x0000000004fd240f: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fd2419: mov     rdx,4fd23b9h      ;   {internal_word}
  0x0000000004fd2423: mov     r8,rsp
  0x0000000004fd2426: and     rsp,0fffffffffffffff0h
  0x0000000004fd242a: call    636c3d60h         ;   {runtime_call}
  0x0000000004fd242f: hlt
[Deopt Handler Code]
  0x0000000004fd2430: mov     r10,4fd2430h      ;   {section_word}
  0x0000000004fd243a: push    r10
  0x0000000004fd243c: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fd2441: hlt
  0x0000000004fd2442: hlt
  0x0000000004fd2443: hlt
  0x0000000004fd2444: hlt
  0x0000000004fd2445: hlt
  0x0000000004fd2446: hlt
  0x0000000004fd2447: hlt
<nmethod compile_id='37' compiler='C1' level='3' entry='0x0000000004fd2240' size='1040' address='0x0000000004fd20d0' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='934' iicount='934' stamp='0.633'/>
<writer thread='12568'/>
Decoding compiled method 0x0000000004fce810:
Code:
Argument 0 is unknown.RIP: 0x4fce9e0 Code size: 0x00000758
<writer thread='24564'/>
[Loaded java.net.Proxy from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
[Entry Point]
[Constants]
  # {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000004fce9e0: mov     r10d,dword ptr [rdx+8h]
  0x0000000004fce9e4: shl     r10,3h
  0x0000000004fce9e8: cmp     r10,rax
  0x0000000004fce9eb: jne     4d55f60h          ;   {runtime_call}
  0x0000000004fce9f1: nop     dword ptr [rax+rax+0h]
  0x0000000004fce9f9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x0000000004fcea00: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fcea07: push    rbp
  0x0000000004fcea08: sub     rsp,0e0h
  0x0000000004fcea0f: mov     qword ptr [rsp+0b8h],rdx
  0x0000000004fcea17: mov     rsi,1e4cf810h     ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcea21: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fcea27: add     edi,8h
  0x0000000004fcea2a: mov     dword ptr [rsi+0dch],edi
  0x0000000004fcea30: mov     rsi,1e3146b8h     ;   {metadata({method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcea3a: and     edi,1ff8h
  0x0000000004fcea40: cmp     edi,0h
  0x0000000004fcea43: je      4fcef83h          ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000004fcea49: cmp     r8,0h
  0x0000000004fcea4d: mov     rsi,1e4cf810h     ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcea57: mov     rdi,108h
  0x0000000004fcea61: jne     4fcea71h
  0x0000000004fcea67: mov     rdi,118h
  0x0000000004fcea71: mov     rbx,qword ptr [rsi+rdi]
  0x0000000004fcea75: lea     rbx,[rbx+1h]
  0x0000000004fcea79: mov     qword ptr [rsi+rdi],rbx
  0x0000000004fcea7d: je      4fcef53h          ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000004fcea83: cmp     rax,qword ptr [r8]  ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000004fcef9a
  0x0000000004fcea86: mov     rsi,r8
  0x0000000004fcea89: mov     rdi,1e4cf810h     ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcea93: mov     esi,dword ptr [rsi+8h]
  0x0000000004fcea96: shl     rsi,3h
  0x0000000004fcea9a: cmp     rsi,qword ptr [rdi+140h]
  0x0000000004fceaa1: jne     4fceab0h
  0x0000000004fceaa3: add     qword ptr [rdi+148h],1h
  0x0000000004fceaab: jmp     4fceb16h
  0x0000000004fceab0: cmp     rsi,qword ptr [rdi+150h]
  0x0000000004fceab7: jne     4fceac6h
  0x0000000004fceab9: add     qword ptr [rdi+158h],1h
  0x0000000004fceac1: jmp     4fceb16h
  0x0000000004fceac6: cmp     qword ptr [rdi+140h],0h
  0x0000000004fcead1: jne     4fceaeah
  0x0000000004fcead3: mov     qword ptr [rdi+140h],rsi
  0x0000000004fceada: mov     qword ptr [rdi+148h],1h
  0x0000000004fceae5: jmp     4fceb16h
  0x0000000004fceaea: cmp     qword ptr [rdi+150h],0h
  0x0000000004fceaf5: jne     4fceb0eh
  0x0000000004fceaf7: mov     qword ptr [rdi+150h],rsi
  0x0000000004fceafe: mov     qword ptr [rdi+158h],1h
  0x0000000004fceb09: jmp     4fceb16h
  0x0000000004fceb0e: add     qword ptr [rdi+138h],1h
  0x0000000004fceb16: mov     rsi,1e3d2920h     ;   {metadata(method data for {method} {0x000000001e2a3c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fceb20: mov     edi,dword ptr [rsi+0dch]
  0x0000000004fceb26: add     edi,8h
  0x0000000004fceb29: mov     dword ptr [rsi+0dch],edi
  0x0000000004fceb2f: mov     rsi,1e2a3c18h     ;   {metadata({method} {0x000000001e2a3c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000004fceb39: and     edi,7ffff8h
  0x0000000004fceb3f: cmp     edi,0h
  0x0000000004fceb42: je      4fcef9fh
  0x0000000004fceb48: mov     esi,dword ptr [r8+0ch]
  0x0000000004fceb4c: shl     rsi,3h            ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000004fceb50: mov     esi,dword ptr [rsi+0ch]  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000004fcefb6
  0x0000000004fceb53: mov     dword ptr [rsp+0ach],esi
  0x0000000004fceb5a: mov     edi,dword ptr [rdx+0ch]  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000004fceb5d: add     edi,esi
  0x0000000004fceb5f: mov     rbx,rdx
  0x0000000004fceb62: mov     rax,1e4cf810h     ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fceb6c: add     qword ptr [rax+168h],1h
  0x0000000004fceb74: mov     rbx,1e4a0540h     ;   {metadata(method data for {method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fceb7e: mov     eax,dword ptr [rbx+0dch]
  0x0000000004fceb84: add     eax,8h
  0x0000000004fceb87: mov     dword ptr [rbx+0dch],eax
  0x0000000004fceb8d: mov     rbx,1e313d60h     ;   {metadata({method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fceb97: and     eax,7ffff8h
  0x0000000004fceb9d: cmp     eax,0h
  0x0000000004fceba0: je      4fcefbbh
  0x0000000004fceba6: mov     ebx,dword ptr [rdx+10h]
  0x0000000004fceba9: shl     rbx,3h            ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcebad: mov     eax,dword ptr [rbx+0ch]  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000004fcefd2
  0x0000000004fcebb0: mov     rcx,rdi
  0x0000000004fcebb3: sub     ecx,eax
  0x0000000004fcebb5: cmp     ecx,0h
  0x0000000004fcebb8: mov     rcx,1e4a0540h     ;   {metadata(method data for {method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcebc2: mov     r9,108h
  0x0000000004fcebcc: jle     4fcebdch
  0x0000000004fcebd2: mov     r9,118h
  0x0000000004fcebdc: mov     r11,qword ptr [rcx+r9]
  0x0000000004fcebe0: lea     r11,[r11+1h]
  0x0000000004fcebe4: mov     qword ptr [rcx+r9],r11
  0x0000000004fcebe8: jnle    4fcebfbh          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcebee: mov     qword ptr [rsp+0c0h],r8
  0x0000000004fcebf6: jmp     4fcee6dh          ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcebfb: mov     dword ptr [rsp+0a8h],eax
  0x0000000004fcec02: mov     qword ptr [rsp+0b0h],rbx
  0x0000000004fcec0a: mov     qword ptr [rsp+0c0h],r8
  0x0000000004fcec12: mov     rcx,rdx
  0x0000000004fcec15: mov     r9,1e4a0540h      ;   {metadata(method data for {method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcec1f: add     qword ptr [r9+128h],1h
  0x0000000004fcec27: mov     r8,rdi
  0x0000000004fcec2a: mov     rdi,rdx
  0x0000000004fcec2d: mov     rdx,rdi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcec30: nop
  0x0000000004fcec31: nop
  0x0000000004fcec32: nop
  0x0000000004fcec33: nop
  0x0000000004fcec34: nop
  0x0000000004fcec35: nop
  0x0000000004fcec36: nop
  0x0000000004fcec37: call    4d561a0h          ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000004fcec3c: mov     r8,rax            ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcec3f: mov     rbx,1e4a0540h     ;   {metadata(method data for {method} {0x000000001e313d68} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcec49: add     qword ptr [rbx+138h],1h
  0x0000000004fcec51: mov     rbx,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fcec5b: mov     edx,dword ptr [rbx+0dch]
  0x0000000004fcec61: add     edx,8h
  0x0000000004fcec64: mov     dword ptr [rbx+0dch],edx
  0x0000000004fcec6a: mov     rbx,1e3b8aa8h     ;   {metadata({method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fcec74: and     edx,7ffff8h
  0x0000000004fcec7a: cmp     edx,0h
  0x0000000004fcec7d: je      4fcefd7h
  0x0000000004fcec83: mov     rbx,r8
  0x0000000004fcec86: mov     rdx,7c0000208h    ;   {metadata({type array char})}
  0x0000000004fcec90: movsxd  rbx,ebx
  0x0000000004fcec93: mov     rdi,rbx
  0x0000000004fcec96: cmp     rbx,0ffffffh
  0x0000000004fcec9d: jnbe    4fcefeeh
  0x0000000004fceca3: mov     rsi,17h
  0x0000000004fcecad: lea     rsi,[rsi+rbx*2]
  0x0000000004fcecb1: and     rsi,0fffffffffffffff8h
  0x0000000004fcecb5: mov     rax,qword ptr [r15+60h]
  0x0000000004fcecb9: lea     rsi,[rax+rsi]
  0x0000000004fcecbd: cmp     rsi,qword ptr [r15+70h]
  0x0000000004fcecc1: jnbe    4fcefeeh
  0x0000000004fcecc7: mov     qword ptr [r15+60h],rsi
  0x0000000004fceccb: sub     rsi,rax
  0x0000000004fcecce: mov     qword ptr [rax],1h
  0x0000000004fcecd5: mov     rcx,rdx
  0x0000000004fcecd8: shr     rcx,3h
  0x0000000004fcecdc: mov     dword ptr [rax+8h],ecx
  0x0000000004fcecdf: mov     dword ptr [rax+0ch],ebx
  0x0000000004fcece2: sub     rsi,10h
  0x0000000004fcece6: je      4fcecfdh
  0x0000000004fcecec: xor     rbx,rbx
  0x0000000004fcecef: shr     rsi,3h
  0x0000000004fcecf3: mov     qword ptr [rax+rsi*8+8h],rbx
  0x0000000004fcecf8: dec     rsi
  0x0000000004fcecfb: jne     4fcecf3h          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcecfd: mov     rdx,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fced07: add     qword ptr [rdx+108h],1h
  0x0000000004fced0f: mov     rdx,1e48ec50h     ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fced19: mov     r9d,dword ptr [rdx+0dch]
  0x0000000004fced20: add     r9d,8h
  0x0000000004fced24: mov     dword ptr [rdx+0dch],r9d
  0x0000000004fced2b: mov     rdx,1e394550h     ;   {metadata({method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fced35: and     r9d,7ffff8h
  0x0000000004fced3c: cmp     r9d,0h
  0x0000000004fced40: je      4fceff8h
  0x0000000004fced46: mov     edx,dword ptr [rsp+0a8h]
  0x0000000004fced4d: cmp     edx,r8d
  0x0000000004fced50: mov     r9,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fced5a: mov     rdi,108h
  0x0000000004fced64: jnle    4fced74h
  0x0000000004fced6a: mov     rdi,118h
  0x0000000004fced74: mov     rsi,qword ptr [r9+rdi]
  0x0000000004fced78: lea     rsi,[rsi+1h]
  0x0000000004fced7c: mov     qword ptr [r9+rdi],rsi
  0x0000000004fced80: jnle    4fced9fh          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fced86: mov     r8,1e48ec50h      ;   {metadata(method data for {method} {0x000000001e394558} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000004fced90: inc     dword ptr [r8+128h]
  0x0000000004fced97: mov     rsi,rdx
  0x0000000004fced9a: jmp     4fceda2h          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fced9f: mov     rsi,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fceda2: mov     rbx,qword ptr [rsp+0b0h]
  0x0000000004fcedaa: mov     rdx,1e579010h     ;   {metadata(method data for {method} {0x000000001e3b8ab0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000004fcedb4: add     qword ptr [rdx+118h],1h
  0x0000000004fcedbc: mov     rdx,rbx
  0x0000000004fcedbf: mov     r8d,0h
  0x0000000004fcedc5: mov     r9,rax
  0x0000000004fcedc8: mov     edi,0h
  0x0000000004fcedcd: mov     qword ptr [rsp+0c8h],rax
  0x0000000004fcedd5: lea     rcx,[r8+rsi]
  0x0000000004fcedd9: cmp     ecx,dword ptr [rdx+0ch]
  0x0000000004fceddc: jnbe    4fcf00fh
  0x0000000004fcede2: lea     rcx,[rdi+rsi]
  0x0000000004fcede6: cmp     ecx,dword ptr [r9+0ch]
  0x0000000004fcedea: jnbe    4fcf00fh
  0x0000000004fcedf0: test    esi,esi
  0x0000000004fcedf2: jl      4fcf00fh
  0x0000000004fcedf8: je      4fcee3ch
  0x0000000004fcedfe: movsxd  r8,r8d
  0x0000000004fcee01: movsxd  rdi,edi
  0x0000000004fcee04: lea     rcx,[rdx+r8*2+10h]
  0x0000000004fcee09: lea     rdx,[r9+rdi*2+10h]
  0x0000000004fcee0e: mov     r8,rsi
  0x0000000004fcee11: sub     rsp,20h
  0x0000000004fcee15: test    esp,0fh
  0x0000000004fcee1b: je      4fcee33h
  0x0000000004fcee21: sub     rsp,8h
  0x0000000004fcee25: call    4d62580h          ;   {runtime_call}
  0x0000000004fcee2a: add     rsp,8h
  0x0000000004fcee2e: jmp     4fcee38h
  0x0000000004fcee33: call    4d62580h          ;   {runtime_call}
  0x0000000004fcee38: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcee3c: mov     rax,qword ptr [rsp+0c8h]
  0x0000000004fcee44: mov     rdx,qword ptr [rsp+0b8h]
  0x0000000004fcee4c: mov     r10,rax
  0x0000000004fcee4f: shr     r10,3h
  0x0000000004fcee53: mov     dword ptr [rdx+10h],r10d
  0x0000000004fcee57: mov     r8,rdx
  0x0000000004fcee5a: shr     r8,9h
  0x0000000004fcee5e: mov     r9,10ac8000h
  0x0000000004fcee68: mov     byte ptr [r8+r9],0h  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000004fcee6d: mov     esi,dword ptr [rsp+0ach]
  0x0000000004fcee74: mov     rbx,qword ptr [rsp+0c0h]
  0x0000000004fcee7c: mov     edi,dword ptr [rdx+10h]
  0x0000000004fcee7f: shl     rdi,3h            ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000004fcee83: mov     eax,dword ptr [rdx+0ch]  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000004fcee86: mov     r8,rbx
  0x0000000004fcee89: mov     r9,1e4cf810h      ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcee93: mov     r8d,dword ptr [r8+8h]
  0x0000000004fcee97: shl     r8,3h
  0x0000000004fcee9b: cmp     r8,qword ptr [r9+180h]
  0x0000000004fceea2: jne     4fceeb1h
  0x0000000004fceea4: add     qword ptr [r9+188h],1h
  0x0000000004fceeac: jmp     4fcef17h
  0x0000000004fceeb1: cmp     r8,qword ptr [r9+190h]
  0x0000000004fceeb8: jne     4fceec7h
  0x0000000004fceeba: add     qword ptr [r9+198h],1h
  0x0000000004fceec2: jmp     4fcef17h
  0x0000000004fceec7: cmp     qword ptr [r9+180h],0h
  0x0000000004fceed2: jne     4fceeebh
  0x0000000004fceed4: mov     qword ptr [r9+180h],r8
  0x0000000004fceedb: mov     qword ptr [r9+188h],1h
  0x0000000004fceee6: jmp     4fcef17h
  0x0000000004fceeeb: cmp     qword ptr [r9+190h],0h
  0x0000000004fceef6: jne     4fcef0fh
  0x0000000004fceef8: mov     qword ptr [r9+190h],r8
  0x0000000004fceeff: mov     qword ptr [r9+198h],1h
  0x0000000004fcef0a: jmp     4fcef17h
  0x0000000004fcef0f: add     qword ptr [r9+178h],1h
  0x0000000004fcef17: mov     r8d,0h
  0x0000000004fcef1d: mov     r9,rsi
  0x0000000004fcef20: mov     rsi,rax
  0x0000000004fcef23: mov     rdx,rbx           ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000004fcef26: nop
  0x0000000004fcef27: call    4d561a0h          ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x0000000004fcef2c: mov     rdx,qword ptr [rsp+0b8h]
  0x0000000004fcef34: mov     eax,dword ptr [rdx+0ch]  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000004fcef37: add     eax,dword ptr [rsp+0ach]
  0x0000000004fcef3e: mov     dword ptr [rdx+0ch],eax  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000004fcef41: mov     rax,rdx
  0x0000000004fcef44: add     rsp,0e0h
  0x0000000004fcef4b: pop     rbp
  0x0000000004fcef4c: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcef52: ret                       ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000004fcef53: mov     rsi,rdx
  0x0000000004fcef56: mov     rdi,1e4cf810h     ;   {metadata(method data for {method} {0x000000001e3146c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000004fcef60: add     qword ptr [rdi+128h],1h
  0x0000000004fcef68: nop
  0x0000000004fcef69: nop
  0x0000000004fcef6a: nop
  0x0000000004fcef6b: nop
  0x0000000004fcef6c: nop
  0x0000000004fcef6d: nop
  0x0000000004fcef6e: nop
  0x0000000004fcef6f: call    4d561a0h          ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000004fcef74: add     rsp,0e0h
  0x0000000004fcef7b: pop     rbp
  0x0000000004fcef7c: test    dword ptr [4850100h],eax
                                                ;   {poll_return}
  0x0000000004fcef82: ret
  0x0000000004fcef83: mov     qword ptr [rsp+8h],rsi
  0x0000000004fcef88: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcef90: call    4fc0d20h          ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000004fcef95: jmp     4fcea49h
  0x0000000004fcef9a: call    4d88100h          ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000004fcef9f: mov     qword ptr [rsp+8h],rsi
  0x0000000004fcefa4: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcefac: call    4fc0d20h          ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000004fcefb1: jmp     4fceb48h
  0x0000000004fcefb6: call    4d88100h          ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000004fcefbb: mov     qword ptr [rsp+8h],rbx
  0x0000000004fcefc0: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcefc8: call    4fc0d20h          ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000004fcefcd: jmp     4fceba6h
  0x0000000004fcefd2: call    4d88100h          ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000004fcefd7: mov     qword ptr [rsp+8h],rbx
  0x0000000004fcefdc: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcefe4: call    4fc0d20h          ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000004fcefe9: jmp     4fcec83h
  0x0000000004fcefee: call    4d89500h          ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000004fceff3: jmp     4fcecfdh
  0x0000000004fceff8: mov     qword ptr [rsp+8h],rdx
  0x0000000004fceffd: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000000004fcf005: call    4fc0d20h          ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000004fcf00a: jmp     4fced46h
  0x0000000004fcf00f: call    4d56620h          ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000004fcf014: jmp     4fcee3ch
  0x0000000004fcf019: nop
  0x0000000004fcf01a: nop
  0x0000000004fcf01b: mov     rax,qword ptr [r15+2a8h]
  0x0000000004fcf022: mov     r10,0h
  0x0000000004fcf02c: mov     qword ptr [r15+2a8h],r10
  0x0000000004fcf033: mov     r10,0h
  0x0000000004fcf03d: mov     qword ptr [r15+2b0h],r10
  0x0000000004fcf044: add     rsp,0e0h
  0x0000000004fcf04b: pop     rbp
  0x0000000004fcf04c: jmp     4d88d60h          ;   {runtime_call}
  0x0000000004fcf051: hlt
  0x0000000004fcf052: hlt
  0x0000000004fcf053: hlt
  0x0000000004fcf054: hlt
  0x0000000004fcf055: hlt
  0x0000000004fcf056: hlt
  0x0000000004fcf057: hlt
  0x0000000004fcf058: hlt
  0x0000000004fcf059: hlt
  0x0000000004fcf05a: hlt
  0x0000000004fcf05b: hlt
  0x0000000004fcf05c: hlt
  0x0000000004fcf05d: hlt
  0x0000000004fcf05e: hlt
  0x0000000004fcf05f: hlt
[Stub Code]
  0x0000000004fcf060: nop                       ;   {no_reloc}
  0x0000000004fcf061: nop
  0x0000000004fcf062: nop
  0x0000000004fcf063: nop
  0x0000000004fcf064: nop
  0x0000000004fcf065: mov     rbx,0h            ;   {static_stub}
  0x0000000004fcf06f: jmp     4fcf06fh          ;   {runtime_call}
  0x0000000004fcf074: nop
  0x0000000004fcf075: mov     rbx,0h            ;   {static_stub}
  0x0000000004fcf07f: jmp     4fcf07fh          ;   {runtime_call}
  0x0000000004fcf084: nop
  0x0000000004fcf085: mov     rbx,0h            ;   {static_stub}
  0x0000000004fcf08f: jmp     4fcf08fh          ;   {runtime_call}
  0x0000000004fcf094: nop
  0x0000000004fcf095: mov     rbx,0h            ;   {static_stub}
  0x0000000004fcf09f: jmp     4fcf09fh          ;   {runtime_call}
[Exception Handler]
  0x0000000004fcf0a4: call    4d89060h          ;   {runtime_call}
  0x0000000004fcf0a9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000000004fcf0ae: sub     rsp,80h
  0x0000000004fcf0b5: mov     qword ptr [rsp+78h],rax
  0x0000000004fcf0ba: mov     qword ptr [rsp+70h],rcx
  0x0000000004fcf0bf: mov     qword ptr [rsp+68h],rdx
  0x0000000004fcf0c4: mov     qword ptr [rsp+60h],rbx
  0x0000000004fcf0c9: mov     qword ptr [rsp+50h],rbp
  0x0000000004fcf0ce: mov     qword ptr [rsp+48h],rsi
  0x0000000004fcf0d3: mov     qword ptr [rsp+40h],rdi
  0x0000000004fcf0d8: mov     qword ptr [rsp+38h],r8
  0x0000000004fcf0dd: mov     qword ptr [rsp+30h],r9
  0x0000000004fcf0e2: mov     qword ptr [rsp+28h],r10
  0x0000000004fcf0e7: mov     qword ptr [rsp+20h],r11
  0x0000000004fcf0ec: mov     qword ptr [rsp+18h],r12
  0x0000000004fcf0f1: mov     qword ptr [rsp+10h],r13
  0x0000000004fcf0f6: mov     qword ptr [rsp+8h],r14
  0x0000000004fcf0fb: mov     qword ptr [rsp],r15
  0x0000000004fcf0ff: mov     rcx,63a0b3e0h     ;   {external_word}
  0x0000000004fcf109: mov     rdx,4fcf0a9h      ;   {internal_word}
  0x0000000004fcf113: mov     r8,rsp
  0x0000000004fcf116: and     rsp,0fffffffffffffff0h
  0x0000000004fcf11a: call    636c3d60h         ;   {runtime_call}
  0x0000000004fcf11f: hlt
[Deopt Handler Code]
  0x0000000004fcf120: mov     r10,4fcf120h      ;   {section_word}
  0x0000000004fcf12a: push    r10
  0x0000000004fcf12c: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fcf131: hlt
  0x0000000004fcf132: hlt
  0x0000000004fcf133: hlt
  0x0000000004fcf134: hlt
  0x0000000004fcf135: hlt
  0x0000000004fcf136: hlt
  0x0000000004fcf137: hlt
<writer thread='15116'/>
<uncommon_trap thread='15116' reason='unstable_if' action='reinterpret' compile_id='34' compile_kind='osr' compiler='C2' level='4' stamp='0.654'>
<jvms bci='7' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='5047531' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='15116' compile_id='34' compile_kind='osr' compiler='C2' level='4' stamp='0.654'/>
[Loaded java.lang.Shutdown from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='12568'/>
<nmethod compile_id='35' compiler='C1' level='3' entry='0x0000000004fce9e0' size='3456' address='0x0000000004fce810' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1030' iicount='1030' stamp='0.656'/>
<writer thread='11292'/>
Decoding compiled method 0x0000000004fc9090:
Code:
Argument 0 is unknown.RIP: 0x4fc91c0 Code size: 0x000000f8
<writer thread='15116'/>
[Loaded java.lang.Shutdown$Lock from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<writer thread='11292'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001e6a2b38} &apos;test&apos; &apos;()V&apos; in &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000004fc91c0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x0000000004fc91c7: push    rbp
  0x0000000004fc91c8: sub     rsp,20h
  0x0000000004fc91cc: mov     r10,76b2894a8h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest&apos;)}
  0x0000000004fc91d6: mov     dword ptr [r10+68h],5f5e0ffh
  0x0000000004fc91de: lock add dword ptr [rsp],0h
  0x0000000004fc91e3: mov     r8d,5f5e0feh
  0x0000000004fc91e9: nop     dword ptr [rax+0h]
  0x0000000004fc91f0: mov     dword ptr [r10+68h],r8d
  0x0000000004fc91f4: mov     r11d,r8d
  0x0000000004fc91f7: dec     r11d
  0x0000000004fc91fa: mov     dword ptr [r10+68h],r11d
                                                ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fc91fe: mov     r11d,r8d
  0x0000000004fc9201: add     r11d,0fffffff9h   ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fc9205: mov     r9d,r8d
  0x0000000004fc9208: add     r9d,0fffffffah
  0x0000000004fc920c: mov     ecx,r8d
  0x0000000004fc920f: add     ecx,0fffffffbh
  0x0000000004fc9212: mov     ebx,r8d
  0x0000000004fc9215: add     ebx,0fffffffch
  0x0000000004fc9218: mov     edi,r8d
  0x0000000004fc921b: add     edi,0fffffffdh
  0x0000000004fc921e: mov     edx,r8d
  0x0000000004fc9221: add     edx,0fffffffeh
  0x0000000004fc9224: mov     dword ptr [r10+68h],edx
  0x0000000004fc9228: mov     dword ptr [r10+68h],edi
  0x0000000004fc922c: mov     dword ptr [r10+68h],ebx
  0x0000000004fc9230: mov     dword ptr [r10+68h],ecx
  0x0000000004fc9234: mov     dword ptr [r10+68h],r9d
  0x0000000004fc9238: mov     dword ptr [r10+68h],r11d
  0x0000000004fc923c: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fc9241: add     r8d,0fffffff8h    ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fc9245: cmp     r8d,6h
  0x0000000004fc9249: jnle    4fc91f0h          ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fc924b: cmp     r8d,0ffffffffh
  0x0000000004fc924f: jle     4fc9281h
  0x0000000004fc9251: jmp     4fc9257h
  0x0000000004fc9253: nop
  0x0000000004fc9254: mov     r8d,r9d
  0x0000000004fc9257: mov     dword ptr [r10+68h],r8d
  0x0000000004fc925b: lock add dword ptr [rsp],0h  ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fc9260: mov     r9d,r8d
  0x0000000004fc9263: dec     r9d               ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fc9266: cmp     r9d,0ffffffffh
  0x0000000004fc926a: jnle    4fc9254h          ;*putstatic x
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@11 (line 22)

  0x0000000004fc926c: mov     ebp,r8d
  0x0000000004fc926f: dec     ebp               ;*iinc
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@4 (line 21)

  0x0000000004fc9271: mov     edx,0ffffff65h
  0x0000000004fc9276: mov     dword ptr [rsp],r8d
  0x0000000004fc927a: nop
  0x0000000004fc927b: call    4d557a0h          ; OopMap{off=192}
                                                ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)
                                                ;   {runtime_call}
  0x0000000004fc9280: int3                      ;*ifle
                                                ; - me.giraffetree.java.boomjava.concurrent.problem.volatile_word.VolatileWriteTest::test@7 (line 21)

  0x0000000004fc9281: mov     r8d,r11d
  0x0000000004fc9284: jmp     4fc926ch
  0x0000000004fc9286: hlt
  0x0000000004fc9287: hlt
  0x0000000004fc9288: hlt
  0x0000000004fc9289: hlt
  0x0000000004fc928a: hlt
  0x0000000004fc928b: hlt
  0x0000000004fc928c: hlt
  0x0000000004fc928d: hlt
  0x0000000004fc928e: hlt
  0x0000000004fc928f: hlt
  0x0000000004fc9290: hlt
  0x0000000004fc9291: hlt
  0x0000000004fc9292: hlt
  0x0000000004fc9293: hlt
  0x0000000004fc9294: hlt
  0x0000000004fc9295: hlt
  0x0000000004fc9296: hlt
  0x0000000004fc9297: hlt
  0x0000000004fc9298: hlt
  0x0000000004fc9299: hlt
  0x0000000004fc929a: hlt
  0x0000000004fc929b: hlt
  0x0000000004fc929c: hlt
  0x0000000004fc929d: hlt
  0x0000000004fc929e: hlt
  0x0000000004fc929f: hlt
[Exception Handler]
[Stub Code]
  0x0000000004fc92a0: jmp     4d7fe20h          ;   {no_reloc}
[Deopt Handler Code]
  0x0000000004fc92a5: call    4fc92aah
  0x0000000004fc92aa: sub     qword ptr [rsp],5h
  0x0000000004fc92af: jmp     4d57200h          ;   {runtime_call}
  0x0000000004fc92b4: hlt
  0x0000000004fc92b5: hlt
  0x0000000004fc92b6: hlt
  0x0000000004fc92b7: hlt
<nmethod compile_id='36' compiler='C2' level='4' entry='0x0000000004fc91c0' size='816' address='0x0000000004fc9090' relocation_offset='288' insts_offset='304' stub_offset='528' scopes_data_offset='568' scopes_pcs_offset='600' dependencies_offset='808' oops_offset='552' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='5047531' iicount='1' decompiles='1' unstable_if_traps='1' stamp='0.663'/>
<writer thread='12352'/>
<destroy_vm stamp='0.664'/>
<writer thread='24564'/>
[Loaded java.net.Proxy$Type from D:\env\jdk1.8.0_161\jre\lib\rt.jar]
<tty_done stamp='0.664'/>
</tty>
<compilation_log thread='1724'>
<start_compile_thread name='C1 CompilerThread11' thread='1724' process='7280' stamp='0.192'/>
<task compile_id='2' method='java/lang/String lastIndexOf (II)I' bytes='52' count='189' backedge_count='10272' iicount='189' level='3' stamp='0.204'>
<phase name='buildIR' stamp='0.204'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='lastIndexOf' return='722' arguments='722 722' flags='1' bytes='52' iicount='189'/>
<parse method='832'  stamp='0.204'>
<bc code='184' bci='16'/>
<klass id='834' name='java/lang/Math' flags='17'/>
<method id='835' holder='834' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3118'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.204'/>
</parse>
<bc code='183' bci='48'/>
<method id='837' holder='730' name='lastIndexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='70' iicount='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.204'/>
</parse>
<phase name='optimize_blocks' stamp='0.204'>
<phase_done name='optimize_blocks' stamp='0.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.204'>
<phase_done name='rangeCheckElimination' stamp='0.204'/>
</phase>
<phase name='optimize_null_checks' stamp='0.204'>
<phase_done name='optimize_null_checks' stamp='0.204'/>
</phase>
<phase_done name='buildIR' stamp='0.204'/>
</phase>
<phase name='emit_lir' stamp='0.204'>
<phase name='lirGeneration' stamp='0.204'>
<phase_done name='lirGeneration' stamp='0.205'/>
</phase>
<phase name='linearScan' stamp='0.205'>
<phase_done name='linearScan' stamp='0.205'/>
</phase>
<phase_done name='emit_lir' stamp='0.205'/>
</phase>
<phase name='codeemit' stamp='0.205'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.230'/>
</phase>
<code_cache total_blobs='240' nmethods='3' adapters='154' free_code_cache='248820480'/>
<task_done success='1' nmsize='936' count='189' backedge_count='10272' inlined_bytes='11' stamp='0.230'/>
</task>
<task compile_id='14' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='5640' iicount='5640' level='2' stamp='0.284'>
<phase name='buildIR' stamp='0.284'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='5640'/>
<parse method='833'  stamp='0.284'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='11' compiler='C1' level='2' iicount='5938'/>
<call method='835' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.285'/>
</parse>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.285'/>
</phase>
<phase name='linearScan' stamp='0.285'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.285'/>
</phase>
<phase name='codeemit' stamp='0.285'>
<phase_done name='codeemit' stamp='0.285'/>
</phase>
<phase name='codeinstall' stamp='0.285'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.306'/>
</phase>
<code_cache total_blobs='254' nmethods='10' adapters='156' free_code_cache='248809088'/>
<task_done success='1' nmsize='432' count='5640' inlined_bytes='11' stamp='0.306'/>
</task>
<task compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1025' backedge_count='745' iicount='1026' level='3' stamp='0.394'>
<phase name='buildIR' stamp='0.394'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='1026'/>
<parse method='832'  stamp='0.394'>
<parse_done stamp='0.394'/>
</parse>
<phase name='optimize_blocks' stamp='0.394'>
<phase_done name='optimize_blocks' stamp='0.394'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.394'>
<phase_done name='rangeCheckElimination' stamp='0.394'/>
</phase>
<phase name='optimize_null_checks' stamp='0.394'>
<phase_done name='optimize_null_checks' stamp='0.394'/>
</phase>
<phase_done name='buildIR' stamp='0.394'/>
</phase>
<phase name='emit_lir' stamp='0.394'>
<phase name='lirGeneration' stamp='0.394'>
<phase_done name='lirGeneration' stamp='0.394'/>
</phase>
<phase name='linearScan' stamp='0.394'>
<phase_done name='linearScan' stamp='0.394'/>
</phase>
<phase_done name='emit_lir' stamp='0.394'/>
</phase>
<phase name='codeemit' stamp='0.394'>
<phase_done name='codeemit' stamp='0.394'/>
</phase>
<phase name='codeinstall' stamp='0.394'>
<phase_done name='codeinstall' stamp='0.432'/>
</phase>
<code_cache total_blobs='273' nmethods='20' adapters='164' free_code_cache='248800640'/>
<task_done success='1' nmsize='816' count='1054' backedge_count='795' stamp='0.432'/>
</task>
<task compile_id='21' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='260' iicount='260' level='3' stamp='0.432'>
<phase name='buildIR' stamp='0.432'>
<klass id='824' name='[B' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/util/zip/ZipCoder' flags='16'/>
<method id='833' holder='832' name='getBytes' return='824' arguments='730' flags='0' bytes='192' iicount='260'/>
<parse method='833'  stamp='0.432'>
<bc code='183' bci='1'/>
<klass id='835' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='836' holder='832' name='encoder' return='835' flags='2' bytes='35' iicount='260'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='182' bci='12'/>
<klass id='838' name='java/nio/charset/Charset' flags='1025'/>
<method id='839' holder='838' name='newEncoder' return='835' flags='1025' bytes='0' iicount='1'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='840' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='843' holder='835' name='onMalformedInput' return='835' arguments='840' flags='17' bytes='26' iicount='47'/>
<call method='843' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='182' bci='21'/>
<type id='724' name='void'/>
<method id='845' holder='835' name='implOnMalformedInput' return='724' arguments='840' flags='4' bytes='1' iicount='47'/>
<call method='845' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='835' x='845'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='24'/>
<method id='847' holder='835' name='onUnmappableCharacter' return='835' arguments='840' flags='17' bytes='26' iicount='47'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='182' bci='21'/>
<method id='849' holder='835' name='implOnUnmappableCharacter' return='724' arguments='840' flags='4' bytes='1' iicount='47'/>
<call method='849' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='835' x='849'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='4'/>
<method id='851' holder='835' name='reset' return='835' flags='17' bytes='11' iicount='260'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='182' bci='1'/>
<method id='853' holder='835' name='implReset' return='724' flags='4' bytes='1' iicount='260'/>
<call method='853' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='835' x='853'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='9'/>
<klass id='821' name='[C' flags='1041'/>
<method id='855' holder='730' name='toCharArray' return='821' flags='1' bytes='25' iicount='589'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='184' bci='20'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='857' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='17'/>
<type id='718' name='float'/>
<method id='859' holder='835' name='maxBytesPerChar' return='718' flags='17' bytes='5' iicount='314'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<parse_done stamp='0.432'/>
</parse>
<bc code='185' bci='62'/>
<klass id='861' name='sun/nio/cs/ArrayEncoder' flags='1537'/>
<method id='862' holder='861' name='encode' return='722' arguments='821 722 722 824' flags='1025' bytes='0' iicount='1'/>
<call method='862' instr='invokeinterface'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='81'/>
<klass id='863' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='865' holder='863' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='89'/>
<klass id='867' name='java/util/Arrays' flags='1'/>
<method id='868' holder='867' name='copyOf' return='824' arguments='824 722' flags='9' bytes='19' iicount='436'/>
<call method='868' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='184' bci='11'/>
<klass id='870' name='java/lang/Math' flags='17'/>
<method id='871' holder='870' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3207'/>
<call method='871' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<parse_done stamp='0.504'/>
</parse>
<bc code='184' bci='14'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.504'/>
</parse>
<bc code='184' bci='95'/>
<klass id='873' name='java/nio/ByteBuffer' flags='1025'/>
<method id='874' holder='873' name='wrap' return='873' arguments='824' flags='9' bytes='8' iicount='2'/>
<call method='874' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='874'>
<bc code='184' bci='4'/>
<method id='876' holder='873' name='wrap' return='873' arguments='824 722 722' flags='9' bytes='20' iicount='2'/>
<call method='876' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='876'>
<bc code='183' bci='7'/>
<klass id='878' name='java/nio/HeapByteBuffer' flags='0'/>
<method id='879' holder='878' name='&lt;init&gt;' return='724' arguments='824 722 722' flags='0' bytes='14' iicount='2'/>
<call method='879' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='879'>
<bc code='183' bci='10'/>
<method id='881' holder='873' name='&lt;init&gt;' return='724' arguments='722 722 722 722 824 722' flags='0' bytes='45' iicount='18'/>
<call method='881' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.523'/>
</parse>
<bc code='183' bci='16'/>
<klass id='883' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='884' holder='883' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='884' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.523'/>
</parse>
<parse_done stamp='0.523'/>
</parse>
<bc code='184' bci='101'/>
<klass id='885' name='java/nio/CharBuffer' flags='1025'/>
<method id='886' holder='885' name='wrap' return='885' arguments='821' flags='9' bytes='8' iicount='1'/>
<call method='886' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='886'>
<bc code='184' bci='4'/>
<method id='888' holder='885' name='wrap' return='885' arguments='821 722 722' flags='9' bytes='20' iicount='8'/>
<call method='888' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='888'>
<bc code='183' bci='7'/>
<klass id='890' name='java/nio/HeapCharBuffer' flags='0'/>
<method id='891' holder='890' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='0' bytes='14' iicount='8'/>
<call method='891' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='891'>
<bc code='183' bci='10'/>
<method id='893' holder='885' name='&lt;init&gt;' return='724' arguments='722 722 722 722 821 722' flags='0' bytes='22' iicount='14'/>
<call method='893' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='893'>
<bc code='183' bci='6'/>
<klass id='808' name='java/nio/Buffer' flags='1025'/>
<method id='895' holder='808' name='&lt;init&gt;' return='724' arguments='722 722 722 722' flags='0' bytes='121' iicount='38'/>
<call method='895' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.535'/>
</parse>
<parse_done stamp='0.535'/>
</parse>
<bc code='183' bci='16'/>
<call method='884' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.535'/>
</parse>
<parse_done stamp='0.535'/>
</parse>
<bc code='182' bci='112'/>
<klass id='897' name='java/nio/charset/CoderResult' flags='1'/>
<type id='716' name='boolean'/>
<method id='898' holder='835' name='encode' return='897' arguments='885 873 716' flags='17' bytes='285' iicount='1'/>
<call method='898' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='119'/>
<method id='900' holder='897' name='isUnderflow' return='716' flags='1' bytes='13' iicount='42'/>
<call method='900' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='897'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='897'/>
<parse method='900'>
<parse_done stamp='0.535'/>
</parse>
<bc code='182' bci='131'/>
<method id='902' holder='897' name='toString' return='730' flags='1' bytes='52' iicount='1'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='897'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='897'/>
<bc code='183' bci='134'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='141'/>
<method id='904' holder='835' name='flush' return='897' arguments='873' flags='17' bytes='49' iicount='1'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='148'/>
<call method='900' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='897'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='897'/>
<parse method='900'>
<parse_done stamp='0.565'/>
</parse>
<bc code='182' bci='160'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='897'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='897'/>
<bc code='183' bci='163'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='169'/>
<method id='906' holder='808' name='position' return='722' flags='17' bytes='5' iicount='110'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.565'/>
</parse>
<bc code='182' bci='185'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.565'/>
</parse>
<bc code='184' bci='188'/>
<call method='868' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='184' bci='11'/>
<call method='871' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<parse_done stamp='0.565'/>
</parse>
<bc code='184' bci='14'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.565'/>
</parse>
<parse_done stamp='0.565'/>
</parse>
<phase name='optimize_blocks' stamp='0.565'>
<phase_done name='optimize_blocks' stamp='0.565'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.565'>
<phase_done name='rangeCheckElimination' stamp='0.565'/>
</phase>
<phase name='optimize_null_checks' stamp='0.565'>
<phase_done name='optimize_null_checks' stamp='0.565'/>
</phase>
<phase_done name='buildIR' stamp='0.565'/>
</phase>
<phase name='emit_lir' stamp='0.565'>
<phase name='lirGeneration' stamp='0.565'>
<phase_done name='lirGeneration' stamp='0.565'/>
</phase>
<phase name='linearScan' stamp='0.565'>
<phase_done name='linearScan' stamp='0.566'/>
</phase>
<phase_done name='emit_lir' stamp='0.566'/>
</phase>
<phase name='codeemit' stamp='0.566'>
<phase_done name='codeemit' stamp='0.566'/>
</phase>
<phase name='codeinstall' stamp='0.566'>
<dependency type='leaf_type' ctxk='897'/>
<dependency type='unique_concrete_method' ctxk='835' x='845'/>
<dependency type='unique_concrete_method' ctxk='835' x='849'/>
<dependency type='unique_concrete_method' ctxk='835' x='853'/>
<phase_done name='codeinstall' stamp='0.623'/>
</phase>
<code_cache total_blobs='289' nmethods='32' adapters='168' free_code_cache='248759680'/>
<task_done success='1' nmsize='8888' count='260' inlined_bytes='333' stamp='0.624'/>
</task>
</compilation_log>
<compilation_log thread='25016'>
<start_compile_thread name='C1 CompilerThread9' thread='25016' process='7280' stamp='0.192'/>
<task compile_id='10' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='5927' iicount='5927' level='2' stamp='0.204'>
<phase name='buildIR' stamp='0.204'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='5927'/>
<parse method='833'  stamp='0.204'>
<parse_done stamp='0.204'/>
</parse>
<phase name='optimize_blocks' stamp='0.204'>
<phase_done name='optimize_blocks' stamp='0.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.204'>
<phase_done name='rangeCheckElimination' stamp='0.204'/>
</phase>
<phase name='optimize_null_checks' stamp='0.204'>
<phase_done name='optimize_null_checks' stamp='0.204'/>
</phase>
<phase_done name='buildIR' stamp='0.204'/>
</phase>
<phase name='emit_lir' stamp='0.204'>
<phase name='lirGeneration' stamp='0.204'>
<phase_done name='lirGeneration' stamp='0.205'/>
</phase>
<phase name='linearScan' stamp='0.205'>
<phase_done name='linearScan' stamp='0.205'/>
</phase>
<phase_done name='emit_lir' stamp='0.205'/>
</phase>
<phase name='codeemit' stamp='0.205'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.241'/>
</phase>
<code_cache total_blobs='242' nmethods='4' adapters='154' free_code_cache='248817536'/>
<task_done success='1' nmsize='1392' count='5927' stamp='0.241'/>
</task>
<task compile_id='5' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='792' iicount='792' level='3' stamp='0.251'>
<phase name='buildIR' stamp='0.251'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='792'/>
<parse method='832'  stamp='0.251'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='993'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.251'/>
</parse>
<phase name='optimize_blocks' stamp='0.251'>
<phase_done name='optimize_blocks' stamp='0.251'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.251'>
<phase_done name='rangeCheckElimination' stamp='0.251'/>
</phase>
<phase name='optimize_null_checks' stamp='0.251'>
<phase_done name='optimize_null_checks' stamp='0.251'/>
</phase>
<phase_done name='buildIR' stamp='0.251'/>
</phase>
<phase name='emit_lir' stamp='0.251'>
<phase name='lirGeneration' stamp='0.251'>
<phase_done name='lirGeneration' stamp='0.251'/>
</phase>
<phase name='linearScan' stamp='0.251'>
<phase_done name='linearScan' stamp='0.251'/>
</phase>
<phase_done name='emit_lir' stamp='0.251'/>
</phase>
<phase name='codeemit' stamp='0.251'>
<phase_done name='codeemit' stamp='0.251'/>
</phase>
<phase name='codeinstall' stamp='0.251'>
<phase_done name='codeinstall' stamp='0.273'/>
</phase>
<code_cache total_blobs='247' nmethods='7' adapters='156' free_code_cache='248824512'/>
<task_done success='1' nmsize='392' count='792' stamp='0.273'/>
</task>
<task compile_id='15' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='129' iicount='129' level='1' stamp='0.284'>
<phase name='buildIR' stamp='0.284'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/ThreadLocal' flags='1'/>
<method id='833' holder='832' name='access$400' return='722' arguments='832' flags='4104' bytes='5' iicount='129'/>
<parse method='833'  stamp='0.285'>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.285'/>
</phase>
<phase name='linearScan' stamp='0.285'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.285'/>
</phase>
<phase name='codeemit' stamp='0.285'>
<phase_done name='codeemit' stamp='0.285'/>
</phase>
<phase name='codeinstall' stamp='0.285'>
<phase_done name='codeinstall' stamp='0.320'/>
</phase>
<code_cache total_blobs='258' nmethods='11' adapters='157' free_code_cache='248807232'/>
<task_done success='1' nmsize='240' count='132' stamp='0.320'/>
</task>
<task compile_id='25' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='261' backedge_count='10641' iicount='261' level='3' stamp='0.394'>
<phase name='buildIR' stamp='0.394'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='833' holder='832' name='encode' return='722' arguments='821 722 722 824' flags='1' bytes='359' iicount='261'/>
<parse method='833'  stamp='0.394'>
<bc code='184' bci='14'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3183'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.394'/>
</parse>
<bc code='184' bci='139'/>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='838' holder='810' name='isSurrogate' return='716' arguments='717' flags='9' bytes='18' iicount='22'/>
<call method='838' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<parse_done stamp='0.395'/>
</parse>
<bc code='183' bci='157'/>
<type id='724' name='void'/>
<klass id='840' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='841' holder='840' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='842' holder='840' name='parse' return='722' arguments='717 821 722 722' unloaded='1'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='844' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='843' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='845' holder='843' name='malformedInputAction' return='844' flags='1' bytes='5' iicount='1'/>
<call method='845' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<phase name='optimize_blocks' stamp='0.432'>
<phase_done name='optimize_blocks' stamp='0.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.432'>
<phase_done name='rangeCheckElimination' stamp='0.432'/>
</phase>
<phase name='optimize_null_checks' stamp='0.432'>
<phase_done name='optimize_null_checks' stamp='0.432'/>
</phase>
<phase_done name='buildIR' stamp='0.432'/>
</phase>
<phase name='emit_lir' stamp='0.432'>
<phase name='lirGeneration' stamp='0.432'>
<phase_done name='lirGeneration' stamp='0.432'/>
</phase>
<phase name='linearScan' stamp='0.432'>
<phase_done name='linearScan' stamp='0.433'/>
</phase>
<phase_done name='emit_lir' stamp='0.433'/>
</phase>
<phase name='codeemit' stamp='0.433'>
<phase_done name='codeemit' stamp='0.433'/>
</phase>
<phase name='codeinstall' stamp='0.433'>
<phase_done name='codeinstall' stamp='0.465'/>
</phase>
<code_cache total_blobs='280' nmethods='22' adapters='165' free_code_cache='248768512'/>
<task_done success='1' nmsize='2840' count='261' backedge_count='10641' inlined_bytes='34' stamp='0.465'/>
</task>
<task compile_id='30' method='java/lang/Math min (II)I' bytes='11' count='3207' iicount='3207' level='3' stamp='0.482'>
<phase name='buildIR' stamp='0.504'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3207'/>
<parse method='833'  stamp='0.504'>
<parse_done stamp='0.504'/>
</parse>
<phase name='optimize_blocks' stamp='0.504'>
<phase_done name='optimize_blocks' stamp='0.504'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.504'>
<phase_done name='rangeCheckElimination' stamp='0.504'/>
</phase>
<phase name='optimize_null_checks' stamp='0.504'>
<phase_done name='optimize_null_checks' stamp='0.504'/>
</phase>
<phase_done name='buildIR' stamp='0.504'/>
</phase>
<phase name='emit_lir' stamp='0.504'>
<phase name='lirGeneration' stamp='0.504'>
<phase_done name='lirGeneration' stamp='0.504'/>
</phase>
<phase name='linearScan' stamp='0.504'>
<phase_done name='linearScan' stamp='0.504'/>
</phase>
<phase_done name='emit_lir' stamp='0.504'/>
</phase>
<phase name='codeemit' stamp='0.504'>
<phase_done name='codeemit' stamp='0.504'/>
</phase>
<phase name='codeinstall' stamp='0.504'>
<phase_done name='codeinstall' stamp='0.513'/>
</phase>
<code_cache total_blobs='280' nmethods='26' adapters='165' free_code_cache='248785152'/>
<task_done success='1' nmsize='400' count='3207' stamp='0.513'/>
</task>
<task compile_id='33' compile_kind='osr' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='62076' iicount='1' osr_bci='3' level='3' stamp='0.523'>
<phase name='buildIR' stamp='0.523'>
<type id='724' name='void'/>
<klass id='832' name='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest' flags='1'/>
<method id='833' holder='832' name='test' return='724' flags='10' bytes='18' iicount='1'/>
<parse method='833'  stamp='0.523'>
<parse_done stamp='0.523'/>
</parse>
<phase name='optimize_blocks' stamp='0.523'>
<phase_done name='optimize_blocks' stamp='0.523'/>
</phase>
<phase name='optimize_null_checks' stamp='0.523'>
<phase_done name='optimize_null_checks' stamp='0.523'/>
</phase>
<phase_done name='buildIR' stamp='0.523'/>
</phase>
<phase name='emit_lir' stamp='0.523'>
<phase name='lirGeneration' stamp='0.523'>
<phase_done name='lirGeneration' stamp='0.523'/>
</phase>
<phase name='linearScan' stamp='0.523'>
<phase_done name='linearScan' stamp='0.523'/>
</phase>
<phase_done name='emit_lir' stamp='0.523'/>
</phase>
<phase name='codeemit' stamp='0.523'>
<phase_done name='codeemit' stamp='0.523'/>
</phase>
<phase name='codeinstall' stamp='0.523'>
<phase_done name='codeinstall' stamp='0.535'/>
</phase>
<code_cache total_blobs='283' nmethods='28' adapters='165' free_code_cache='248777472'/>
<task_done success='1' nmsize='528' count='1' backedge_count='897223' stamp='0.535'/>
</task>
</compilation_log>
<compilation_log thread='12568'>
<start_compile_thread name='C1 CompilerThread8' thread='12568' process='7280' stamp='0.192'/>
<task compile_id='11' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='5927' iicount='5927' level='2' stamp='0.204'>
<phase name='buildIR' stamp='0.204'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='5927'/>
<parse method='833'  stamp='0.204'>
<parse_done stamp='0.204'/>
</parse>
<phase name='optimize_blocks' stamp='0.204'>
<phase_done name='optimize_blocks' stamp='0.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.204'>
<phase_done name='rangeCheckElimination' stamp='0.204'/>
</phase>
<phase name='optimize_null_checks' stamp='0.204'>
<phase_done name='optimize_null_checks' stamp='0.204'/>
</phase>
<phase_done name='buildIR' stamp='0.204'/>
</phase>
<phase name='emit_lir' stamp='0.204'>
<phase name='lirGeneration' stamp='0.204'>
<phase_done name='lirGeneration' stamp='0.204'/>
</phase>
<phase name='linearScan' stamp='0.204'>
<phase_done name='linearScan' stamp='0.204'/>
</phase>
<phase_done name='emit_lir' stamp='0.204'/>
</phase>
<phase name='codeemit' stamp='0.204'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.216'/>
</phase>
<code_cache total_blobs='237' nmethods='2' adapters='154' free_code_cache='248828736'/>
<task_done success='1' nmsize='400' count='5927' stamp='0.216'/>
</task>
<task compile_id='12' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1793' iicount='1793' level='3' stamp='0.251'>
<phase name='buildIR' stamp='0.251'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='1793'/>
<parse method='833'  stamp='0.251'>
<bc code='182' bci='9'/>
<method id='835' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='162'/>
<call method='835' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.260'/>
</parse>
<phase name='optimize_blocks' stamp='0.260'>
<phase_done name='optimize_blocks' stamp='0.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.260'>
<phase_done name='rangeCheckElimination' stamp='0.260'/>
</phase>
<phase name='optimize_null_checks' stamp='0.260'>
<phase_done name='optimize_null_checks' stamp='0.260'/>
</phase>
<phase_done name='buildIR' stamp='0.260'/>
</phase>
<phase name='emit_lir' stamp='0.260'>
<phase name='lirGeneration' stamp='0.260'>
<phase_done name='lirGeneration' stamp='0.260'/>
</phase>
<phase name='linearScan' stamp='0.260'>
<phase_done name='linearScan' stamp='0.260'/>
</phase>
<phase_done name='emit_lir' stamp='0.260'/>
</phase>
<phase name='codeemit' stamp='0.260'>
<phase_done name='codeemit' stamp='0.260'/>
</phase>
<phase name='codeinstall' stamp='0.260'>
<phase_done name='codeinstall' stamp='0.284'/>
</phase>
<code_cache total_blobs='250' nmethods='8' adapters='156' free_code_cache='248811904'/>
<task_done success='1' nmsize='584' count='1795' stamp='0.284'/>
</task>
<task compile_id='18' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='513' iicount='513' level='3' stamp='0.394'>
<phase name='buildIR' stamp='0.394'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='513'/>
<parse method='833'  stamp='0.394'>
<bc code='184' bci='11'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3169'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.394'/>
</parse>
<bc code='184' bci='14'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='838' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.394'/>
</parse>
<phase name='optimize_blocks' stamp='0.394'>
<phase_done name='optimize_blocks' stamp='0.394'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.394'>
<phase_done name='rangeCheckElimination' stamp='0.394'/>
</phase>
<phase name='optimize_null_checks' stamp='0.394'>
<phase_done name='optimize_null_checks' stamp='0.394'/>
</phase>
<phase_done name='buildIR' stamp='0.394'/>
</phase>
<phase name='emit_lir' stamp='0.394'>
<phase name='lirGeneration' stamp='0.394'>
<phase_done name='lirGeneration' stamp='0.394'/>
</phase>
<phase name='linearScan' stamp='0.394'>
<phase_done name='linearScan' stamp='0.394'/>
</phase>
<phase_done name='emit_lir' stamp='0.394'/>
</phase>
<phase name='codeemit' stamp='0.394'>
<phase_done name='codeemit' stamp='0.394'/>
</phase>
<phase name='codeinstall' stamp='0.394'>
<phase_done name='codeinstall' stamp='0.407'/>
</phase>
<code_cache total_blobs='269' nmethods='18' adapters='163' free_code_cache='248806528'/>
<task_done success='1' nmsize='808' count='514' inlined_bytes='11' stamp='0.407'/>
</task>
<task compile_id='22' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='260' iicount='260' level='3' stamp='0.432'>
<phase name='buildIR' stamp='0.432'>
<klass id='833' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<klass id='832' name='java/util/zip/ZipCoder' flags='16'/>
<method id='834' holder='832' name='encoder' return='833' flags='2' bytes='35' iicount='260'/>
<parse method='834'  stamp='0.432'>
<bc code='182' bci='12'/>
<klass id='836' name='java/nio/charset/Charset' flags='1025'/>
<method id='837' holder='836' name='newEncoder' return='833' flags='1025' bytes='0' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='838' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='841' holder='833' name='onMalformedInput' return='833' arguments='838' flags='17' bytes='26' iicount='47'/>
<call method='841' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='182' bci='21'/>
<type id='724' name='void'/>
<method id='843' holder='833' name='implOnMalformedInput' return='724' arguments='838' flags='4' bytes='1' iicount='47'/>
<call method='843' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='833' x='843'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='24'/>
<method id='845' holder='833' name='onUnmappableCharacter' return='833' arguments='838' flags='17' bytes='26' iicount='47'/>
<call method='845' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='182' bci='21'/>
<method id='847' holder='833' name='implOnUnmappableCharacter' return='724' arguments='838' flags='4' bytes='1' iicount='47'/>
<call method='847' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<parse_done stamp='0.432'/>
</parse>
<phase name='optimize_blocks' stamp='0.432'>
<phase_done name='optimize_blocks' stamp='0.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.432'>
<phase_done name='rangeCheckElimination' stamp='0.432'/>
</phase>
<phase name='optimize_null_checks' stamp='0.432'>
<phase_done name='optimize_null_checks' stamp='0.432'/>
</phase>
<phase_done name='buildIR' stamp='0.432'/>
</phase>
<phase name='emit_lir' stamp='0.432'>
<phase name='lirGeneration' stamp='0.432'>
<phase_done name='lirGeneration' stamp='0.432'/>
</phase>
<phase name='linearScan' stamp='0.432'>
<phase_done name='linearScan' stamp='0.432'/>
</phase>
<phase_done name='emit_lir' stamp='0.432'/>
</phase>
<phase name='codeemit' stamp='0.432'>
<phase_done name='codeemit' stamp='0.432'/>
</phase>
<phase name='codeinstall' stamp='0.432'>
<dependency type='unique_concrete_method' ctxk='833' x='843'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<phase_done name='codeinstall' stamp='0.449'/>
</phase>
<code_cache total_blobs='277' nmethods='21' adapters='165' free_code_cache='248786432'/>
<task_done success='1' nmsize='1672' count='260' inlined_bytes='54' stamp='0.449'/>
</task>
<task compile_id='28' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='259' iicount='259' level='1' stamp='0.495'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='259' stamp='0.495'/>
</task>
<task compile_id='24' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='260' iicount='260' level='3' stamp='0.495'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='260' stamp='0.495'/>
</task>
<task compile_id='23' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='260' iicount='260' level='3' stamp='0.504'>
<phase name='buildIR' stamp='0.504'>
<klass id='832' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='833' holder='832' name='reset' return='832' flags='17' bytes='11' iicount='260'/>
<parse method='833'  stamp='0.504'>
<bc code='182' bci='1'/>
<type id='724' name='void'/>
<method id='835' holder='832' name='implReset' return='724' flags='4' bytes='1' iicount='260'/>
<call method='835' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.504'/>
</parse>
<parse_done stamp='0.504'/>
</parse>
<phase name='optimize_blocks' stamp='0.504'>
<phase_done name='optimize_blocks' stamp='0.504'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.504'>
<phase_done name='rangeCheckElimination' stamp='0.504'/>
</phase>
<phase name='optimize_null_checks' stamp='0.504'>
<phase_done name='optimize_null_checks' stamp='0.504'/>
</phase>
<phase_done name='buildIR' stamp='0.504'/>
</phase>
<phase name='emit_lir' stamp='0.504'>
<phase name='lirGeneration' stamp='0.504'>
<phase_done name='lirGeneration' stamp='0.504'/>
</phase>
<phase name='linearScan' stamp='0.504'>
<phase_done name='linearScan' stamp='0.504'/>
</phase>
<phase_done name='emit_lir' stamp='0.504'/>
</phase>
<phase name='codeemit' stamp='0.504'>
<phase_done name='codeemit' stamp='0.504'/>
</phase>
<phase name='codeinstall' stamp='0.504'>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<phase_done name='codeinstall' stamp='0.523'/>
</phase>
<code_cache total_blobs='281' nmethods='27' adapters='165' free_code_cache='248784064'/>
<task_done success='1' nmsize='560' count='260' inlined_bytes='1' stamp='0.523'/>
</task>
<task compile_id='35' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1025' iicount='1025' level='3' stamp='0.554'>
<phase name='buildIR' stamp='0.565'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='1025'/>
<parse method='832'  stamp='0.565'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='17' compiler='C2' level='4' iicount='29062'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.624'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='16' compiler='C2' level='4' iicount='12300'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='454'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' compile_id='18' compiler='C1' level='3' iicount='518'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='30' compiler='C1' level='3' iicount='3234'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.624'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.624'/>
</parse>
<parse_done stamp='0.624'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='1102'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.624'/>
</parse>
<phase name='optimize_blocks' stamp='0.624'>
<phase_done name='optimize_blocks' stamp='0.624'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.624'>
<phase_done name='rangeCheckElimination' stamp='0.624'/>
</phase>
<phase name='optimize_null_checks' stamp='0.624'>
<phase_done name='optimize_null_checks' stamp='0.624'/>
</phase>
<phase_done name='buildIR' stamp='0.624'/>
</phase>
<phase name='emit_lir' stamp='0.624'>
<phase name='lirGeneration' stamp='0.624'>
<phase_done name='lirGeneration' stamp='0.624'/>
</phase>
<phase name='linearScan' stamp='0.624'>
<phase_done name='linearScan' stamp='0.624'/>
</phase>
<phase_done name='emit_lir' stamp='0.624'/>
</phase>
<phase name='codeemit' stamp='0.624'>
<phase_done name='codeemit' stamp='0.624'/>
</phase>
<phase name='codeinstall' stamp='0.624'>
<phase_done name='codeinstall' stamp='0.656'/>
</phase>
<code_cache total_blobs='296' nmethods='34' adapters='171' free_code_cache='248742016'/>
<task_done success='1' nmsize='1880' count='1030' inlined_bytes='63' stamp='0.656'/>
</task>
</compilation_log>
<compilation_log thread='1628'>
<start_compile_thread name='C1 CompilerThread10' thread='1628' process='7280' stamp='0.192'/>
<task compile_id='4' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='3492' iicount='3492' level='3' stamp='0.204'>
<phase name='buildIR' stamp='0.204'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='sun/nio/cs/ext/DoubleByte$Encoder' flags='9'/>
<method id='833' holder='832' name='encodeChar' return='722' arguments='717' flags='1' bytes='21' iicount='3492'/>
<parse method='833'  stamp='0.204'>
<parse_done stamp='0.204'/>
</parse>
<phase name='optimize_blocks' stamp='0.204'>
<phase_done name='optimize_blocks' stamp='0.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.204'>
<phase_done name='rangeCheckElimination' stamp='0.204'/>
</phase>
<phase name='optimize_null_checks' stamp='0.204'>
<phase_done name='optimize_null_checks' stamp='0.204'/>
</phase>
<phase_done name='buildIR' stamp='0.204'/>
</phase>
<phase name='emit_lir' stamp='0.204'>
<phase name='lirGeneration' stamp='0.204'>
<phase_done name='lirGeneration' stamp='0.204'/>
</phase>
<phase name='linearScan' stamp='0.204'>
<phase_done name='linearScan' stamp='0.204'/>
</phase>
<phase_done name='emit_lir' stamp='0.204'/>
</phase>
<phase name='codeemit' stamp='0.204'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.251'/>
</phase>
<code_cache total_blobs='242' nmethods='5' adapters='154' free_code_cache='248827520'/>
<task_done success='1' nmsize='432' count='3503' stamp='0.251'/>
</task>
<task compile_id='7' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='683' iicount='683' level='3' stamp='0.251'>
<phase name='buildIR' stamp='0.251'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='683'/>
<parse method='832'  stamp='0.251'>
<parse_done stamp='0.251'/>
</parse>
<phase name='optimize_blocks' stamp='0.251'>
<phase_done name='optimize_blocks' stamp='0.251'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.251'>
<phase_done name='rangeCheckElimination' stamp='0.251'/>
</phase>
<phase name='optimize_null_checks' stamp='0.251'>
<phase_done name='optimize_null_checks' stamp='0.251'/>
</phase>
<phase_done name='buildIR' stamp='0.251'/>
</phase>
<phase name='emit_lir' stamp='0.251'>
<phase name='lirGeneration' stamp='0.251'>
<phase_done name='lirGeneration' stamp='0.251'/>
</phase>
<phase name='linearScan' stamp='0.251'>
<phase_done name='linearScan' stamp='0.251'/>
</phase>
<phase_done name='emit_lir' stamp='0.251'/>
</phase>
<phase name='codeemit' stamp='0.251'>
<phase_done name='codeemit' stamp='0.251'/>
</phase>
<phase name='codeinstall' stamp='0.251'>
<phase_done name='codeinstall' stamp='0.260'/>
</phase>
<code_cache total_blobs='244' nmethods='6' adapters='155' free_code_cache='248826176'/>
<task_done success='1' nmsize='336' count='686' stamp='0.260'/>
</task>
<task compile_id='13' method='java/lang/Character toLowerCase (I)I' bytes='9' count='5632' iicount='5632' level='2' stamp='0.284'>
<phase name='buildIR' stamp='0.284'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='5632'/>
<parse method='832'  stamp='0.284'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='10' compiler='C1' level='2' iicount='5938'/>
<call method='836' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='838' holder='835' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.285'/>
</phase>
<phase name='linearScan' stamp='0.285'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.285'/>
</phase>
<phase name='codeemit' stamp='0.285'>
<phase_done name='codeemit' stamp='0.285'/>
</phase>
<phase name='codeinstall' stamp='0.285'>
<phase_done name='codeinstall' stamp='0.295'/>
</phase>
<code_cache total_blobs='252' nmethods='9' adapters='156' free_code_cache='248810688'/>
<task_done success='1' nmsize='376' count='5640' stamp='0.295'/>
</task>
<task compile_id='20' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='260' iicount='260' level='3' stamp='0.394'>
<phase name='buildIR' stamp='0.394'>
<type id='724' name='void'/>
<klass id='832' name='java/util/zip/ZipFile' flags='1'/>
<method id='833' holder='832' name='ensureOpen' return='724' flags='2' bytes='37' iicount='260'/>
<parse method='833'  stamp='0.394'>
<bc code='183' bci='13'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='835' name='java/lang/IllegalStateException' unloaded='1'/>
<method id='837' holder='835' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.394'/>
</parse>
<phase name='optimize_blocks' stamp='0.394'>
<phase_done name='optimize_blocks' stamp='0.394'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.394'>
<phase_done name='rangeCheckElimination' stamp='0.394'/>
</phase>
<phase name='optimize_null_checks' stamp='0.394'>
<phase_done name='optimize_null_checks' stamp='0.394'/>
</phase>
<phase_done name='buildIR' stamp='0.394'/>
</phase>
<phase name='emit_lir' stamp='0.394'>
<phase name='lirGeneration' stamp='0.394'>
<phase_done name='lirGeneration' stamp='0.395'/>
</phase>
<phase name='linearScan' stamp='0.395'>
<phase_done name='linearScan' stamp='0.395'/>
</phase>
<phase_done name='emit_lir' stamp='0.395'/>
</phase>
<phase name='codeemit' stamp='0.395'>
<phase_done name='codeemit' stamp='0.395'/>
</phase>
<phase name='codeinstall' stamp='0.395'>
<phase_done name='codeinstall' stamp='0.420'/>
</phase>
<code_cache total_blobs='271' nmethods='19' adapters='163' free_code_cache='248803008'/>
<task_done success='1' nmsize='728' count='260' stamp='0.420'/>
</task>
<task compile_id='26' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='241' backedge_count='12661' iicount='241' level='3' stamp='0.432'>
<phase name='buildIR' stamp='0.432'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='241'/>
<parse method='832'  stamp='0.432'>
<parse_done stamp='0.432'/>
</parse>
<phase name='optimize_blocks' stamp='0.432'>
<phase_done name='optimize_blocks' stamp='0.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.432'>
<phase_done name='rangeCheckElimination' stamp='0.432'/>
</phase>
<phase name='optimize_null_checks' stamp='0.432'>
<phase_done name='optimize_null_checks' stamp='0.432'/>
</phase>
<phase_done name='buildIR' stamp='0.432'/>
</phase>
<phase name='emit_lir' stamp='0.432'>
<phase name='lirGeneration' stamp='0.432'>
<phase_done name='lirGeneration' stamp='0.432'/>
</phase>
<phase name='linearScan' stamp='0.432'>
<phase_done name='linearScan' stamp='0.432'/>
</phase>
<phase_done name='emit_lir' stamp='0.432'/>
</phase>
<phase name='codeemit' stamp='0.432'>
<phase_done name='codeemit' stamp='0.432'/>
</phase>
<phase name='codeinstall' stamp='0.432'>
<phase_done name='codeinstall' stamp='0.482'/>
</phase>
<code_cache total_blobs='281' nmethods='23' adapters='165' free_code_cache='248765248'/>
<task_done success='1' nmsize='1616' count='241' backedge_count='12661' stamp='0.482'/>
</task>
<task compile_id='37' method='java/lang/String indexOf (I)I' bytes='7' count='934' iicount='934' level='3' stamp='0.624'>
<phase name='buildIR' stamp='0.624'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='934'/>
<parse method='832'  stamp='0.624'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='27' compiler='C2' level='4' iicount='841'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.624'/>
</parse>
<phase name='optimize_blocks' stamp='0.624'>
<phase_done name='optimize_blocks' stamp='0.624'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.624'>
<phase_done name='rangeCheckElimination' stamp='0.624'/>
</phase>
<phase name='optimize_null_checks' stamp='0.624'>
<phase_done name='optimize_null_checks' stamp='0.624'/>
</phase>
<phase_done name='buildIR' stamp='0.624'/>
</phase>
<phase name='emit_lir' stamp='0.624'>
<phase name='lirGeneration' stamp='0.624'>
<phase_done name='lirGeneration' stamp='0.624'/>
</phase>
<phase name='linearScan' stamp='0.624'>
<phase_done name='linearScan' stamp='0.624'/>
</phase>
<phase_done name='emit_lir' stamp='0.624'/>
</phase>
<phase name='codeemit' stamp='0.624'>
<phase_done name='codeemit' stamp='0.624'/>
</phase>
<phase name='codeinstall' stamp='0.624'>
<phase_done name='codeinstall' stamp='0.633'/>
</phase>
<code_cache total_blobs='294' nmethods='33' adapters='171' free_code_cache='248751680'/>
<task_done success='1' nmsize='520' count='934' stamp='0.633'/>
</task>
</compilation_log>
<compilation_log thread='11292'>
<start_compile_thread name='C2 CompilerThread6' thread='11292' process='7280' stamp='0.191'/>
<task compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='11023' iicount='11023' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='11024'/>
<parse method='832' uses='11024' stamp='0.432'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='11392'/>
<call method='834' count='10555' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='11024' stamp='0.432'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='16' compiler='C2' level='4' iicount='12300'/>
<call method='835' count='10921' prof_factor='0.967697' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='11023' stamp='0.432'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='12026' not_taken='274' cnt='12300' prob='0.977724'/>
<bc code='183' bci='17'/>
<method id='837' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='454'/>
<call method='837' count='263' prof_factor='0.896179' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='246' stamp='0.432'>
<bc code='183' bci='31'/>
<method id='841' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='841' count='-1' prof_factor='0.54185' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='841' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='174' live='172' memory='50160' stamp='0.449'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' compile_id='18' compiler='C1' level='3' iicount='516'/>
<call method='839' count='263' prof_factor='0.896179' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='246' stamp='0.504'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3207'/>
<call method='844' count='-1' prof_factor='0.476744' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='845' count='-1' prof_factor='0.476744' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='366' live='362' memory='88816' stamp='0.504'/>
</parse>
<parse_done nodes='396' live='391' memory='95848' stamp='0.523'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='446' live='438' memory='105080' stamp='0.523'/>
</parse>
<parse_done nodes='467' live='458' memory='108304' stamp='0.523'/>
</parse>
<phase_done name='parse' nodes='469' live='292' stamp='0.523'/>
</phase>
<phase name='optimizer' nodes='469' live='292' stamp='0.524'>
<phase name='escapeAnalysis' nodes='473' live='288' stamp='0.524'>
<phase name='connectionGraph' nodes='473' live='288' stamp='0.524'>
<phase_done name='connectionGraph' nodes='473' live='288' stamp='0.524'/>
</phase>
<phase_done name='escapeAnalysis' nodes='473' live='288' stamp='0.524'/>
</phase>
<phase name='ccp' nodes='473' live='288' stamp='0.524'>
<phase_done name='ccp' nodes='473' live='288' stamp='0.524'/>
</phase>
<phase name='idealLoop' nodes='473' live='287' stamp='0.524'>
<phase_done name='idealLoop' nodes='491' live='278' stamp='0.524'/>
</phase>
<phase name='idealLoop' nodes='491' live='278' stamp='0.524'>
<phase_done name='idealLoop' nodes='497' live='278' stamp='0.524'/>
</phase>
<phase_done name='optimizer' nodes='658' live='405' stamp='0.524'/>
</phase>
<phase name='matcher' nodes='658' live='405' stamp='0.524'>
<phase_done name='matcher' nodes='400' live='400' stamp='0.525'/>
</phase>
<phase name='regalloc' nodes='508' live='507' stamp='0.525'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='648' live='598' stamp='0.526'/>
</phase>
<phase name='output' nodes='650' live='600' stamp='0.527'>
<phase_done name='output' nodes='676' live='615' stamp='0.535'/>
</phase>
<code_cache total_blobs='286' nmethods='29' adapters='165' free_code_cache='248763712'/>
<task_done success='1' nmsize='1384' count='11113' inlined_bytes='125' stamp='0.554'/>
</task>
<task compile_id='36' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='5047531' iicount='1' stamp='0.581'>
<phase name='parse' nodes='3' live='3' stamp='0.624'>
<type id='724' name='void'/>
<klass id='832' name='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest' flags='1'/>
<method id='833' holder='832' name='test' return='724' flags='10' bytes='18' iicount='1'/>
<parse method='833' uses='1' stamp='0.624'>
<bc code='158' bci='7'/>
<branch target_bci='17' taken='0' not_taken='4152319' cnt='4.15232e+006' prob='never'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='17' taken='0' not_taken='4152319' cnt='4.15232e+006' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='97' live='94' memory='33584' stamp='0.624'/>
</parse>
<phase_done name='parse' nodes='97' live='60' stamp='0.624'/>
</phase>
<phase name='optimizer' nodes='97' live='60' stamp='0.624'>
<phase name='idealLoop' nodes='97' live='55' stamp='0.624'>
<loop_tree>
<loop idx='181' main_loop='181' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='198' live='122' stamp='0.624'/>
</phase>
<phase name='idealLoop' nodes='198' live='122' stamp='0.624'>
<loop_tree>
<loop idx='148' inner_loop='1' pre_loop='106' >
</loop>
<loop idx='225' inner_loop='1' main_loop='225' >
</loop>
<loop idx='121' inner_loop='1' post_loop='106' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='235' live='147' stamp='0.624'/>
</phase>
<phase name='idealLoop' nodes='235' live='147' stamp='0.624'>
<loop_tree>
<loop idx='148' inner_loop='1' pre_loop='106' >
</loop>
<loop idx='253' inner_loop='1' main_loop='253' >
</loop>
<loop idx='121' inner_loop='1' post_loop='106' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='288' live='188' stamp='0.624'/>
</phase>
<phase name='ccp' nodes='288' live='188' stamp='0.624'>
<phase_done name='ccp' nodes='288' live='188' stamp='0.624'/>
</phase>
<phase name='idealLoop' nodes='288' live='188' stamp='0.624'>
<loop_tree>
<loop idx='148' inner_loop='1' pre_loop='106' >
</loop>
<loop idx='253' inner_loop='1' main_loop='253' >
</loop>
<loop idx='121' inner_loop='1' post_loop='106' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='291' live='172' stamp='0.625'/>
</phase>
<phase name='idealLoop' nodes='291' live='172' stamp='0.625'>
<loop_tree>
<loop idx='148' inner_loop='1' pre_loop='106' >
</loop>
<loop idx='253' inner_loop='1' main_loop='253' >
</loop>
<loop idx='121' inner_loop='1' post_loop='106' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='294' live='148' stamp='0.625'/>
</phase>
<phase_done name='optimizer' nodes='294' live='146' stamp='0.625'/>
</phase>
<phase name='matcher' nodes='294' live='146' stamp='0.625'>
<phase_done name='matcher' nodes='142' live='142' stamp='0.625'/>
</phase>
<phase name='regalloc' nodes='157' live='157' stamp='0.625'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='169' live='169' stamp='0.625'/>
</phase>
<phase name='output' nodes='169' live='169' stamp='0.625'>
<phase_done name='output' nodes='181' live='176' stamp='0.633'/>
</phase>
<code_cache total_blobs='296' nmethods='35' adapters='171' free_code_cache='248747328'/>
<task_done success='1' nmsize='248' count='1' backedge_count='5047531' stamp='0.664'/>
</task>
</compilation_log>
<compilation_log thread='22060'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread7' thread='22060' process='7280' stamp='0.191'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='18044'>
<start_compile_thread name='C2 CompilerThread5' thread='18044' process='7280' stamp='0.191'/>
<task compile_id='16' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='12300' iicount='12300' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.321'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='12300'/>
<parse method='832' uses='12300' stamp='0.321'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='12026' not_taken='274' cnt='12300' prob='0.977724'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='454'/>
<call method='834' count='263' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='274' stamp='0.321'>
<bc code='183' bci='31'/>
<method id='837' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='837' count='-1' prof_factor='0.603524' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='837' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.321'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='511'/>
<call method='836' count='263' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='274' stamp='0.321'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3146'/>
<call method='840' count='-1' prof_factor='0.536204' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='841' count='-1' prof_factor='0.536204' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77672' stamp='0.321'/>
</parse>
<parse_done nodes='347' live='342' memory='83016' stamp='0.333'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='0.333'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='0.333'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='0.333'>
<phase name='connectionGraph' nodes='354' live='219' stamp='0.333'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='0.333'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='0.333'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='0.333'>
<phase_done name='ccp' nodes='354' live='219' stamp='0.333'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='0.333'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='0.334'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='0.334'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='0.334'/>
</phase>
<phase_done name='optimizer' nodes='421' live='243' stamp='0.334'/>
</phase>
<phase name='matcher' nodes='421' live='243' stamp='0.334'>
<phase_done name='matcher' nodes='245' live='245' stamp='0.334'/>
</phase>
<phase name='regalloc' nodes='308' live='307' stamp='0.334'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='380' live='358' stamp='0.336'/>
</phase>
<phase name='output' nodes='380' live='358' stamp='0.336'>
<phase_done name='output' nodes='401' live='370' stamp='0.353'/>
</phase>
<code_cache total_blobs='269' nmethods='16' adapters='162' free_code_cache='248793408'/>
<task_done success='1' nmsize='680' count='12300' inlined_bytes='69' stamp='0.378'/>
</task>
<task compile_id='34' compile_kind='osr' method='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest test ()V' bytes='18' count='1' backedge_count='906193' iicount='1' osr_bci='3' stamp='0.535'>
<phase name='parse' nodes='3' live='3' stamp='0.535'>
<type id='724' name='void'/>
<klass id='832' name='me/giraffetree/java/boomjava/concurrent/problem/volatile_word/VolatileWriteTest' flags='1'/>
<method id='833' holder='832' name='test' return='724' flags='10' bytes='18' iicount='1'/>
<parse method='833' uses='1' osr_bci='3' stamp='0.535'>
<uncommon_trap bci='3' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='3' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='17' taken='0' not_taken='18464' cnt='18464' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='102' live='99' memory='34904' stamp='0.535'/>
</parse>
<phase_done name='parse' nodes='102' live='70' stamp='0.535'/>
</phase>
<phase name='optimizer' nodes='102' live='70' stamp='0.535'>
<phase name='idealLoop' nodes='102' live='64' stamp='0.535'>
<loop_tree>
<loop idx='102' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='137' live='74' stamp='0.535'/>
</phase>
<phase name='idealLoop' nodes='137' live='74' stamp='0.535'>
<loop_tree>
<loop idx='219' main_loop='219' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='122' stamp='0.535'/>
</phase>
<phase name='idealLoop' nodes='245' live='122' stamp='0.535'>
<loop_tree>
<loop idx='182' inner_loop='1' pre_loop='144' >
</loop>
<loop idx='257' inner_loop='1' main_loop='257' >
</loop>
<loop idx='152' inner_loop='1' post_loop='144' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='277' live='142' stamp='0.535'/>
</phase>
<phase name='ccp' nodes='277' live='142' stamp='0.535'>
<phase_done name='ccp' nodes='277' live='142' stamp='0.535'/>
</phase>
<phase name='idealLoop' nodes='277' live='142' stamp='0.535'>
<loop_tree>
<loop idx='182' inner_loop='1' pre_loop='144' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='152' inner_loop='1' post_loop='144' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='335' live='184' stamp='0.536'/>
</phase>
<phase name='idealLoop' nodes='335' live='184' stamp='0.536'>
<loop_tree>
<loop idx='182' inner_loop='1' pre_loop='144' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='152' inner_loop='1' post_loop='144' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='181' stamp='0.536'/>
</phase>
<phase_done name='optimizer' nodes='338' live='181' stamp='0.536'/>
</phase>
<phase name='matcher' nodes='338' live='181' stamp='0.536'>
<phase_done name='matcher' nodes='178' live='178' stamp='0.536'/>
</phase>
<phase name='regalloc' nodes='206' live='206' stamp='0.536'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='220' live='219' stamp='0.536'/>
</phase>
<phase name='output' nodes='220' live='219' stamp='0.536'>
<phase_done name='output' nodes='233' live='227' stamp='0.554'/>
</phase>
<code_cache total_blobs='287' nmethods='30' adapters='165' free_code_cache='248761216'/>
<task_done success='1' nmsize='280' count='1' backedge_count='5046507' stamp='0.565'/>
</task>
</compilation_log>
<compilation_log thread='11168'>
<start_compile_thread name='C2 CompilerThread4' thread='11168' process='7280' stamp='0.191'/>
<task compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='8077' iicount='8077' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='8077'/>
<parse method='832' uses='8077' stamp='0.321'>
<parse_done nodes='54' live='53' memory='27160' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.321'>
<phase name='ccp' nodes='56' live='38' stamp='0.321'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.321'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.321'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.321'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.321'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.321'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.321'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.321'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.321'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.321'>
<phase_done name='output' nodes='55' live='53' stamp='0.321'/>
</phase>
<code_cache total_blobs='263' nmethods='12' adapters='159' free_code_cache='248795456'/>
<task_done success='1' nmsize='152' count='8082' stamp='0.333'/>
</task>
<task compile_id='31' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='11400' iicount='11400' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='11434'/>
<parse method='832' uses='11434' stamp='0.432'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='16' compiler='C2' level='4' iicount='12300'/>
<call method='834' count='10921' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='11433' stamp='0.432'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='12026' not_taken='274' cnt='12300' prob='0.977724'/>
<bc code='183' bci='17'/>
<method id='835' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='454'/>
<call method='835' count='263' prof_factor='0.929512' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='255' stamp='0.496'>
<bc code='183' bci='31'/>
<method id='839' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='839' count='-1' prof_factor='0.561674' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='839' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='0.504'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' compile_id='18' compiler='C1' level='3' iicount='516'/>
<call method='837' count='263' prof_factor='0.929512' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='255' stamp='0.523'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='30' compiler='C1' level='3' iicount='3207'/>
<call method='842' count='-1' prof_factor='0.494186' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='843' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='4224'/>
<call method='843' count='-1' prof_factor='0.494186' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='0.524'/>
</parse>
<parse_done nodes='365' live='360' memory='89736' stamp='0.535'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98440' stamp='0.535'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='0.535'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='0.535'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='0.535'>
<phase name='connectionGraph' nodes='421' live='256' stamp='0.535'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='0.535'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='0.535'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='0.535'>
<phase_done name='ccp' nodes='421' live='256' stamp='0.535'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='0.535'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='0.535'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='0.535'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='0.536'/>
</phase>
<phase_done name='optimizer' nodes='501' live='282' stamp='0.536'/>
</phase>
<phase name='matcher' nodes='501' live='282' stamp='0.536'>
<phase_done name='matcher' nodes='283' live='283' stamp='0.536'/>
</phase>
<phase name='regalloc' nodes='352' live='351' stamp='0.536'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='451' live='418' stamp='0.537'/>
</phase>
<phase name='output' nodes='451' live='418' stamp='0.537'>
<phase_done name='output' nodes='470' live='430' stamp='0.554'/>
</phase>
<code_cache total_blobs='287' nmethods='31' adapters='166' free_code_cache='248770496'/>
<task_done success='1' nmsize='808' count='11436' inlined_bytes='96' stamp='0.581'/>
</task>
</compilation_log>
<compilation_log thread='20704'>
<start_compile_thread name='C2 CompilerThread1' thread='20704' process='7280' stamp='0.190'/>
<task compile_id='17' method='java/lang/String length ()I' bytes='6' count='29062' iicount='29062' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='29062'/>
<parse method='832' uses='29062' stamp='0.321'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.321'>
<phase name='ccp' nodes='45' live='27' stamp='0.321'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.321'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.321'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.321'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.321'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.321'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.321'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.321'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.321'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.321'>
<phase_done name='output' nodes='38' live='37' stamp='0.333'/>
</phase>
<code_cache total_blobs='270' nmethods='14' adapters='161' free_code_cache='248773440'/>
<task_done success='1' nmsize='120' count='29062' stamp='0.353'/>
</task>
</compilation_log>
<compilation_log thread='14484'>
<start_compile_thread name='C2 CompilerThread3' thread='14484' process='7280' stamp='0.190'/>
<task compile_id='1' method='java/lang/String charAt (I)C' bytes='29' count='114570' iicount='114570' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='114570'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='114570' stamp='0.321'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='114570' cnt='114570' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='114570' not_taken='0' cnt='114570' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.321'>
<phase name='ccp' nodes='103' live='63' stamp='0.321'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.321'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.321'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.321'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.321'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.321'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.321'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.321'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.321'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.321'>
<phase_done name='output' nodes='93' live='85' stamp='0.333'/>
</phase>
<code_cache total_blobs='270' nmethods='13' adapters='160' free_code_cache='248769280'/>
<task_done success='1' nmsize='216' count='114570' stamp='0.344'/>
</task>
<task compile_id='32' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='12326' iicount='12326' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='12326'/>
<parse method='833' uses='12326' stamp='0.432'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='845' not_taken='11481' cnt='12326' prob='0.0685543'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='10976' not_taken='505' cnt='11481' prob='0.956014'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.432'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.432'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.432'>
<phase name='ccp' nodes='48' live='27' stamp='0.432'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.432'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.432'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.432'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.432'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.432'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.433'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.433'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.433'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.433'>
<phase_done name='output' nodes='46' live='43' stamp='0.449'/>
</phase>
<code_cache total_blobs='280' nmethods='25' adapters='165' free_code_cache='248780736'/>
<task_done success='1' nmsize='120' count='12326' stamp='0.504'/>
</task>
</compilation_log>
<compilation_log thread='22908'>
<start_compile_thread name='C2 CompilerThread2' thread='22908' process='7280' stamp='0.190'/>
<task compile_id='8' method='java/lang/String hashCode ()I' bytes='55' count='2284' backedge_count='33412' iicount='2284' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='2284'/>
<parse method='832' uses='2284' stamp='0.321'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='1112' not_taken='797' cnt='1909' prob='0.582504'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='796' cnt='797' prob='0.00125471'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='796' not_taken='29299' cnt='30095' prob='0.0264496'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='796' not_taken='29299' cnt='29299' prob='0.0264496'/>
<parse_done nodes='190' live='184' memory='50048' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.321'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.321'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.321'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.321'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.322'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.322'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.322'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.322'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.322'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.322'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.322'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='0.322'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='0.322'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.323'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.323'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.323'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.323'>
<phase_done name='output' nodes='209' live='200' stamp='0.333'/>
</phase>
<code_cache total_blobs='270' nmethods='15' adapters='162' free_code_cache='248783296'/>
<task_done success='1' nmsize='376' count='2288' backedge_count='33507' stamp='0.364'/>
</task>
<task compile_id='27' method='java/lang/String indexOf (II)I' bytes='70' count='835' backedge_count='40087' iicount='835' stamp='0.394'>
<phase name='parse' nodes='3' live='3' stamp='0.394'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='835'/>
<parse method='832' uses='835' stamp='0.432'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='635' not_taken='0' cnt='635' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='531' not_taken='104' cnt='635' prob='0.83622'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='531' cnt='531' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='513' not_taken='35088' cnt='35601' prob='0.0144097'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='35070' not_taken='18' cnt='35088' prob='0.999487'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='513' not_taken='35088' cnt='35070' prob='0.0144097'/>
<parse_done nodes='184' live='174' memory='50272' stamp='0.432'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.432'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.432'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.432'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.433'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.433'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.433'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.433'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.433'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.433'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.433'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.433'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.433'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.433'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='209' stamp='0.433'/>
</phase>
<phase name='idealLoop' nodes='342' live='209' stamp='0.433'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='206' stamp='0.433'/>
</phase>
<phase_done name='optimizer' nodes='372' live='203' stamp='0.433'/>
</phase>
<phase name='matcher' nodes='372' live='203' stamp='0.433'>
<phase_done name='matcher' nodes='161' live='161' stamp='0.433'/>
</phase>
<phase name='regalloc' nodes='227' live='226' stamp='0.434'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='244' live='241' stamp='0.434'/>
</phase>
<phase name='output' nodes='244' live='241' stamp='0.434'>
<phase_done name='output' nodes='270' live='254' stamp='0.449'/>
</phase>
<code_cache total_blobs='281' nmethods='24' adapters='165' free_code_cache='248769984'/>
<task_done success='1' nmsize='440' count='841' backedge_count='40478' stamp='0.495'/>
</task>
</compilation_log>
<compilation_log thread='18648'>
<start_compile_thread name='C2 CompilerThread0' thread='18648' process='7280' stamp='0.189'/>
<task compile_id='6' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='38348' backedge_count='14614' iicount='38348' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='38348'/>
<parse method='832' uses='38348' stamp='0.321'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='38088' not_taken='260' cnt='38348' prob='0.99322'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='38088' cnt='38088' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='36542' not_taken='1546' cnt='38088' prob='0.95941'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='49' not_taken='14394' cnt='14443' prob='0.00339265'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='12897' not_taken='1497' cnt='14394' prob='0.895998'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='49' not_taken='14394' cnt='12897' prob='0.00339265'/>
<parse_done nodes='272' live='258' memory='71384' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='273' live='183' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='273' live='183' stamp='0.321'>
<phase name='idealLoop' nodes='277' live='171' stamp='0.321'>
<loop_tree>
<loop idx='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='302' live='151' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='302' live='151' stamp='0.322'>
<loop_tree>
<loop idx='461' inner_loop='1' main_loop='461' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='517' live='264' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='517' live='264' stamp='0.322'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='569' live='300' stamp='0.322'/>
</phase>
<phase name='ccp' nodes='569' live='300' stamp='0.322'>
<phase_done name='ccp' nodes='569' live='300' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='569' live='299' stamp='0.322'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='572' live='278' stamp='0.323'/>
</phase>
<phase name='idealLoop' nodes='572' live='278' stamp='0.323'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='575' live='275' stamp='0.323'/>
</phase>
<phase_done name='optimizer' nodes='664' live='265' stamp='0.323'/>
</phase>
<phase name='matcher' nodes='664' live='265' stamp='0.323'>
<phase_done name='matcher' nodes='224' live='224' stamp='0.323'/>
</phase>
<phase name='regalloc' nodes='304' live='301' stamp='0.324'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='348' live='329' stamp='0.325'/>
</phase>
<phase name='output' nodes='348' live='329' stamp='0.325'>
<phase_done name='output' nodes='370' live='341' stamp='0.344'/>
</phase>
<code_cache total_blobs='268' nmethods='17' adapters='162' free_code_cache='248803264'/>
<task_done success='1' nmsize='600' count='38354' backedge_count='14630' stamp='0.394'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.679'/>
</hotspot_log>
